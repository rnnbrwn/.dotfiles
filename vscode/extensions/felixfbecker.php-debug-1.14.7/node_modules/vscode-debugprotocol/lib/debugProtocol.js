/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVidWdQcm90b2NvbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9kZWJ1Z1Byb3RvY29sLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Z0dBR2dHO0FBRWhHLFlBQVksQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKiBEZWNsYXJhdGlvbiBtb2R1bGUgZGVzY3JpYmluZyB0aGUgVlMgQ29kZSBkZWJ1ZyBwcm90b2NvbC5cblx0QXV0by1nZW5lcmF0ZWQgZnJvbSBqc29uIHNjaGVtYS4gRG8gbm90IGVkaXQgbWFudWFsbHkuXG4qL1xuZXhwb3J0IG1vZHVsZSBEZWJ1Z1Byb3RvY29sIHtcblxuXHQvKiogQmFzZSBjbGFzcyBvZiByZXF1ZXN0cywgcmVzcG9uc2VzLCBhbmQgZXZlbnRzLiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFByb3RvY29sTWVzc2FnZSB7XG5cdFx0LyoqIFNlcXVlbmNlIG51bWJlciAoYWxzbyBrbm93biBhcyBtZXNzYWdlIElEKS4gRm9yIHByb3RvY29sIG1lc3NhZ2VzIG9mIHR5cGUgJ3JlcXVlc3QnIHRoaXMgSUQgY2FuIGJlIHVzZWQgdG8gY2FuY2VsIHRoZSByZXF1ZXN0LiAqL1xuXHRcdHNlcTogbnVtYmVyO1xuXHRcdC8qKiBNZXNzYWdlIHR5cGUuXG5cdFx0XHRWYWx1ZXM6ICdyZXF1ZXN0JywgJ3Jlc3BvbnNlJywgJ2V2ZW50JywgZXRjLlxuXHRcdCovXG5cdFx0dHlwZTogJ3JlcXVlc3QnIHwgJ3Jlc3BvbnNlJyB8ICdldmVudCcgfCBzdHJpbmc7XG5cdH1cblxuXHQvKiogQSBjbGllbnQgb3IgZGVidWcgYWRhcHRlciBpbml0aWF0ZWQgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBSZXF1ZXN0IGV4dGVuZHMgUHJvdG9jb2xNZXNzYWdlIHtcblx0XHQvLyB0eXBlOiAncmVxdWVzdCc7XG5cdFx0LyoqIFRoZSBjb21tYW5kIHRvIGV4ZWN1dGUuICovXG5cdFx0Y29tbWFuZDogc3RyaW5nO1xuXHRcdC8qKiBPYmplY3QgY29udGFpbmluZyBhcmd1bWVudHMgZm9yIHRoZSBjb21tYW5kLiAqL1xuXHRcdGFyZ3VtZW50cz86IGFueTtcblx0fVxuXG5cdC8qKiBBIGRlYnVnIGFkYXB0ZXIgaW5pdGlhdGVkIGV2ZW50LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEV2ZW50IGV4dGVuZHMgUHJvdG9jb2xNZXNzYWdlIHtcblx0XHQvLyB0eXBlOiAnZXZlbnQnO1xuXHRcdC8qKiBUeXBlIG9mIGV2ZW50LiAqL1xuXHRcdGV2ZW50OiBzdHJpbmc7XG5cdFx0LyoqIEV2ZW50LXNwZWNpZmljIGluZm9ybWF0aW9uLiAqL1xuXHRcdGJvZHk/OiBhbnk7XG5cdH1cblxuXHQvKiogUmVzcG9uc2UgZm9yIGEgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBSZXNwb25zZSBleHRlbmRzIFByb3RvY29sTWVzc2FnZSB7XG5cdFx0Ly8gdHlwZTogJ3Jlc3BvbnNlJztcblx0XHQvKiogU2VxdWVuY2UgbnVtYmVyIG9mIHRoZSBjb3JyZXNwb25kaW5nIHJlcXVlc3QuICovXG5cdFx0cmVxdWVzdF9zZXE6IG51bWJlcjtcblx0XHQvKiogT3V0Y29tZSBvZiB0aGUgcmVxdWVzdC5cblx0XHRcdElmIHRydWUsIHRoZSByZXF1ZXN0IHdhcyBzdWNjZXNzZnVsIGFuZCB0aGUgJ2JvZHknIGF0dHJpYnV0ZSBtYXkgY29udGFpbiB0aGUgcmVzdWx0IG9mIHRoZSByZXF1ZXN0LlxuXHRcdFx0SWYgdGhlIHZhbHVlIGlzIGZhbHNlLCB0aGUgYXR0cmlidXRlICdtZXNzYWdlJyBjb250YWlucyB0aGUgZXJyb3IgaW4gc2hvcnQgZm9ybSBhbmQgdGhlICdib2R5JyBtYXkgY29udGFpbiBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIChzZWUgJ0Vycm9yUmVzcG9uc2UuYm9keS5lcnJvcicpLlxuXHRcdCovXG5cdFx0c3VjY2VzczogYm9vbGVhbjtcblx0XHQvKiogVGhlIGNvbW1hbmQgcmVxdWVzdGVkLiAqL1xuXHRcdGNvbW1hbmQ6IHN0cmluZztcblx0XHQvKiogQ29udGFpbnMgdGhlIHJhdyBlcnJvciBpbiBzaG9ydCBmb3JtIGlmICdzdWNjZXNzJyBpcyBmYWxzZS5cblx0XHRcdFRoaXMgcmF3IGVycm9yIG1pZ2h0IGJlIGludGVycHJldGVkIGJ5IHRoZSBmcm9udGVuZCBhbmQgaXMgbm90IHNob3duIGluIHRoZSBVSS5cblx0XHRcdFNvbWUgcHJlZGVmaW5lZCB2YWx1ZXMgZXhpc3QuXG5cdFx0XHRWYWx1ZXM6IFxuXHRcdFx0J2NhbmNlbGxlZCc6IHJlcXVlc3Qgd2FzIGNhbmNlbGxlZC5cblx0XHRcdGV0Yy5cblx0XHQqL1xuXHRcdG1lc3NhZ2U/OiAnY2FuY2VsbGVkJyB8IHN0cmluZztcblx0XHQvKiogQ29udGFpbnMgcmVxdWVzdCByZXN1bHQgaWYgc3VjY2VzcyBpcyB0cnVlIGFuZCBvcHRpb25hbCBlcnJvciBkZXRhaWxzIGlmIHN1Y2Nlc3MgaXMgZmFsc2UuICovXG5cdFx0Ym9keT86IGFueTtcblx0fVxuXG5cdC8qKiBPbiBlcnJvciAod2hlbmV2ZXIgJ3N1Y2Nlc3MnIGlzIGZhbHNlKSwgdGhlIGJvZHkgY2FuIHByb3ZpZGUgbW9yZSBkZXRhaWxzLiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEVycm9yUmVzcG9uc2UgZXh0ZW5kcyBSZXNwb25zZSB7XG5cdFx0Ym9keToge1xuXHRcdFx0LyoqIEFuIG9wdGlvbmFsLCBzdHJ1Y3R1cmVkIGVycm9yIG1lc3NhZ2UuICovXG5cdFx0XHRlcnJvcj86IE1lc3NhZ2U7XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBDYW5jZWwgcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAnY2FuY2VsJy5cblx0XHRUaGUgJ2NhbmNlbCcgcmVxdWVzdCBpcyB1c2VkIGJ5IHRoZSBmcm9udGVuZCBpbiB0d28gc2l0dWF0aW9uczpcblx0XHQtIHRvIGluZGljYXRlIHRoYXQgaXQgaXMgbm8gbG9uZ2VyIGludGVyZXN0ZWQgaW4gdGhlIHJlc3VsdCBwcm9kdWNlZCBieSBhIHNwZWNpZmljIHJlcXVlc3QgaXNzdWVkIGVhcmxpZXJcblx0XHQtIHRvIGNhbmNlbCBhIHByb2dyZXNzIHNlcXVlbmNlLiBDbGllbnRzIHNob3VsZCBvbmx5IGNhbGwgdGhpcyByZXF1ZXN0IGlmIHRoZSBjYXBhYmlsaXR5ICdzdXBwb3J0c0NhbmNlbFJlcXVlc3QnIGlzIHRydWUuXG5cdFx0VGhpcyByZXF1ZXN0IGhhcyBhIGhpbnQgY2hhcmFjdGVyaXN0aWM6IGEgZGVidWcgYWRhcHRlciBjYW4gb25seSBiZSBleHBlY3RlZCB0byBtYWtlIGEgJ2Jlc3QgZWZmb3J0JyBpbiBob25vdXJpbmcgdGhpcyByZXF1ZXN0IGJ1dCB0aGVyZSBhcmUgbm8gZ3VhcmFudGVlcy5cblx0XHRUaGUgJ2NhbmNlbCcgcmVxdWVzdCBtYXkgcmV0dXJuIGFuIGVycm9yIGlmIGl0IGNvdWxkIG5vdCBjYW5jZWwgYW4gb3BlcmF0aW9uIGJ1dCBhIGZyb250ZW5kIHNob3VsZCByZWZyYWluIGZyb20gcHJlc2VudGluZyB0aGlzIGVycm9yIHRvIGVuZCB1c2Vycy5cblx0XHRBIGZyb250ZW5kIGNsaWVudCBzaG91bGQgb25seSBjYWxsIHRoaXMgcmVxdWVzdCBpZiB0aGUgY2FwYWJpbGl0eSAnc3VwcG9ydHNDYW5jZWxSZXF1ZXN0JyBpcyB0cnVlLlxuXHRcdFRoZSByZXF1ZXN0IHRoYXQgZ290IGNhbmNlbGVkIHN0aWxsIG5lZWRzIHRvIHNlbmQgYSByZXNwb25zZSBiYWNrLiBUaGlzIGNhbiBlaXRoZXIgYmUgYSBub3JtYWwgcmVzdWx0ICgnc3VjY2VzcycgYXR0cmlidXRlIHRydWUpXG5cdFx0b3IgYW4gZXJyb3IgcmVzcG9uc2UgKCdzdWNjZXNzJyBhdHRyaWJ1dGUgZmFsc2UgYW5kIHRoZSAnbWVzc2FnZScgc2V0IHRvICdjYW5jZWxsZWQnKS5cblx0XHRSZXR1cm5pbmcgcGFydGlhbCByZXN1bHRzIGZyb20gYSBjYW5jZWxsZWQgcmVxdWVzdCBpcyBwb3NzaWJsZSBidXQgcGxlYXNlIG5vdGUgdGhhdCBhIGZyb250ZW5kIGNsaWVudCBoYXMgbm8gZ2VuZXJpYyB3YXkgZm9yIGRldGVjdGluZyB0aGF0IGEgcmVzcG9uc2UgaXMgcGFydGlhbCBvciBub3QuXG5cdFx0IFRoZSBwcm9ncmVzcyB0aGF0IGdvdCBjYW5jZWxsZWQgc3RpbGwgbmVlZHMgdG8gc2VuZCBhICdwcm9ncmVzc0VuZCcgZXZlbnQgYmFjay5cblx0XHQgQSBjbGllbnQgc2hvdWxkIG5vdCBhc3N1bWUgdGhhdCBwcm9ncmVzcyBqdXN0IGdvdCBjYW5jZWxsZWQgYWZ0ZXIgc2VuZGluZyB0aGUgJ2NhbmNlbCcgcmVxdWVzdC5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBDYW5jZWxSZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG5cdFx0Ly8gY29tbWFuZDogJ2NhbmNlbCc7XG5cdFx0YXJndW1lbnRzPzogQ2FuY2VsQXJndW1lbnRzO1xuXHR9XG5cblx0LyoqIEFyZ3VtZW50cyBmb3IgJ2NhbmNlbCcgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBDYW5jZWxBcmd1bWVudHMge1xuXHRcdC8qKiBUaGUgSUQgKGF0dHJpYnV0ZSAnc2VxJykgb2YgdGhlIHJlcXVlc3QgdG8gY2FuY2VsLiBJZiBtaXNzaW5nIG5vIHJlcXVlc3QgaXMgY2FuY2VsbGVkLlxuXHRcdFx0Qm90aCBhICdyZXF1ZXN0SWQnIGFuZCBhICdwcm9ncmVzc0lkJyBjYW4gYmUgc3BlY2lmaWVkIGluIG9uZSByZXF1ZXN0LlxuXHRcdCovXG5cdFx0cmVxdWVzdElkPzogbnVtYmVyO1xuXHRcdC8qKiBUaGUgSUQgKGF0dHJpYnV0ZSAncHJvZ3Jlc3NJZCcpIG9mIHRoZSBwcm9ncmVzcyB0byBjYW5jZWwuIElmIG1pc3Npbmcgbm8gcHJvZ3Jlc3MgaXMgY2FuY2VsbGVkLlxuXHRcdFx0Qm90aCBhICdyZXF1ZXN0SWQnIGFuZCBhICdwcm9ncmVzc0lkJyBjYW4gYmUgc3BlY2lmaWVkIGluIG9uZSByZXF1ZXN0LlxuXHRcdCovXG5cdFx0cHJvZ3Jlc3NJZD86IHN0cmluZztcblx0fVxuXG5cdC8qKiBSZXNwb25zZSB0byAnY2FuY2VsJyByZXF1ZXN0LiBUaGlzIGlzIGp1c3QgYW4gYWNrbm93bGVkZ2VtZW50LCBzbyBubyBib2R5IGZpZWxkIGlzIHJlcXVpcmVkLiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIENhbmNlbFJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHR9XG5cblx0LyoqIEV2ZW50IG1lc3NhZ2UgZm9yICdpbml0aWFsaXplZCcgZXZlbnQgdHlwZS5cblx0XHRUaGlzIGV2ZW50IGluZGljYXRlcyB0aGF0IHRoZSBkZWJ1ZyBhZGFwdGVyIGlzIHJlYWR5IHRvIGFjY2VwdCBjb25maWd1cmF0aW9uIHJlcXVlc3RzIChlLmcuIFNldEJyZWFrcG9pbnRzUmVxdWVzdCwgU2V0RXhjZXB0aW9uQnJlYWtwb2ludHNSZXF1ZXN0KS5cblx0XHRBIGRlYnVnIGFkYXB0ZXIgaXMgZXhwZWN0ZWQgdG8gc2VuZCB0aGlzIGV2ZW50IHdoZW4gaXQgaXMgcmVhZHkgdG8gYWNjZXB0IGNvbmZpZ3VyYXRpb24gcmVxdWVzdHMgKGJ1dCBub3QgYmVmb3JlIHRoZSAnaW5pdGlhbGl6ZScgcmVxdWVzdCBoYXMgZmluaXNoZWQpLlxuXHRcdFRoZSBzZXF1ZW5jZSBvZiBldmVudHMvcmVxdWVzdHMgaXMgYXMgZm9sbG93czpcblx0XHQtIGFkYXB0ZXJzIHNlbmRzICdpbml0aWFsaXplZCcgZXZlbnQgKGFmdGVyIHRoZSAnaW5pdGlhbGl6ZScgcmVxdWVzdCBoYXMgcmV0dXJuZWQpXG5cdFx0LSBmcm9udGVuZCBzZW5kcyB6ZXJvIG9yIG1vcmUgJ3NldEJyZWFrcG9pbnRzJyByZXF1ZXN0c1xuXHRcdC0gZnJvbnRlbmQgc2VuZHMgb25lICdzZXRGdW5jdGlvbkJyZWFrcG9pbnRzJyByZXF1ZXN0IChpZiBjYXBhYmlsaXR5ICdzdXBwb3J0c0Z1bmN0aW9uQnJlYWtwb2ludHMnIGlzIHRydWUpXG5cdFx0LSBmcm9udGVuZCBzZW5kcyBhICdzZXRFeGNlcHRpb25CcmVha3BvaW50cycgcmVxdWVzdCBpZiBvbmUgb3IgbW9yZSAnZXhjZXB0aW9uQnJlYWtwb2ludEZpbHRlcnMnIGhhdmUgYmVlbiBkZWZpbmVkIChvciBpZiAnc3VwcG9ydHNDb25maWd1cmF0aW9uRG9uZVJlcXVlc3QnIGlzIG5vdCBkZWZpbmVkIG9yIGZhbHNlKVxuXHRcdC0gZnJvbnRlbmQgc2VuZHMgb3RoZXIgZnV0dXJlIGNvbmZpZ3VyYXRpb24gcmVxdWVzdHNcblx0XHQtIGZyb250ZW5kIHNlbmRzIG9uZSAnY29uZmlndXJhdGlvbkRvbmUnIHJlcXVlc3QgdG8gaW5kaWNhdGUgdGhlIGVuZCBvZiB0aGUgY29uZmlndXJhdGlvbi5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBJbml0aWFsaXplZEV2ZW50IGV4dGVuZHMgRXZlbnQge1xuXHRcdC8vIGV2ZW50OiAnaW5pdGlhbGl6ZWQnO1xuXHR9XG5cblx0LyoqIEV2ZW50IG1lc3NhZ2UgZm9yICdzdG9wcGVkJyBldmVudCB0eXBlLlxuXHRcdFRoZSBldmVudCBpbmRpY2F0ZXMgdGhhdCB0aGUgZXhlY3V0aW9uIG9mIHRoZSBkZWJ1Z2dlZSBoYXMgc3RvcHBlZCBkdWUgdG8gc29tZSBjb25kaXRpb24uXG5cdFx0VGhpcyBjYW4gYmUgY2F1c2VkIGJ5IGEgYnJlYWsgcG9pbnQgcHJldmlvdXNseSBzZXQsIGEgc3RlcHBpbmcgcmVxdWVzdCBoYXMgY29tcGxldGVkLCBieSBleGVjdXRpbmcgYSBkZWJ1Z2dlciBzdGF0ZW1lbnQgZXRjLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFN0b3BwZWRFdmVudCBleHRlbmRzIEV2ZW50IHtcblx0XHQvLyBldmVudDogJ3N0b3BwZWQnO1xuXHRcdGJvZHk6IHtcblx0XHRcdC8qKiBUaGUgcmVhc29uIGZvciB0aGUgZXZlbnQuXG5cdFx0XHRcdEZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5IHRoaXMgc3RyaW5nIGlzIHNob3duIGluIHRoZSBVSSBpZiB0aGUgJ2Rlc2NyaXB0aW9uJyBhdHRyaWJ1dGUgaXMgbWlzc2luZyAoYnV0IGl0IG11c3Qgbm90IGJlIHRyYW5zbGF0ZWQpLlxuXHRcdFx0XHRWYWx1ZXM6ICdzdGVwJywgJ2JyZWFrcG9pbnQnLCAnZXhjZXB0aW9uJywgJ3BhdXNlJywgJ2VudHJ5JywgJ2dvdG8nLCAnZnVuY3Rpb24gYnJlYWtwb2ludCcsICdkYXRhIGJyZWFrcG9pbnQnLCAnaW5zdHJ1Y3Rpb24gYnJlYWtwb2ludCcsIGV0Yy5cblx0XHRcdCovXG5cdFx0XHRyZWFzb246ICdzdGVwJyB8ICdicmVha3BvaW50JyB8ICdleGNlcHRpb24nIHwgJ3BhdXNlJyB8ICdlbnRyeScgfCAnZ290bycgfCAnZnVuY3Rpb24gYnJlYWtwb2ludCcgfCAnZGF0YSBicmVha3BvaW50JyB8ICdpbnN0cnVjdGlvbiBicmVha3BvaW50JyB8IHN0cmluZztcblx0XHRcdC8qKiBUaGUgZnVsbCByZWFzb24gZm9yIHRoZSBldmVudCwgZS5nLiAnUGF1c2VkIG9uIGV4Y2VwdGlvbicuIFRoaXMgc3RyaW5nIGlzIHNob3duIGluIHRoZSBVSSBhcyBpcyBhbmQgbXVzdCBiZSB0cmFuc2xhdGVkLiAqL1xuXHRcdFx0ZGVzY3JpcHRpb24/OiBzdHJpbmc7XG5cdFx0XHQvKiogVGhlIHRocmVhZCB3aGljaCB3YXMgc3RvcHBlZC4gKi9cblx0XHRcdHRocmVhZElkPzogbnVtYmVyO1xuXHRcdFx0LyoqIEEgdmFsdWUgb2YgdHJ1ZSBoaW50cyB0byB0aGUgZnJvbnRlbmQgdGhhdCB0aGlzIGV2ZW50IHNob3VsZCBub3QgY2hhbmdlIHRoZSBmb2N1cy4gKi9cblx0XHRcdHByZXNlcnZlRm9jdXNIaW50PzogYm9vbGVhbjtcblx0XHRcdC8qKiBBZGRpdGlvbmFsIGluZm9ybWF0aW9uLiBFLmcuIGlmIHJlYXNvbiBpcyAnZXhjZXB0aW9uJywgdGV4dCBjb250YWlucyB0aGUgZXhjZXB0aW9uIG5hbWUuIFRoaXMgc3RyaW5nIGlzIHNob3duIGluIHRoZSBVSS4gKi9cblx0XHRcdHRleHQ/OiBzdHJpbmc7XG5cdFx0XHQvKiogSWYgJ2FsbFRocmVhZHNTdG9wcGVkJyBpcyB0cnVlLCBhIGRlYnVnIGFkYXB0ZXIgY2FuIGFubm91bmNlIHRoYXQgYWxsIHRocmVhZHMgaGF2ZSBzdG9wcGVkLlxuXHRcdFx0XHQtIFRoZSBjbGllbnQgc2hvdWxkIHVzZSB0aGlzIGluZm9ybWF0aW9uIHRvIGVuYWJsZSB0aGF0IGFsbCB0aHJlYWRzIGNhbiBiZSBleHBhbmRlZCB0byBhY2Nlc3MgdGhlaXIgc3RhY2t0cmFjZXMuXG5cdFx0XHRcdC0gSWYgdGhlIGF0dHJpYnV0ZSBpcyBtaXNzaW5nIG9yIGZhbHNlLCBvbmx5IHRoZSB0aHJlYWQgd2l0aCB0aGUgZ2l2ZW4gdGhyZWFkSWQgY2FuIGJlIGV4cGFuZGVkLlxuXHRcdFx0Ki9cblx0XHRcdGFsbFRocmVhZHNTdG9wcGVkPzogYm9vbGVhbjtcblx0XHR9O1xuXHR9XG5cblx0LyoqIEV2ZW50IG1lc3NhZ2UgZm9yICdjb250aW51ZWQnIGV2ZW50IHR5cGUuXG5cdFx0VGhlIGV2ZW50IGluZGljYXRlcyB0aGF0IHRoZSBleGVjdXRpb24gb2YgdGhlIGRlYnVnZ2VlIGhhcyBjb250aW51ZWQuXG5cdFx0UGxlYXNlIG5vdGU6IGEgZGVidWcgYWRhcHRlciBpcyBub3QgZXhwZWN0ZWQgdG8gc2VuZCB0aGlzIGV2ZW50IGluIHJlc3BvbnNlIHRvIGEgcmVxdWVzdCB0aGF0IGltcGxpZXMgdGhhdCBleGVjdXRpb24gY29udGludWVzLCBlLmcuICdsYXVuY2gnIG9yICdjb250aW51ZScuXG5cdFx0SXQgaXMgb25seSBuZWNlc3NhcnkgdG8gc2VuZCBhICdjb250aW51ZWQnIGV2ZW50IGlmIHRoZXJlIHdhcyBubyBwcmV2aW91cyByZXF1ZXN0IHRoYXQgaW1wbGllZCB0aGlzLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIENvbnRpbnVlZEV2ZW50IGV4dGVuZHMgRXZlbnQge1xuXHRcdC8vIGV2ZW50OiAnY29udGludWVkJztcblx0XHRib2R5OiB7XG5cdFx0XHQvKiogVGhlIHRocmVhZCB3aGljaCB3YXMgY29udGludWVkLiAqL1xuXHRcdFx0dGhyZWFkSWQ6IG51bWJlcjtcblx0XHRcdC8qKiBJZiAnYWxsVGhyZWFkc0NvbnRpbnVlZCcgaXMgdHJ1ZSwgYSBkZWJ1ZyBhZGFwdGVyIGNhbiBhbm5vdW5jZSB0aGF0IGFsbCB0aHJlYWRzIGhhdmUgY29udGludWVkLiAqL1xuXHRcdFx0YWxsVGhyZWFkc0NvbnRpbnVlZD86IGJvb2xlYW47XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBFdmVudCBtZXNzYWdlIGZvciAnZXhpdGVkJyBldmVudCB0eXBlLlxuXHRcdFRoZSBldmVudCBpbmRpY2F0ZXMgdGhhdCB0aGUgZGVidWdnZWUgaGFzIGV4aXRlZCBhbmQgcmV0dXJucyBpdHMgZXhpdCBjb2RlLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEV4aXRlZEV2ZW50IGV4dGVuZHMgRXZlbnQge1xuXHRcdC8vIGV2ZW50OiAnZXhpdGVkJztcblx0XHRib2R5OiB7XG5cdFx0XHQvKiogVGhlIGV4aXQgY29kZSByZXR1cm5lZCBmcm9tIHRoZSBkZWJ1Z2dlZS4gKi9cblx0XHRcdGV4aXRDb2RlOiBudW1iZXI7XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBFdmVudCBtZXNzYWdlIGZvciAndGVybWluYXRlZCcgZXZlbnQgdHlwZS5cblx0XHRUaGUgZXZlbnQgaW5kaWNhdGVzIHRoYXQgZGVidWdnaW5nIG9mIHRoZSBkZWJ1Z2dlZSBoYXMgdGVybWluYXRlZC4gVGhpcyBkb2VzICoqbm90KiogbWVhbiB0aGF0IHRoZSBkZWJ1Z2dlZSBpdHNlbGYgaGFzIGV4aXRlZC5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBUZXJtaW5hdGVkRXZlbnQgZXh0ZW5kcyBFdmVudCB7XG5cdFx0Ly8gZXZlbnQ6ICd0ZXJtaW5hdGVkJztcblx0XHRib2R5Pzoge1xuXHRcdFx0LyoqIEEgZGVidWcgYWRhcHRlciBtYXkgc2V0ICdyZXN0YXJ0JyB0byB0cnVlIChvciB0byBhbiBhcmJpdHJhcnkgb2JqZWN0KSB0byByZXF1ZXN0IHRoYXQgdGhlIGZyb250IGVuZCByZXN0YXJ0cyB0aGUgc2Vzc2lvbi5cblx0XHRcdFx0VGhlIHZhbHVlIGlzIG5vdCBpbnRlcnByZXRlZCBieSB0aGUgY2xpZW50IGFuZCBwYXNzZWQgdW5tb2RpZmllZCBhcyBhbiBhdHRyaWJ1dGUgJ19fcmVzdGFydCcgdG8gdGhlICdsYXVuY2gnIGFuZCAnYXR0YWNoJyByZXF1ZXN0cy5cblx0XHRcdCovXG5cdFx0XHRyZXN0YXJ0PzogYW55O1xuXHRcdH07XG5cdH1cblxuXHQvKiogRXZlbnQgbWVzc2FnZSBmb3IgJ3RocmVhZCcgZXZlbnQgdHlwZS5cblx0XHRUaGUgZXZlbnQgaW5kaWNhdGVzIHRoYXQgYSB0aHJlYWQgaGFzIHN0YXJ0ZWQgb3IgZXhpdGVkLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFRocmVhZEV2ZW50IGV4dGVuZHMgRXZlbnQge1xuXHRcdC8vIGV2ZW50OiAndGhyZWFkJztcblx0XHRib2R5OiB7XG5cdFx0XHQvKiogVGhlIHJlYXNvbiBmb3IgdGhlIGV2ZW50LlxuXHRcdFx0XHRWYWx1ZXM6ICdzdGFydGVkJywgJ2V4aXRlZCcsIGV0Yy5cblx0XHRcdCovXG5cdFx0XHRyZWFzb246ICdzdGFydGVkJyB8ICdleGl0ZWQnIHwgc3RyaW5nO1xuXHRcdFx0LyoqIFRoZSBpZGVudGlmaWVyIG9mIHRoZSB0aHJlYWQuICovXG5cdFx0XHR0aHJlYWRJZDogbnVtYmVyO1xuXHRcdH07XG5cdH1cblxuXHQvKiogRXZlbnQgbWVzc2FnZSBmb3IgJ291dHB1dCcgZXZlbnQgdHlwZS5cblx0XHRUaGUgZXZlbnQgaW5kaWNhdGVzIHRoYXQgdGhlIHRhcmdldCBoYXMgcHJvZHVjZWQgc29tZSBvdXRwdXQuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgT3V0cHV0RXZlbnQgZXh0ZW5kcyBFdmVudCB7XG5cdFx0Ly8gZXZlbnQ6ICdvdXRwdXQnO1xuXHRcdGJvZHk6IHtcblx0XHRcdC8qKiBUaGUgb3V0cHV0IGNhdGVnb3J5LiBJZiBub3Qgc3BlY2lmaWVkLCAnY29uc29sZScgaXMgYXNzdW1lZC5cblx0XHRcdFx0VmFsdWVzOiAnY29uc29sZScsICdzdGRvdXQnLCAnc3RkZXJyJywgJ3RlbGVtZXRyeScsIGV0Yy5cblx0XHRcdCovXG5cdFx0XHRjYXRlZ29yeT86ICdjb25zb2xlJyB8ICdzdGRvdXQnIHwgJ3N0ZGVycicgfCAndGVsZW1ldHJ5JyB8IHN0cmluZztcblx0XHRcdC8qKiBUaGUgb3V0cHV0IHRvIHJlcG9ydC4gKi9cblx0XHRcdG91dHB1dDogc3RyaW5nO1xuXHRcdFx0LyoqIFN1cHBvcnQgZm9yIGtlZXBpbmcgYW4gb3V0cHV0IGxvZyBvcmdhbml6ZWQgYnkgZ3JvdXBpbmcgcmVsYXRlZCBtZXNzYWdlcy5cblx0XHRcdFx0J3N0YXJ0JzogU3RhcnQgYSBuZXcgZ3JvdXAgaW4gZXhwYW5kZWQgbW9kZS4gU3Vic2VxdWVudCBvdXRwdXQgZXZlbnRzIGFyZSBtZW1iZXJzIG9mIHRoZSBncm91cCBhbmQgc2hvdWxkIGJlIHNob3duIGluZGVudGVkLlxuXHRcdFx0XHRUaGUgJ291dHB1dCcgYXR0cmlidXRlIGJlY29tZXMgdGhlIG5hbWUgb2YgdGhlIGdyb3VwIGFuZCBpcyBub3QgaW5kZW50ZWQuXG5cdFx0XHRcdCdzdGFydENvbGxhcHNlZCc6IFN0YXJ0IGEgbmV3IGdyb3VwIGluIGNvbGxhcHNlZCBtb2RlLiBTdWJzZXF1ZW50IG91dHB1dCBldmVudHMgYXJlIG1lbWJlcnMgb2YgdGhlIGdyb3VwIGFuZCBzaG91bGQgYmUgc2hvd24gaW5kZW50ZWQgKGFzIHNvb24gYXMgdGhlIGdyb3VwIGlzIGV4cGFuZGVkKS5cblx0XHRcdFx0VGhlICdvdXRwdXQnIGF0dHJpYnV0ZSBiZWNvbWVzIHRoZSBuYW1lIG9mIHRoZSBncm91cCBhbmQgaXMgbm90IGluZGVudGVkLlxuXHRcdFx0XHQnZW5kJzogRW5kIHRoZSBjdXJyZW50IGdyb3VwIGFuZCBkZWNyZWFzZXMgdGhlIGluZGVudGF0aW9uIG9mIHN1YnNlcXVlbnQgb3V0cHV0IGV2ZW50cy5cblx0XHRcdFx0QSBub24gZW1wdHkgJ291dHB1dCcgYXR0cmlidXRlIGlzIHNob3duIGFzIHRoZSB1bmluZGVudGVkIGVuZCBvZiB0aGUgZ3JvdXAuXG5cdFx0XHQqL1xuXHRcdFx0Z3JvdXA/OiAnc3RhcnQnIHwgJ3N0YXJ0Q29sbGFwc2VkJyB8ICdlbmQnO1xuXHRcdFx0LyoqIElmIGFuIGF0dHJpYnV0ZSAndmFyaWFibGVzUmVmZXJlbmNlJyBleGlzdHMgYW5kIGl0cyB2YWx1ZSBpcyA+IDAsIHRoZSBvdXRwdXQgY29udGFpbnMgb2JqZWN0cyB3aGljaCBjYW4gYmUgcmV0cmlldmVkIGJ5IHBhc3NpbmcgJ3ZhcmlhYmxlc1JlZmVyZW5jZScgdG8gdGhlICd2YXJpYWJsZXMnIHJlcXVlc3QuIFRoZSB2YWx1ZSBzaG91bGQgYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIDIxNDc0ODM2NDcgKDJeMzEtMSkuICovXG5cdFx0XHR2YXJpYWJsZXNSZWZlcmVuY2U/OiBudW1iZXI7XG5cdFx0XHQvKiogQW4gb3B0aW9uYWwgc291cmNlIGxvY2F0aW9uIHdoZXJlIHRoZSBvdXRwdXQgd2FzIHByb2R1Y2VkLiAqL1xuXHRcdFx0c291cmNlPzogU291cmNlO1xuXHRcdFx0LyoqIEFuIG9wdGlvbmFsIHNvdXJjZSBsb2NhdGlvbiBsaW5lIHdoZXJlIHRoZSBvdXRwdXQgd2FzIHByb2R1Y2VkLiAqL1xuXHRcdFx0bGluZT86IG51bWJlcjtcblx0XHRcdC8qKiBBbiBvcHRpb25hbCBzb3VyY2UgbG9jYXRpb24gY29sdW1uIHdoZXJlIHRoZSBvdXRwdXQgd2FzIHByb2R1Y2VkLiAqL1xuXHRcdFx0Y29sdW1uPzogbnVtYmVyO1xuXHRcdFx0LyoqIE9wdGlvbmFsIGRhdGEgdG8gcmVwb3J0LiBGb3IgdGhlICd0ZWxlbWV0cnknIGNhdGVnb3J5IHRoZSBkYXRhIHdpbGwgYmUgc2VudCB0byB0ZWxlbWV0cnksIGZvciB0aGUgb3RoZXIgY2F0ZWdvcmllcyB0aGUgZGF0YSBpcyBzaG93biBpbiBKU09OIGZvcm1hdC4gKi9cblx0XHRcdGRhdGE/OiBhbnk7XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBFdmVudCBtZXNzYWdlIGZvciAnYnJlYWtwb2ludCcgZXZlbnQgdHlwZS5cblx0XHRUaGUgZXZlbnQgaW5kaWNhdGVzIHRoYXQgc29tZSBpbmZvcm1hdGlvbiBhYm91dCBhIGJyZWFrcG9pbnQgaGFzIGNoYW5nZWQuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgQnJlYWtwb2ludEV2ZW50IGV4dGVuZHMgRXZlbnQge1xuXHRcdC8vIGV2ZW50OiAnYnJlYWtwb2ludCc7XG5cdFx0Ym9keToge1xuXHRcdFx0LyoqIFRoZSByZWFzb24gZm9yIHRoZSBldmVudC5cblx0XHRcdFx0VmFsdWVzOiAnY2hhbmdlZCcsICduZXcnLCAncmVtb3ZlZCcsIGV0Yy5cblx0XHRcdCovXG5cdFx0XHRyZWFzb246ICdjaGFuZ2VkJyB8ICduZXcnIHwgJ3JlbW92ZWQnIHwgc3RyaW5nO1xuXHRcdFx0LyoqIFRoZSAnaWQnIGF0dHJpYnV0ZSBpcyB1c2VkIHRvIGZpbmQgdGhlIHRhcmdldCBicmVha3BvaW50IGFuZCB0aGUgb3RoZXIgYXR0cmlidXRlcyBhcmUgdXNlZCBhcyB0aGUgbmV3IHZhbHVlcy4gKi9cblx0XHRcdGJyZWFrcG9pbnQ6IEJyZWFrcG9pbnQ7XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBFdmVudCBtZXNzYWdlIGZvciAnbW9kdWxlJyBldmVudCB0eXBlLlxuXHRcdFRoZSBldmVudCBpbmRpY2F0ZXMgdGhhdCBzb21lIGluZm9ybWF0aW9uIGFib3V0IGEgbW9kdWxlIGhhcyBjaGFuZ2VkLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIE1vZHVsZUV2ZW50IGV4dGVuZHMgRXZlbnQge1xuXHRcdC8vIGV2ZW50OiAnbW9kdWxlJztcblx0XHRib2R5OiB7XG5cdFx0XHQvKiogVGhlIHJlYXNvbiBmb3IgdGhlIGV2ZW50LiAqL1xuXHRcdFx0cmVhc29uOiAnbmV3JyB8ICdjaGFuZ2VkJyB8ICdyZW1vdmVkJztcblx0XHRcdC8qKiBUaGUgbmV3LCBjaGFuZ2VkLCBvciByZW1vdmVkIG1vZHVsZS4gSW4gY2FzZSBvZiAncmVtb3ZlZCcgb25seSB0aGUgbW9kdWxlIGlkIGlzIHVzZWQuICovXG5cdFx0XHRtb2R1bGU6IE1vZHVsZTtcblx0XHR9O1xuXHR9XG5cblx0LyoqIEV2ZW50IG1lc3NhZ2UgZm9yICdsb2FkZWRTb3VyY2UnIGV2ZW50IHR5cGUuXG5cdFx0VGhlIGV2ZW50IGluZGljYXRlcyB0aGF0IHNvbWUgc291cmNlIGhhcyBiZWVuIGFkZGVkLCBjaGFuZ2VkLCBvciByZW1vdmVkIGZyb20gdGhlIHNldCBvZiBhbGwgbG9hZGVkIHNvdXJjZXMuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgTG9hZGVkU291cmNlRXZlbnQgZXh0ZW5kcyBFdmVudCB7XG5cdFx0Ly8gZXZlbnQ6ICdsb2FkZWRTb3VyY2UnO1xuXHRcdGJvZHk6IHtcblx0XHRcdC8qKiBUaGUgcmVhc29uIGZvciB0aGUgZXZlbnQuICovXG5cdFx0XHRyZWFzb246ICduZXcnIHwgJ2NoYW5nZWQnIHwgJ3JlbW92ZWQnO1xuXHRcdFx0LyoqIFRoZSBuZXcsIGNoYW5nZWQsIG9yIHJlbW92ZWQgc291cmNlLiAqL1xuXHRcdFx0c291cmNlOiBTb3VyY2U7XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBFdmVudCBtZXNzYWdlIGZvciAncHJvY2VzcycgZXZlbnQgdHlwZS5cblx0XHRUaGUgZXZlbnQgaW5kaWNhdGVzIHRoYXQgdGhlIGRlYnVnZ2VyIGhhcyBiZWd1biBkZWJ1Z2dpbmcgYSBuZXcgcHJvY2Vzcy4gRWl0aGVyIG9uZSB0aGF0IGl0IGhhcyBsYXVuY2hlZCwgb3Igb25lIHRoYXQgaXQgaGFzIGF0dGFjaGVkIHRvLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFByb2Nlc3NFdmVudCBleHRlbmRzIEV2ZW50IHtcblx0XHQvLyBldmVudDogJ3Byb2Nlc3MnO1xuXHRcdGJvZHk6IHtcblx0XHRcdC8qKiBUaGUgbG9naWNhbCBuYW1lIG9mIHRoZSBwcm9jZXNzLiBUaGlzIGlzIHVzdWFsbHkgdGhlIGZ1bGwgcGF0aCB0byBwcm9jZXNzJ3MgZXhlY3V0YWJsZSBmaWxlLiBFeGFtcGxlOiAvaG9tZS9leGFtcGxlL215cHJvai9wcm9ncmFtLmpzLiAqL1xuXHRcdFx0bmFtZTogc3RyaW5nO1xuXHRcdFx0LyoqIFRoZSBzeXN0ZW0gcHJvY2VzcyBpZCBvZiB0aGUgZGVidWdnZWQgcHJvY2Vzcy4gVGhpcyBwcm9wZXJ0eSB3aWxsIGJlIG1pc3NpbmcgZm9yIG5vbi1zeXN0ZW0gcHJvY2Vzc2VzLiAqL1xuXHRcdFx0c3lzdGVtUHJvY2Vzc0lkPzogbnVtYmVyO1xuXHRcdFx0LyoqIElmIHRydWUsIHRoZSBwcm9jZXNzIGlzIHJ1bm5pbmcgb24gdGhlIHNhbWUgY29tcHV0ZXIgYXMgdGhlIGRlYnVnIGFkYXB0ZXIuICovXG5cdFx0XHRpc0xvY2FsUHJvY2Vzcz86IGJvb2xlYW47XG5cdFx0XHQvKiogRGVzY3JpYmVzIGhvdyB0aGUgZGVidWcgZW5naW5lIHN0YXJ0ZWQgZGVidWdnaW5nIHRoaXMgcHJvY2Vzcy5cblx0XHRcdFx0J2xhdW5jaCc6IFByb2Nlc3Mgd2FzIGxhdW5jaGVkIHVuZGVyIHRoZSBkZWJ1Z2dlci5cblx0XHRcdFx0J2F0dGFjaCc6IERlYnVnZ2VyIGF0dGFjaGVkIHRvIGFuIGV4aXN0aW5nIHByb2Nlc3MuXG5cdFx0XHRcdCdhdHRhY2hGb3JTdXNwZW5kZWRMYXVuY2gnOiBBIHByb2plY3QgbGF1bmNoZXIgY29tcG9uZW50IGhhcyBsYXVuY2hlZCBhIG5ldyBwcm9jZXNzIGluIGEgc3VzcGVuZGVkIHN0YXRlIGFuZCB0aGVuIGFza2VkIHRoZSBkZWJ1Z2dlciB0byBhdHRhY2guXG5cdFx0XHQqL1xuXHRcdFx0c3RhcnRNZXRob2Q/OiAnbGF1bmNoJyB8ICdhdHRhY2gnIHwgJ2F0dGFjaEZvclN1c3BlbmRlZExhdW5jaCc7XG5cdFx0XHQvKiogVGhlIHNpemUgb2YgYSBwb2ludGVyIG9yIGFkZHJlc3MgZm9yIHRoaXMgcHJvY2VzcywgaW4gYml0cy4gVGhpcyB2YWx1ZSBtYXkgYmUgdXNlZCBieSBjbGllbnRzIHdoZW4gZm9ybWF0dGluZyBhZGRyZXNzZXMgZm9yIGRpc3BsYXkuICovXG5cdFx0XHRwb2ludGVyU2l6ZT86IG51bWJlcjtcblx0XHR9O1xuXHR9XG5cblx0LyoqIEV2ZW50IG1lc3NhZ2UgZm9yICdjYXBhYmlsaXRpZXMnIGV2ZW50IHR5cGUuXG5cdFx0VGhlIGV2ZW50IGluZGljYXRlcyB0aGF0IG9uZSBvciBtb3JlIGNhcGFiaWxpdGllcyBoYXZlIGNoYW5nZWQuXG5cdFx0U2luY2UgdGhlIGNhcGFiaWxpdGllcyBhcmUgZGVwZW5kZW50IG9uIHRoZSBmcm9udGVuZCBhbmQgaXRzIFVJLCBpdCBtaWdodCBub3QgYmUgcG9zc2libGUgdG8gY2hhbmdlIHRoYXQgYXQgcmFuZG9tIHRpbWVzIChvciB0b28gbGF0ZSkuXG5cdFx0Q29uc2VxdWVudGx5IHRoaXMgZXZlbnQgaGFzIGEgaGludCBjaGFyYWN0ZXJpc3RpYzogYSBmcm9udGVuZCBjYW4gb25seSBiZSBleHBlY3RlZCB0byBtYWtlIGEgJ2Jlc3QgZWZmb3J0JyBpbiBob25vdXJpbmcgaW5kaXZpZHVhbCBjYXBhYmlsaXRpZXMgYnV0IHRoZXJlIGFyZSBubyBndWFyYW50ZWVzLlxuXHRcdE9ubHkgY2hhbmdlZCBjYXBhYmlsaXRpZXMgbmVlZCB0byBiZSBpbmNsdWRlZCwgYWxsIG90aGVyIGNhcGFiaWxpdGllcyBrZWVwIHRoZWlyIHZhbHVlcy5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBDYXBhYmlsaXRpZXNFdmVudCBleHRlbmRzIEV2ZW50IHtcblx0XHQvLyBldmVudDogJ2NhcGFiaWxpdGllcyc7XG5cdFx0Ym9keToge1xuXHRcdFx0LyoqIFRoZSBzZXQgb2YgdXBkYXRlZCBjYXBhYmlsaXRpZXMuICovXG5cdFx0XHRjYXBhYmlsaXRpZXM6IENhcGFiaWxpdGllcztcblx0XHR9O1xuXHR9XG5cblx0LyoqIEV2ZW50IG1lc3NhZ2UgZm9yICdwcm9ncmVzc1N0YXJ0JyBldmVudCB0eXBlLlxuXHRcdFRoZSBldmVudCBzaWduYWxzIHRoYXQgYSBsb25nIHJ1bm5pbmcgb3BlcmF0aW9uIGlzIGFib3V0IHRvIHN0YXJ0IGFuZFxuXHRcdHByb3ZpZGVzIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gZm9yIHRoZSBjbGllbnQgdG8gc2V0IHVwIGEgY29ycmVzcG9uZGluZyBwcm9ncmVzcyBhbmQgY2FuY2VsbGF0aW9uIFVJLlxuXHRcdFRoZSBjbGllbnQgaXMgZnJlZSB0byBkZWxheSB0aGUgc2hvd2luZyBvZiB0aGUgVUkgaW4gb3JkZXIgdG8gcmVkdWNlIGZsaWNrZXIuXG5cdFx0VGhpcyBldmVudCBzaG91bGQgb25seSBiZSBzZW50IGlmIHRoZSBjbGllbnQgaGFzIHBhc3NlZCB0aGUgdmFsdWUgdHJ1ZSBmb3IgdGhlICdzdXBwb3J0c1Byb2dyZXNzUmVwb3J0aW5nJyBjYXBhYmlsaXR5IG9mIHRoZSAnaW5pdGlhbGl6ZScgcmVxdWVzdC5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBQcm9ncmVzc1N0YXJ0RXZlbnQgZXh0ZW5kcyBFdmVudCB7XG5cdFx0Ly8gZXZlbnQ6ICdwcm9ncmVzc1N0YXJ0Jztcblx0XHRib2R5OiB7XG5cdFx0XHQvKiogQW4gSUQgdGhhdCBtdXN0IGJlIHVzZWQgaW4gc3Vic2VxdWVudCAncHJvZ3Jlc3NVcGRhdGUnIGFuZCAncHJvZ3Jlc3NFbmQnIGV2ZW50cyB0byBtYWtlIHRoZW0gcmVmZXIgdG8gdGhlIHNhbWUgcHJvZ3Jlc3MgcmVwb3J0aW5nLlxuXHRcdFx0XHRJRHMgbXVzdCBiZSB1bmlxdWUgd2l0aGluIGEgZGVidWcgc2Vzc2lvbi5cblx0XHRcdCovXG5cdFx0XHRwcm9ncmVzc0lkOiBzdHJpbmc7XG5cdFx0XHQvKiogTWFuZGF0b3J5IChzaG9ydCkgdGl0bGUgb2YgdGhlIHByb2dyZXNzIHJlcG9ydGluZy4gU2hvd24gaW4gdGhlIFVJIHRvIGRlc2NyaWJlIHRoZSBsb25nIHJ1bm5pbmcgb3BlcmF0aW9uLiAqL1xuXHRcdFx0dGl0bGU6IHN0cmluZztcblx0XHRcdC8qKiBUaGUgcmVxdWVzdCBJRCB0aGF0IHRoaXMgcHJvZ3Jlc3MgcmVwb3J0IGlzIHJlbGF0ZWQgdG8uIElmIHNwZWNpZmllZCBhIGRlYnVnIGFkYXB0ZXIgaXMgZXhwZWN0ZWQgdG8gZW1pdFxuXHRcdFx0XHRwcm9ncmVzcyBldmVudHMgZm9yIHRoZSBsb25nIHJ1bm5pbmcgcmVxdWVzdCB1bnRpbCB0aGUgcmVxdWVzdCBoYXMgYmVlbiBlaXRoZXIgY29tcGxldGVkIG9yIGNhbmNlbGxlZC5cblx0XHRcdFx0SWYgdGhlIHJlcXVlc3QgSUQgaXMgb21pdHRlZCwgdGhlIHByb2dyZXNzIHJlcG9ydCBpcyBhc3N1bWVkIHRvIGJlIHJlbGF0ZWQgdG8gc29tZSBnZW5lcmFsIGFjdGl2aXR5IG9mIHRoZSBkZWJ1ZyBhZGFwdGVyLlxuXHRcdFx0Ki9cblx0XHRcdHJlcXVlc3RJZD86IG51bWJlcjtcblx0XHRcdC8qKiBJZiB0cnVlLCB0aGUgcmVxdWVzdCB0aGF0IHJlcG9ydHMgcHJvZ3Jlc3MgbWF5IGJlIGNhbmNlbGVkIHdpdGggYSAnY2FuY2VsJyByZXF1ZXN0LlxuXHRcdFx0XHRTbyB0aGlzIHByb3BlcnR5IGJhc2ljYWxseSBjb250cm9scyB3aGV0aGVyIHRoZSBjbGllbnQgc2hvdWxkIHVzZSBVWCB0aGF0IHN1cHBvcnRzIGNhbmNlbGxhdGlvbi5cblx0XHRcdFx0Q2xpZW50cyB0aGF0IGRvbid0IHN1cHBvcnQgY2FuY2VsbGF0aW9uIGFyZSBhbGxvd2VkIHRvIGlnbm9yZSB0aGUgc2V0dGluZy5cblx0XHRcdCovXG5cdFx0XHRjYW5jZWxsYWJsZT86IGJvb2xlYW47XG5cdFx0XHQvKiogT3B0aW9uYWwsIG1vcmUgZGV0YWlsZWQgcHJvZ3Jlc3MgbWVzc2FnZS4gKi9cblx0XHRcdG1lc3NhZ2U/OiBzdHJpbmc7XG5cdFx0XHQvKiogT3B0aW9uYWwgcHJvZ3Jlc3MgcGVyY2VudGFnZSB0byBkaXNwbGF5ICh2YWx1ZSByYW5nZTogMCB0byAxMDApLiBJZiBvbWl0dGVkIG5vIHBlcmNlbnRhZ2Ugd2lsbCBiZSBzaG93bi4gKi9cblx0XHRcdHBlcmNlbnRhZ2U/OiBudW1iZXI7XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBFdmVudCBtZXNzYWdlIGZvciAncHJvZ3Jlc3NVcGRhdGUnIGV2ZW50IHR5cGUuXG5cdFx0VGhlIGV2ZW50IHNpZ25hbHMgdGhhdCB0aGUgcHJvZ3Jlc3MgcmVwb3J0aW5nIG5lZWRzIHRvIHVwZGF0ZWQgd2l0aCBhIG5ldyBtZXNzYWdlIGFuZC9vciBwZXJjZW50YWdlLlxuXHRcdFRoZSBjbGllbnQgZG9lcyBub3QgaGF2ZSB0byB1cGRhdGUgdGhlIFVJIGltbWVkaWF0ZWx5LCBidXQgdGhlIGNsaWVudHMgbmVlZHMgdG8ga2VlcCB0cmFjayBvZiB0aGUgbWVzc2FnZSBhbmQvb3IgcGVyY2VudGFnZSB2YWx1ZXMuXG5cdFx0VGhpcyBldmVudCBzaG91bGQgb25seSBiZSBzZW50IGlmIHRoZSBjbGllbnQgaGFzIHBhc3NlZCB0aGUgdmFsdWUgdHJ1ZSBmb3IgdGhlICdzdXBwb3J0c1Byb2dyZXNzUmVwb3J0aW5nJyBjYXBhYmlsaXR5IG9mIHRoZSAnaW5pdGlhbGl6ZScgcmVxdWVzdC5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBQcm9ncmVzc1VwZGF0ZUV2ZW50IGV4dGVuZHMgRXZlbnQge1xuXHRcdC8vIGV2ZW50OiAncHJvZ3Jlc3NVcGRhdGUnO1xuXHRcdGJvZHk6IHtcblx0XHRcdC8qKiBUaGUgSUQgdGhhdCB3YXMgaW50cm9kdWNlZCBpbiB0aGUgaW5pdGlhbCAncHJvZ3Jlc3NTdGFydCcgZXZlbnQuICovXG5cdFx0XHRwcm9ncmVzc0lkOiBzdHJpbmc7XG5cdFx0XHQvKiogT3B0aW9uYWwsIG1vcmUgZGV0YWlsZWQgcHJvZ3Jlc3MgbWVzc2FnZS4gSWYgb21pdHRlZCwgdGhlIHByZXZpb3VzIG1lc3NhZ2UgKGlmIGFueSkgaXMgdXNlZC4gKi9cblx0XHRcdG1lc3NhZ2U/OiBzdHJpbmc7XG5cdFx0XHQvKiogT3B0aW9uYWwgcHJvZ3Jlc3MgcGVyY2VudGFnZSB0byBkaXNwbGF5ICh2YWx1ZSByYW5nZTogMCB0byAxMDApLiBJZiBvbWl0dGVkIG5vIHBlcmNlbnRhZ2Ugd2lsbCBiZSBzaG93bi4gKi9cblx0XHRcdHBlcmNlbnRhZ2U/OiBudW1iZXI7XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBFdmVudCBtZXNzYWdlIGZvciAncHJvZ3Jlc3NFbmQnIGV2ZW50IHR5cGUuXG5cdFx0VGhlIGV2ZW50IHNpZ25hbHMgdGhlIGVuZCBvZiB0aGUgcHJvZ3Jlc3MgcmVwb3J0aW5nIHdpdGggYW4gb3B0aW9uYWwgZmluYWwgbWVzc2FnZS5cblx0XHRUaGlzIGV2ZW50IHNob3VsZCBvbmx5IGJlIHNlbnQgaWYgdGhlIGNsaWVudCBoYXMgcGFzc2VkIHRoZSB2YWx1ZSB0cnVlIGZvciB0aGUgJ3N1cHBvcnRzUHJvZ3Jlc3NSZXBvcnRpbmcnIGNhcGFiaWxpdHkgb2YgdGhlICdpbml0aWFsaXplJyByZXF1ZXN0LlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFByb2dyZXNzRW5kRXZlbnQgZXh0ZW5kcyBFdmVudCB7XG5cdFx0Ly8gZXZlbnQ6ICdwcm9ncmVzc0VuZCc7XG5cdFx0Ym9keToge1xuXHRcdFx0LyoqIFRoZSBJRCB0aGF0IHdhcyBpbnRyb2R1Y2VkIGluIHRoZSBpbml0aWFsICdQcm9ncmVzc1N0YXJ0RXZlbnQnLiAqL1xuXHRcdFx0cHJvZ3Jlc3NJZDogc3RyaW5nO1xuXHRcdFx0LyoqIE9wdGlvbmFsLCBtb3JlIGRldGFpbGVkIHByb2dyZXNzIG1lc3NhZ2UuIElmIG9taXR0ZWQsIHRoZSBwcmV2aW91cyBtZXNzYWdlIChpZiBhbnkpIGlzIHVzZWQuICovXG5cdFx0XHRtZXNzYWdlPzogc3RyaW5nO1xuXHRcdH07XG5cdH1cblxuXHQvKiogRXZlbnQgbWVzc2FnZSBmb3IgJ2ludmFsaWRhdGVkJyBldmVudCB0eXBlLlxuXHRcdFRoaXMgZXZlbnQgc2lnbmFscyB0aGF0IHNvbWUgc3RhdGUgaW4gdGhlIGRlYnVnIGFkYXB0ZXIgaGFzIGNoYW5nZWQgYW5kIHJlcXVpcmVzIHRoYXQgdGhlIGNsaWVudCBuZWVkcyB0byByZS1yZW5kZXIgdGhlIGRhdGEgc25hcHNob3QgcHJldmlvdXNseSByZXF1ZXN0ZWQuXG5cdFx0RGVidWcgYWRhcHRlcnMgZG8gbm90IGhhdmUgdG8gZW1pdCB0aGlzIGV2ZW50IGZvciBydW50aW1lIGNoYW5nZXMgbGlrZSBzdG9wcGVkIG9yIHRocmVhZCBldmVudHMgYmVjYXVzZSBpbiB0aGF0IGNhc2UgdGhlIGNsaWVudCByZWZldGNoZXMgdGhlIG5ldyBzdGF0ZSBhbnl3YXkuIEJ1dCB0aGUgZXZlbnQgY2FuIGJlIHVzZWQgZm9yIGV4YW1wbGUgdG8gcmVmcmVzaCB0aGUgVUkgYWZ0ZXIgcmVuZGVyaW5nIGZvcm1hdHRpbmcgaGFzIGNoYW5nZWQgaW4gdGhlIGRlYnVnIGFkYXB0ZXIuXG5cdFx0VGhpcyBldmVudCBzaG91bGQgb25seSBiZSBzZW50IGlmIHRoZSBkZWJ1ZyBhZGFwdGVyIGhhcyByZWNlaXZlZCBhIHZhbHVlIHRydWUgZm9yIHRoZSAnc3VwcG9ydHNJbnZhbGlkYXRlZEV2ZW50JyBjYXBhYmlsaXR5IG9mIHRoZSAnaW5pdGlhbGl6ZScgcmVxdWVzdC5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBJbnZhbGlkYXRlZEV2ZW50IGV4dGVuZHMgRXZlbnQge1xuXHRcdC8vIGV2ZW50OiAnaW52YWxpZGF0ZWQnO1xuXHRcdGJvZHk6IHtcblx0XHRcdC8qKiBPcHRpb25hbCBzZXQgb2YgbG9naWNhbCBhcmVhcyB0aGF0IGdvdCBpbnZhbGlkYXRlZC4gVGhpcyBwcm9wZXJ0eSBoYXMgYSBoaW50IGNoYXJhY3RlcmlzdGljOiBhIGNsaWVudCBjYW4gb25seSBiZSBleHBlY3RlZCB0byBtYWtlIGEgJ2Jlc3QgZWZmb3J0JyBpbiBob25vdXJpbmcgdGhlIGFyZWFzIGJ1dCB0aGVyZSBhcmUgbm8gZ3VhcmFudGVlcy4gSWYgdGhpcyBwcm9wZXJ0eSBpcyBtaXNzaW5nLCBlbXB0eSwgb3IgaWYgdmFsdWVzIGFyZSBub3QgdW5kZXJzdGFuZCB0aGUgY2xpZW50IHNob3VsZCBhc3N1bWUgYSBzaW5nbGUgdmFsdWUgJ2FsbCcuICovXG5cdFx0XHRhcmVhcz86IEludmFsaWRhdGVkQXJlYXNbXTtcblx0XHRcdC8qKiBJZiBzcGVjaWZpZWQsIHRoZSBjbGllbnQgb25seSBuZWVkcyB0byByZWZldGNoIGRhdGEgcmVsYXRlZCB0byB0aGlzIHRocmVhZC4gKi9cblx0XHRcdHRocmVhZElkPzogbnVtYmVyO1xuXHRcdFx0LyoqIElmIHNwZWNpZmllZCwgdGhlIGNsaWVudCBvbmx5IG5lZWRzIHRvIHJlZmV0Y2ggZGF0YSByZWxhdGVkIHRvIHRoaXMgc3RhY2sgZnJhbWUgKGFuZCB0aGUgJ3RocmVhZElkJyBpcyBpZ25vcmVkKS4gKi9cblx0XHRcdHN0YWNrRnJhbWVJZD86IG51bWJlcjtcblx0XHR9O1xuXHR9XG5cblx0LyoqIFJ1bkluVGVybWluYWwgcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAncnVuSW5UZXJtaW5hbCcuXG5cdFx0VGhpcyBvcHRpb25hbCByZXF1ZXN0IGlzIHNlbnQgZnJvbSB0aGUgZGVidWcgYWRhcHRlciB0byB0aGUgY2xpZW50IHRvIHJ1biBhIGNvbW1hbmQgaW4gYSB0ZXJtaW5hbC5cblx0XHRUaGlzIGlzIHR5cGljYWxseSB1c2VkIHRvIGxhdW5jaCB0aGUgZGVidWdnZWUgaW4gYSB0ZXJtaW5hbCBwcm92aWRlZCBieSB0aGUgY2xpZW50LlxuXHRcdFRoaXMgcmVxdWVzdCBzaG91bGQgb25seSBiZSBjYWxsZWQgaWYgdGhlIGNsaWVudCBoYXMgcGFzc2VkIHRoZSB2YWx1ZSB0cnVlIGZvciB0aGUgJ3N1cHBvcnRzUnVuSW5UZXJtaW5hbFJlcXVlc3QnIGNhcGFiaWxpdHkgb2YgdGhlICdpbml0aWFsaXplJyByZXF1ZXN0LlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFJ1bkluVGVybWluYWxSZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG5cdFx0Ly8gY29tbWFuZDogJ3J1bkluVGVybWluYWwnO1xuXHRcdGFyZ3VtZW50czogUnVuSW5UZXJtaW5hbFJlcXVlc3RBcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAncnVuSW5UZXJtaW5hbCcgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBSdW5JblRlcm1pbmFsUmVxdWVzdEFyZ3VtZW50cyB7XG5cdFx0LyoqIFdoYXQga2luZCBvZiB0ZXJtaW5hbCB0byBsYXVuY2guICovXG5cdFx0a2luZD86ICdpbnRlZ3JhdGVkJyB8ICdleHRlcm5hbCc7XG5cdFx0LyoqIE9wdGlvbmFsIHRpdGxlIG9mIHRoZSB0ZXJtaW5hbC4gKi9cblx0XHR0aXRsZT86IHN0cmluZztcblx0XHQvKiogV29ya2luZyBkaXJlY3RvcnkgZm9yIHRoZSBjb21tYW5kLiBGb3Igbm9uLWVtcHR5LCB2YWxpZCBwYXRocyB0aGlzIHR5cGljYWxseSByZXN1bHRzIGluIGV4ZWN1dGlvbiBvZiBhIGNoYW5nZSBkaXJlY3RvcnkgY29tbWFuZC4gKi9cblx0XHRjd2Q6IHN0cmluZztcblx0XHQvKiogTGlzdCBvZiBhcmd1bWVudHMuIFRoZSBmaXJzdCBhcmd1bWVudCBpcyB0aGUgY29tbWFuZCB0byBydW4uICovXG5cdFx0YXJnczogc3RyaW5nW107XG5cdFx0LyoqIEVudmlyb25tZW50IGtleS12YWx1ZSBwYWlycyB0aGF0IGFyZSBhZGRlZCB0byBvciByZW1vdmVkIGZyb20gdGhlIGRlZmF1bHQgZW52aXJvbm1lbnQuICovXG5cdFx0ZW52PzogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfCBudWxsOyB9O1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICdydW5JblRlcm1pbmFsJyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFJ1bkluVGVybWluYWxSZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcblx0XHRib2R5OiB7XG5cdFx0XHQvKiogVGhlIHByb2Nlc3MgSUQuIFRoZSB2YWx1ZSBzaG91bGQgYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIDIxNDc0ODM2NDcgKDJeMzEtMSkuICovXG5cdFx0XHRwcm9jZXNzSWQ/OiBudW1iZXI7XG5cdFx0XHQvKiogVGhlIHByb2Nlc3MgSUQgb2YgdGhlIHRlcm1pbmFsIHNoZWxsLiBUaGUgdmFsdWUgc2hvdWxkIGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAyMTQ3NDgzNjQ3ICgyXjMxLTEpLiAqL1xuXHRcdFx0c2hlbGxQcm9jZXNzSWQ/OiBudW1iZXI7XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBJbml0aWFsaXplIHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ2luaXRpYWxpemUnLlxuXHRcdFRoZSAnaW5pdGlhbGl6ZScgcmVxdWVzdCBpcyBzZW50IGFzIHRoZSBmaXJzdCByZXF1ZXN0IGZyb20gdGhlIGNsaWVudCB0byB0aGUgZGVidWcgYWRhcHRlclxuXHRcdGluIG9yZGVyIHRvIGNvbmZpZ3VyZSBpdCB3aXRoIGNsaWVudCBjYXBhYmlsaXRpZXMgYW5kIHRvIHJldHJpZXZlIGNhcGFiaWxpdGllcyBmcm9tIHRoZSBkZWJ1ZyBhZGFwdGVyLlxuXHRcdFVudGlsIHRoZSBkZWJ1ZyBhZGFwdGVyIGhhcyByZXNwb25kZWQgdG8gd2l0aCBhbiAnaW5pdGlhbGl6ZScgcmVzcG9uc2UsIHRoZSBjbGllbnQgbXVzdCBub3Qgc2VuZCBhbnkgYWRkaXRpb25hbCByZXF1ZXN0cyBvciBldmVudHMgdG8gdGhlIGRlYnVnIGFkYXB0ZXIuXG5cdFx0SW4gYWRkaXRpb24gdGhlIGRlYnVnIGFkYXB0ZXIgaXMgbm90IGFsbG93ZWQgdG8gc2VuZCBhbnkgcmVxdWVzdHMgb3IgZXZlbnRzIHRvIHRoZSBjbGllbnQgdW50aWwgaXQgaGFzIHJlc3BvbmRlZCB3aXRoIGFuICdpbml0aWFsaXplJyByZXNwb25zZS5cblx0XHRUaGUgJ2luaXRpYWxpemUnIHJlcXVlc3QgbWF5IG9ubHkgYmUgc2VudCBvbmNlLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEluaXRpYWxpemVSZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG5cdFx0Ly8gY29tbWFuZDogJ2luaXRpYWxpemUnO1xuXHRcdGFyZ3VtZW50czogSW5pdGlhbGl6ZVJlcXVlc3RBcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAnaW5pdGlhbGl6ZScgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBJbml0aWFsaXplUmVxdWVzdEFyZ3VtZW50cyB7XG5cdFx0LyoqIFRoZSBJRCBvZiB0aGUgKGZyb250ZW5kKSBjbGllbnQgdXNpbmcgdGhpcyBhZGFwdGVyLiAqL1xuXHRcdGNsaWVudElEPzogc3RyaW5nO1xuXHRcdC8qKiBUaGUgaHVtYW4gcmVhZGFibGUgbmFtZSBvZiB0aGUgKGZyb250ZW5kKSBjbGllbnQgdXNpbmcgdGhpcyBhZGFwdGVyLiAqL1xuXHRcdGNsaWVudE5hbWU/OiBzdHJpbmc7XG5cdFx0LyoqIFRoZSBJRCBvZiB0aGUgZGVidWcgYWRhcHRlci4gKi9cblx0XHRhZGFwdGVySUQ6IHN0cmluZztcblx0XHQvKiogVGhlIElTTy02MzkgbG9jYWxlIG9mIHRoZSAoZnJvbnRlbmQpIGNsaWVudCB1c2luZyB0aGlzIGFkYXB0ZXIsIGUuZy4gZW4tVVMgb3IgZGUtQ0guICovXG5cdFx0bG9jYWxlPzogc3RyaW5nO1xuXHRcdC8qKiBJZiB0cnVlIGFsbCBsaW5lIG51bWJlcnMgYXJlIDEtYmFzZWQgKGRlZmF1bHQpLiAqL1xuXHRcdGxpbmVzU3RhcnRBdDE/OiBib29sZWFuO1xuXHRcdC8qKiBJZiB0cnVlIGFsbCBjb2x1bW4gbnVtYmVycyBhcmUgMS1iYXNlZCAoZGVmYXVsdCkuICovXG5cdFx0Y29sdW1uc1N0YXJ0QXQxPzogYm9vbGVhbjtcblx0XHQvKiogRGV0ZXJtaW5lcyBpbiB3aGF0IGZvcm1hdCBwYXRocyBhcmUgc3BlY2lmaWVkLiBUaGUgZGVmYXVsdCBpcyAncGF0aCcsIHdoaWNoIGlzIHRoZSBuYXRpdmUgZm9ybWF0LlxuXHRcdFx0VmFsdWVzOiAncGF0aCcsICd1cmknLCBldGMuXG5cdFx0Ki9cblx0XHRwYXRoRm9ybWF0PzogJ3BhdGgnIHwgJ3VyaScgfCBzdHJpbmc7XG5cdFx0LyoqIENsaWVudCBzdXBwb3J0cyB0aGUgb3B0aW9uYWwgdHlwZSBhdHRyaWJ1dGUgZm9yIHZhcmlhYmxlcy4gKi9cblx0XHRzdXBwb3J0c1ZhcmlhYmxlVHlwZT86IGJvb2xlYW47XG5cdFx0LyoqIENsaWVudCBzdXBwb3J0cyB0aGUgcGFnaW5nIG9mIHZhcmlhYmxlcy4gKi9cblx0XHRzdXBwb3J0c1ZhcmlhYmxlUGFnaW5nPzogYm9vbGVhbjtcblx0XHQvKiogQ2xpZW50IHN1cHBvcnRzIHRoZSBydW5JblRlcm1pbmFsIHJlcXVlc3QuICovXG5cdFx0c3VwcG9ydHNSdW5JblRlcm1pbmFsUmVxdWVzdD86IGJvb2xlYW47XG5cdFx0LyoqIENsaWVudCBzdXBwb3J0cyBtZW1vcnkgcmVmZXJlbmNlcy4gKi9cblx0XHRzdXBwb3J0c01lbW9yeVJlZmVyZW5jZXM/OiBib29sZWFuO1xuXHRcdC8qKiBDbGllbnQgc3VwcG9ydHMgcHJvZ3Jlc3MgcmVwb3J0aW5nLiAqL1xuXHRcdHN1cHBvcnRzUHJvZ3Jlc3NSZXBvcnRpbmc/OiBib29sZWFuO1xuXHRcdC8qKiBDbGllbnQgc3VwcG9ydHMgdGhlIGludmFsaWRhdGVkIGV2ZW50LiAqL1xuXHRcdHN1cHBvcnRzSW52YWxpZGF0ZWRFdmVudD86IGJvb2xlYW47XG5cdH1cblxuXHQvKiogUmVzcG9uc2UgdG8gJ2luaXRpYWxpemUnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgSW5pdGlhbGl6ZVJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHRcdC8qKiBUaGUgY2FwYWJpbGl0aWVzIG9mIHRoaXMgZGVidWcgYWRhcHRlci4gKi9cblx0XHRib2R5PzogQ2FwYWJpbGl0aWVzO1xuXHR9XG5cblx0LyoqIENvbmZpZ3VyYXRpb25Eb25lIHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ2NvbmZpZ3VyYXRpb25Eb25lJy5cblx0XHRUaGlzIG9wdGlvbmFsIHJlcXVlc3QgaW5kaWNhdGVzIHRoYXQgdGhlIGNsaWVudCBoYXMgZmluaXNoZWQgaW5pdGlhbGl6YXRpb24gb2YgdGhlIGRlYnVnIGFkYXB0ZXIuXG5cdFx0U28gaXQgaXMgdGhlIGxhc3QgcmVxdWVzdCBpbiB0aGUgc2VxdWVuY2Ugb2YgY29uZmlndXJhdGlvbiByZXF1ZXN0cyAod2hpY2ggd2FzIHN0YXJ0ZWQgYnkgdGhlICdpbml0aWFsaXplZCcgZXZlbnQpLlxuXHRcdENsaWVudHMgc2hvdWxkIG9ubHkgY2FsbCB0aGlzIHJlcXVlc3QgaWYgdGhlIGNhcGFiaWxpdHkgJ3N1cHBvcnRzQ29uZmlndXJhdGlvbkRvbmVSZXF1ZXN0JyBpcyB0cnVlLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIENvbmZpZ3VyYXRpb25Eb25lUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdjb25maWd1cmF0aW9uRG9uZSc7XG5cdFx0YXJndW1lbnRzPzogQ29uZmlndXJhdGlvbkRvbmVBcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAnY29uZmlndXJhdGlvbkRvbmUnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgQ29uZmlndXJhdGlvbkRvbmVBcmd1bWVudHMge1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICdjb25maWd1cmF0aW9uRG9uZScgcmVxdWVzdC4gVGhpcyBpcyBqdXN0IGFuIGFja25vd2xlZGdlbWVudCwgc28gbm8gYm9keSBmaWVsZCBpcyByZXF1aXJlZC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBDb25maWd1cmF0aW9uRG9uZVJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHR9XG5cblx0LyoqIExhdW5jaCByZXF1ZXN0OyB2YWx1ZSBvZiBjb21tYW5kIGZpZWxkIGlzICdsYXVuY2gnLlxuXHRcdFRoaXMgbGF1bmNoIHJlcXVlc3QgaXMgc2VudCBmcm9tIHRoZSBjbGllbnQgdG8gdGhlIGRlYnVnIGFkYXB0ZXIgdG8gc3RhcnQgdGhlIGRlYnVnZ2VlIHdpdGggb3Igd2l0aG91dCBkZWJ1Z2dpbmcgKGlmICdub0RlYnVnJyBpcyB0cnVlKS5cblx0XHRTaW5jZSBsYXVuY2hpbmcgaXMgZGVidWdnZXIvcnVudGltZSBzcGVjaWZpYywgdGhlIGFyZ3VtZW50cyBmb3IgdGhpcyByZXF1ZXN0IGFyZSBub3QgcGFydCBvZiB0aGlzIHNwZWNpZmljYXRpb24uXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgTGF1bmNoUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdsYXVuY2gnO1xuXHRcdGFyZ3VtZW50czogTGF1bmNoUmVxdWVzdEFyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICdsYXVuY2gnIHJlcXVlc3QuIEFkZGl0aW9uYWwgYXR0cmlidXRlcyBhcmUgaW1wbGVtZW50YXRpb24gc3BlY2lmaWMuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgTGF1bmNoUmVxdWVzdEFyZ3VtZW50cyB7XG5cdFx0LyoqIElmIG5vRGVidWcgaXMgdHJ1ZSB0aGUgbGF1bmNoIHJlcXVlc3Qgc2hvdWxkIGxhdW5jaCB0aGUgcHJvZ3JhbSB3aXRob3V0IGVuYWJsaW5nIGRlYnVnZ2luZy4gKi9cblx0XHRub0RlYnVnPzogYm9vbGVhbjtcblx0XHQvKiogT3B0aW9uYWwgZGF0YSBmcm9tIHRoZSBwcmV2aW91cywgcmVzdGFydGVkIHNlc3Npb24uXG5cdFx0XHRUaGUgZGF0YSBpcyBzZW50IGFzIHRoZSAncmVzdGFydCcgYXR0cmlidXRlIG9mIHRoZSAndGVybWluYXRlZCcgZXZlbnQuXG5cdFx0XHRUaGUgY2xpZW50IHNob3VsZCBsZWF2ZSB0aGUgZGF0YSBpbnRhY3QuXG5cdFx0Ki9cblx0XHRfX3Jlc3RhcnQ/OiBhbnk7XG5cdH1cblxuXHQvKiogUmVzcG9uc2UgdG8gJ2xhdW5jaCcgcmVxdWVzdC4gVGhpcyBpcyBqdXN0IGFuIGFja25vd2xlZGdlbWVudCwgc28gbm8gYm9keSBmaWVsZCBpcyByZXF1aXJlZC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBMYXVuY2hSZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcblx0fVxuXG5cdC8qKiBBdHRhY2ggcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAnYXR0YWNoJy5cblx0XHRUaGUgYXR0YWNoIHJlcXVlc3QgaXMgc2VudCBmcm9tIHRoZSBjbGllbnQgdG8gdGhlIGRlYnVnIGFkYXB0ZXIgdG8gYXR0YWNoIHRvIGEgZGVidWdnZWUgdGhhdCBpcyBhbHJlYWR5IHJ1bm5pbmcuXG5cdFx0U2luY2UgYXR0YWNoaW5nIGlzIGRlYnVnZ2VyL3J1bnRpbWUgc3BlY2lmaWMsIHRoZSBhcmd1bWVudHMgZm9yIHRoaXMgcmVxdWVzdCBhcmUgbm90IHBhcnQgb2YgdGhpcyBzcGVjaWZpY2F0aW9uLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEF0dGFjaFJlcXVlc3QgZXh0ZW5kcyBSZXF1ZXN0IHtcblx0XHQvLyBjb21tYW5kOiAnYXR0YWNoJztcblx0XHRhcmd1bWVudHM6IEF0dGFjaFJlcXVlc3RBcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAnYXR0YWNoJyByZXF1ZXN0LiBBZGRpdGlvbmFsIGF0dHJpYnV0ZXMgYXJlIGltcGxlbWVudGF0aW9uIHNwZWNpZmljLiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEF0dGFjaFJlcXVlc3RBcmd1bWVudHMge1xuXHRcdC8qKiBPcHRpb25hbCBkYXRhIGZyb20gdGhlIHByZXZpb3VzLCByZXN0YXJ0ZWQgc2Vzc2lvbi5cblx0XHRcdFRoZSBkYXRhIGlzIHNlbnQgYXMgdGhlICdyZXN0YXJ0JyBhdHRyaWJ1dGUgb2YgdGhlICd0ZXJtaW5hdGVkJyBldmVudC5cblx0XHRcdFRoZSBjbGllbnQgc2hvdWxkIGxlYXZlIHRoZSBkYXRhIGludGFjdC5cblx0XHQqL1xuXHRcdF9fcmVzdGFydD86IGFueTtcblx0fVxuXG5cdC8qKiBSZXNwb25zZSB0byAnYXR0YWNoJyByZXF1ZXN0LiBUaGlzIGlzIGp1c3QgYW4gYWNrbm93bGVkZ2VtZW50LCBzbyBubyBib2R5IGZpZWxkIGlzIHJlcXVpcmVkLiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEF0dGFjaFJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHR9XG5cblx0LyoqIFJlc3RhcnQgcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAncmVzdGFydCcuXG5cdFx0UmVzdGFydHMgYSBkZWJ1ZyBzZXNzaW9uLiBDbGllbnRzIHNob3VsZCBvbmx5IGNhbGwgdGhpcyByZXF1ZXN0IGlmIHRoZSBjYXBhYmlsaXR5ICdzdXBwb3J0c1Jlc3RhcnRSZXF1ZXN0JyBpcyB0cnVlLlxuXHRcdElmIHRoZSBjYXBhYmlsaXR5IGlzIG1pc3Npbmcgb3IgaGFzIHRoZSB2YWx1ZSBmYWxzZSwgYSB0eXBpY2FsIGNsaWVudCB3aWxsIGVtdWxhdGUgJ3Jlc3RhcnQnIGJ5IHRlcm1pbmF0aW5nIHRoZSBkZWJ1ZyBhZGFwdGVyIGZpcnN0IGFuZCB0aGVuIGxhdW5jaGluZyBpdCBhbmV3LlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFJlc3RhcnRSZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG5cdFx0Ly8gY29tbWFuZDogJ3Jlc3RhcnQnO1xuXHRcdGFyZ3VtZW50cz86IFJlc3RhcnRBcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAncmVzdGFydCcgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBSZXN0YXJ0QXJndW1lbnRzIHtcblx0fVxuXG5cdC8qKiBSZXNwb25zZSB0byAncmVzdGFydCcgcmVxdWVzdC4gVGhpcyBpcyBqdXN0IGFuIGFja25vd2xlZGdlbWVudCwgc28gbm8gYm9keSBmaWVsZCBpcyByZXF1aXJlZC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBSZXN0YXJ0UmVzcG9uc2UgZXh0ZW5kcyBSZXNwb25zZSB7XG5cdH1cblxuXHQvKiogRGlzY29ubmVjdCByZXF1ZXN0OyB2YWx1ZSBvZiBjb21tYW5kIGZpZWxkIGlzICdkaXNjb25uZWN0Jy5cblx0XHRUaGUgJ2Rpc2Nvbm5lY3QnIHJlcXVlc3QgaXMgc2VudCBmcm9tIHRoZSBjbGllbnQgdG8gdGhlIGRlYnVnIGFkYXB0ZXIgaW4gb3JkZXIgdG8gc3RvcCBkZWJ1Z2dpbmcuXG5cdFx0SXQgYXNrcyB0aGUgZGVidWcgYWRhcHRlciB0byBkaXNjb25uZWN0IGZyb20gdGhlIGRlYnVnZ2VlIGFuZCB0byB0ZXJtaW5hdGUgdGhlIGRlYnVnIGFkYXB0ZXIuXG5cdFx0SWYgdGhlIGRlYnVnZ2VlIGhhcyBiZWVuIHN0YXJ0ZWQgd2l0aCB0aGUgJ2xhdW5jaCcgcmVxdWVzdCwgdGhlICdkaXNjb25uZWN0JyByZXF1ZXN0IHRlcm1pbmF0ZXMgdGhlIGRlYnVnZ2VlLlxuXHRcdElmIHRoZSAnYXR0YWNoJyByZXF1ZXN0IHdhcyB1c2VkIHRvIGNvbm5lY3QgdG8gdGhlIGRlYnVnZ2VlLCAnZGlzY29ubmVjdCcgZG9lcyBub3QgdGVybWluYXRlIHRoZSBkZWJ1Z2dlZS5cblx0XHRUaGlzIGJlaGF2aW9yIGNhbiBiZSBjb250cm9sbGVkIHdpdGggdGhlICd0ZXJtaW5hdGVEZWJ1Z2dlZScgYXJndW1lbnQgKGlmIHN1cHBvcnRlZCBieSB0aGUgZGVidWcgYWRhcHRlcikuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgRGlzY29ubmVjdFJlcXVlc3QgZXh0ZW5kcyBSZXF1ZXN0IHtcblx0XHQvLyBjb21tYW5kOiAnZGlzY29ubmVjdCc7XG5cdFx0YXJndW1lbnRzPzogRGlzY29ubmVjdEFyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICdkaXNjb25uZWN0JyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIERpc2Nvbm5lY3RBcmd1bWVudHMge1xuXHRcdC8qKiBBIHZhbHVlIG9mIHRydWUgaW5kaWNhdGVzIHRoYXQgdGhpcyAnZGlzY29ubmVjdCcgcmVxdWVzdCBpcyBwYXJ0IG9mIGEgcmVzdGFydCBzZXF1ZW5jZS4gKi9cblx0XHRyZXN0YXJ0PzogYm9vbGVhbjtcblx0XHQvKiogSW5kaWNhdGVzIHdoZXRoZXIgdGhlIGRlYnVnZ2VlIHNob3VsZCBiZSB0ZXJtaW5hdGVkIHdoZW4gdGhlIGRlYnVnZ2VyIGlzIGRpc2Nvbm5lY3RlZC5cblx0XHRcdElmIHVuc3BlY2lmaWVkLCB0aGUgZGVidWcgYWRhcHRlciBpcyBmcmVlIHRvIGRvIHdoYXRldmVyIGl0IHRoaW5rcyBpcyBiZXN0LlxuXHRcdFx0VGhlIGF0dHJpYnV0ZSBpcyBvbmx5IGhvbm9yZWQgYnkgYSBkZWJ1ZyBhZGFwdGVyIGlmIHRoZSBjYXBhYmlsaXR5ICdzdXBwb3J0VGVybWluYXRlRGVidWdnZWUnIGlzIHRydWUuXG5cdFx0Ki9cblx0XHR0ZXJtaW5hdGVEZWJ1Z2dlZT86IGJvb2xlYW47XG5cdH1cblxuXHQvKiogUmVzcG9uc2UgdG8gJ2Rpc2Nvbm5lY3QnIHJlcXVlc3QuIFRoaXMgaXMganVzdCBhbiBhY2tub3dsZWRnZW1lbnQsIHNvIG5vIGJvZHkgZmllbGQgaXMgcmVxdWlyZWQuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgRGlzY29ubmVjdFJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHR9XG5cblx0LyoqIFRlcm1pbmF0ZSByZXF1ZXN0OyB2YWx1ZSBvZiBjb21tYW5kIGZpZWxkIGlzICd0ZXJtaW5hdGUnLlxuXHRcdFRoZSAndGVybWluYXRlJyByZXF1ZXN0IGlzIHNlbnQgZnJvbSB0aGUgY2xpZW50IHRvIHRoZSBkZWJ1ZyBhZGFwdGVyIGluIG9yZGVyIHRvIGdpdmUgdGhlIGRlYnVnZ2VlIGEgY2hhbmNlIGZvciB0ZXJtaW5hdGluZyBpdHNlbGYuXG5cdFx0Q2xpZW50cyBzaG91bGQgb25seSBjYWxsIHRoaXMgcmVxdWVzdCBpZiB0aGUgY2FwYWJpbGl0eSAnc3VwcG9ydHNUZXJtaW5hdGVSZXF1ZXN0JyBpcyB0cnVlLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFRlcm1pbmF0ZVJlcXVlc3QgZXh0ZW5kcyBSZXF1ZXN0IHtcblx0XHQvLyBjb21tYW5kOiAndGVybWluYXRlJztcblx0XHRhcmd1bWVudHM/OiBUZXJtaW5hdGVBcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAndGVybWluYXRlJyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFRlcm1pbmF0ZUFyZ3VtZW50cyB7XG5cdFx0LyoqIEEgdmFsdWUgb2YgdHJ1ZSBpbmRpY2F0ZXMgdGhhdCB0aGlzICd0ZXJtaW5hdGUnIHJlcXVlc3QgaXMgcGFydCBvZiBhIHJlc3RhcnQgc2VxdWVuY2UuICovXG5cdFx0cmVzdGFydD86IGJvb2xlYW47XG5cdH1cblxuXHQvKiogUmVzcG9uc2UgdG8gJ3Rlcm1pbmF0ZScgcmVxdWVzdC4gVGhpcyBpcyBqdXN0IGFuIGFja25vd2xlZGdlbWVudCwgc28gbm8gYm9keSBmaWVsZCBpcyByZXF1aXJlZC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBUZXJtaW5hdGVSZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcblx0fVxuXG5cdC8qKiBCcmVha3BvaW50TG9jYXRpb25zIHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ2JyZWFrcG9pbnRMb2NhdGlvbnMnLlxuXHRcdFRoZSAnYnJlYWtwb2ludExvY2F0aW9ucycgcmVxdWVzdCByZXR1cm5zIGFsbCBwb3NzaWJsZSBsb2NhdGlvbnMgZm9yIHNvdXJjZSBicmVha3BvaW50cyBpbiBhIGdpdmVuIHJhbmdlLlxuXHRcdENsaWVudHMgc2hvdWxkIG9ubHkgY2FsbCB0aGlzIHJlcXVlc3QgaWYgdGhlIGNhcGFiaWxpdHkgJ3N1cHBvcnRzQnJlYWtwb2ludExvY2F0aW9uc1JlcXVlc3QnIGlzIHRydWUuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgQnJlYWtwb2ludExvY2F0aW9uc1JlcXVlc3QgZXh0ZW5kcyBSZXF1ZXN0IHtcblx0XHQvLyBjb21tYW5kOiAnYnJlYWtwb2ludExvY2F0aW9ucyc7XG5cdFx0YXJndW1lbnRzPzogQnJlYWtwb2ludExvY2F0aW9uc0FyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICdicmVha3BvaW50TG9jYXRpb25zJyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEJyZWFrcG9pbnRMb2NhdGlvbnNBcmd1bWVudHMge1xuXHRcdC8qKiBUaGUgc291cmNlIGxvY2F0aW9uIG9mIHRoZSBicmVha3BvaW50czsgZWl0aGVyICdzb3VyY2UucGF0aCcgb3IgJ3NvdXJjZS5yZWZlcmVuY2UnIG11c3QgYmUgc3BlY2lmaWVkLiAqL1xuXHRcdHNvdXJjZTogU291cmNlO1xuXHRcdC8qKiBTdGFydCBsaW5lIG9mIHJhbmdlIHRvIHNlYXJjaCBwb3NzaWJsZSBicmVha3BvaW50IGxvY2F0aW9ucyBpbi4gSWYgb25seSB0aGUgbGluZSBpcyBzcGVjaWZpZWQsIHRoZSByZXF1ZXN0IHJldHVybnMgYWxsIHBvc3NpYmxlIGxvY2F0aW9ucyBpbiB0aGF0IGxpbmUuICovXG5cdFx0bGluZTogbnVtYmVyO1xuXHRcdC8qKiBPcHRpb25hbCBzdGFydCBjb2x1bW4gb2YgcmFuZ2UgdG8gc2VhcmNoIHBvc3NpYmxlIGJyZWFrcG9pbnQgbG9jYXRpb25zIGluLiBJZiBubyBzdGFydCBjb2x1bW4gaXMgZ2l2ZW4sIHRoZSBmaXJzdCBjb2x1bW4gaW4gdGhlIHN0YXJ0IGxpbmUgaXMgYXNzdW1lZC4gKi9cblx0XHRjb2x1bW4/OiBudW1iZXI7XG5cdFx0LyoqIE9wdGlvbmFsIGVuZCBsaW5lIG9mIHJhbmdlIHRvIHNlYXJjaCBwb3NzaWJsZSBicmVha3BvaW50IGxvY2F0aW9ucyBpbi4gSWYgbm8gZW5kIGxpbmUgaXMgZ2l2ZW4sIHRoZW4gdGhlIGVuZCBsaW5lIGlzIGFzc3VtZWQgdG8gYmUgdGhlIHN0YXJ0IGxpbmUuICovXG5cdFx0ZW5kTGluZT86IG51bWJlcjtcblx0XHQvKiogT3B0aW9uYWwgZW5kIGNvbHVtbiBvZiByYW5nZSB0byBzZWFyY2ggcG9zc2libGUgYnJlYWtwb2ludCBsb2NhdGlvbnMgaW4uIElmIG5vIGVuZCBjb2x1bW4gaXMgZ2l2ZW4sIHRoZW4gaXQgaXMgYXNzdW1lZCB0byBiZSBpbiB0aGUgbGFzdCBjb2x1bW4gb2YgdGhlIGVuZCBsaW5lLiAqL1xuXHRcdGVuZENvbHVtbj86IG51bWJlcjtcblx0fVxuXG5cdC8qKiBSZXNwb25zZSB0byAnYnJlYWtwb2ludExvY2F0aW9ucycgcmVxdWVzdC5cblx0XHRDb250YWlucyBwb3NzaWJsZSBsb2NhdGlvbnMgZm9yIHNvdXJjZSBicmVha3BvaW50cy5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBCcmVha3BvaW50TG9jYXRpb25zUmVzcG9uc2UgZXh0ZW5kcyBSZXNwb25zZSB7XG5cdFx0Ym9keToge1xuXHRcdFx0LyoqIFNvcnRlZCBzZXQgb2YgcG9zc2libGUgYnJlYWtwb2ludCBsb2NhdGlvbnMuICovXG5cdFx0XHRicmVha3BvaW50czogQnJlYWtwb2ludExvY2F0aW9uW107XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBTZXRCcmVha3BvaW50cyByZXF1ZXN0OyB2YWx1ZSBvZiBjb21tYW5kIGZpZWxkIGlzICdzZXRCcmVha3BvaW50cycuXG5cdFx0U2V0cyBtdWx0aXBsZSBicmVha3BvaW50cyBmb3IgYSBzaW5nbGUgc291cmNlIGFuZCBjbGVhcnMgYWxsIHByZXZpb3VzIGJyZWFrcG9pbnRzIGluIHRoYXQgc291cmNlLlxuXHRcdFRvIGNsZWFyIGFsbCBicmVha3BvaW50IGZvciBhIHNvdXJjZSwgc3BlY2lmeSBhbiBlbXB0eSBhcnJheS5cblx0XHRXaGVuIGEgYnJlYWtwb2ludCBpcyBoaXQsIGEgJ3N0b3BwZWQnIGV2ZW50ICh3aXRoIHJlYXNvbiAnYnJlYWtwb2ludCcpIGlzIGdlbmVyYXRlZC5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBTZXRCcmVha3BvaW50c1JlcXVlc3QgZXh0ZW5kcyBSZXF1ZXN0IHtcblx0XHQvLyBjb21tYW5kOiAnc2V0QnJlYWtwb2ludHMnO1xuXHRcdGFyZ3VtZW50czogU2V0QnJlYWtwb2ludHNBcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAnc2V0QnJlYWtwb2ludHMnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgU2V0QnJlYWtwb2ludHNBcmd1bWVudHMge1xuXHRcdC8qKiBUaGUgc291cmNlIGxvY2F0aW9uIG9mIHRoZSBicmVha3BvaW50czsgZWl0aGVyICdzb3VyY2UucGF0aCcgb3IgJ3NvdXJjZS5yZWZlcmVuY2UnIG11c3QgYmUgc3BlY2lmaWVkLiAqL1xuXHRcdHNvdXJjZTogU291cmNlO1xuXHRcdC8qKiBUaGUgY29kZSBsb2NhdGlvbnMgb2YgdGhlIGJyZWFrcG9pbnRzLiAqL1xuXHRcdGJyZWFrcG9pbnRzPzogU291cmNlQnJlYWtwb2ludFtdO1xuXHRcdC8qKiBEZXByZWNhdGVkOiBUaGUgY29kZSBsb2NhdGlvbnMgb2YgdGhlIGJyZWFrcG9pbnRzLiAqL1xuXHRcdGxpbmVzPzogbnVtYmVyW107XG5cdFx0LyoqIEEgdmFsdWUgb2YgdHJ1ZSBpbmRpY2F0ZXMgdGhhdCB0aGUgdW5kZXJseWluZyBzb3VyY2UgaGFzIGJlZW4gbW9kaWZpZWQgd2hpY2ggcmVzdWx0cyBpbiBuZXcgYnJlYWtwb2ludCBsb2NhdGlvbnMuICovXG5cdFx0c291cmNlTW9kaWZpZWQ/OiBib29sZWFuO1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICdzZXRCcmVha3BvaW50cycgcmVxdWVzdC5cblx0XHRSZXR1cm5lZCBpcyBpbmZvcm1hdGlvbiBhYm91dCBlYWNoIGJyZWFrcG9pbnQgY3JlYXRlZCBieSB0aGlzIHJlcXVlc3QuXG5cdFx0VGhpcyBpbmNsdWRlcyB0aGUgYWN0dWFsIGNvZGUgbG9jYXRpb24gYW5kIHdoZXRoZXIgdGhlIGJyZWFrcG9pbnQgY291bGQgYmUgdmVyaWZpZWQuXG5cdFx0VGhlIGJyZWFrcG9pbnRzIHJldHVybmVkIGFyZSBpbiB0aGUgc2FtZSBvcmRlciBhcyB0aGUgZWxlbWVudHMgb2YgdGhlICdicmVha3BvaW50cydcblx0XHQob3IgdGhlIGRlcHJlY2F0ZWQgJ2xpbmVzJykgYXJyYXkgaW4gdGhlIGFyZ3VtZW50cy5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBTZXRCcmVha3BvaW50c1Jlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHRcdGJvZHk6IHtcblx0XHRcdC8qKiBJbmZvcm1hdGlvbiBhYm91dCB0aGUgYnJlYWtwb2ludHMuXG5cdFx0XHRcdFRoZSBhcnJheSBlbGVtZW50cyBhcmUgaW4gdGhlIHNhbWUgb3JkZXIgYXMgdGhlIGVsZW1lbnRzIG9mIHRoZSAnYnJlYWtwb2ludHMnIChvciB0aGUgZGVwcmVjYXRlZCAnbGluZXMnKSBhcnJheSBpbiB0aGUgYXJndW1lbnRzLlxuXHRcdFx0Ki9cblx0XHRcdGJyZWFrcG9pbnRzOiBCcmVha3BvaW50W107XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBTZXRGdW5jdGlvbkJyZWFrcG9pbnRzIHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ3NldEZ1bmN0aW9uQnJlYWtwb2ludHMnLlxuXHRcdFJlcGxhY2VzIGFsbCBleGlzdGluZyBmdW5jdGlvbiBicmVha3BvaW50cyB3aXRoIG5ldyBmdW5jdGlvbiBicmVha3BvaW50cy5cblx0XHRUbyBjbGVhciBhbGwgZnVuY3Rpb24gYnJlYWtwb2ludHMsIHNwZWNpZnkgYW4gZW1wdHkgYXJyYXkuXG5cdFx0V2hlbiBhIGZ1bmN0aW9uIGJyZWFrcG9pbnQgaXMgaGl0LCBhICdzdG9wcGVkJyBldmVudCAod2l0aCByZWFzb24gJ2Z1bmN0aW9uIGJyZWFrcG9pbnQnKSBpcyBnZW5lcmF0ZWQuXG5cdFx0Q2xpZW50cyBzaG91bGQgb25seSBjYWxsIHRoaXMgcmVxdWVzdCBpZiB0aGUgY2FwYWJpbGl0eSAnc3VwcG9ydHNGdW5jdGlvbkJyZWFrcG9pbnRzJyBpcyB0cnVlLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFNldEZ1bmN0aW9uQnJlYWtwb2ludHNSZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG5cdFx0Ly8gY29tbWFuZDogJ3NldEZ1bmN0aW9uQnJlYWtwb2ludHMnO1xuXHRcdGFyZ3VtZW50czogU2V0RnVuY3Rpb25CcmVha3BvaW50c0FyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICdzZXRGdW5jdGlvbkJyZWFrcG9pbnRzJyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFNldEZ1bmN0aW9uQnJlYWtwb2ludHNBcmd1bWVudHMge1xuXHRcdC8qKiBUaGUgZnVuY3Rpb24gbmFtZXMgb2YgdGhlIGJyZWFrcG9pbnRzLiAqL1xuXHRcdGJyZWFrcG9pbnRzOiBGdW5jdGlvbkJyZWFrcG9pbnRbXTtcblx0fVxuXG5cdC8qKiBSZXNwb25zZSB0byAnc2V0RnVuY3Rpb25CcmVha3BvaW50cycgcmVxdWVzdC5cblx0XHRSZXR1cm5lZCBpcyBpbmZvcm1hdGlvbiBhYm91dCBlYWNoIGJyZWFrcG9pbnQgY3JlYXRlZCBieSB0aGlzIHJlcXVlc3QuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgU2V0RnVuY3Rpb25CcmVha3BvaW50c1Jlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHRcdGJvZHk6IHtcblx0XHRcdC8qKiBJbmZvcm1hdGlvbiBhYm91dCB0aGUgYnJlYWtwb2ludHMuIFRoZSBhcnJheSBlbGVtZW50cyBjb3JyZXNwb25kIHRvIHRoZSBlbGVtZW50cyBvZiB0aGUgJ2JyZWFrcG9pbnRzJyBhcnJheS4gKi9cblx0XHRcdGJyZWFrcG9pbnRzOiBCcmVha3BvaW50W107XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBTZXRFeGNlcHRpb25CcmVha3BvaW50cyByZXF1ZXN0OyB2YWx1ZSBvZiBjb21tYW5kIGZpZWxkIGlzICdzZXRFeGNlcHRpb25CcmVha3BvaW50cycuXG5cdFx0VGhlIHJlcXVlc3QgY29uZmlndXJlcyB0aGUgZGVidWdnZXJzIHJlc3BvbnNlIHRvIHRocm93biBleGNlcHRpb25zLlxuXHRcdElmIGFuIGV4Y2VwdGlvbiBpcyBjb25maWd1cmVkIHRvIGJyZWFrLCBhICdzdG9wcGVkJyBldmVudCBpcyBmaXJlZCAod2l0aCByZWFzb24gJ2V4Y2VwdGlvbicpLlxuXHRcdENsaWVudHMgc2hvdWxkIG9ubHkgY2FsbCB0aGlzIHJlcXVlc3QgaWYgdGhlIGNhcGFiaWxpdHkgJ2V4Y2VwdGlvbkJyZWFrcG9pbnRGaWx0ZXJzJyByZXR1cm5zIG9uZSBvciBtb3JlIGZpbHRlcnMuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgU2V0RXhjZXB0aW9uQnJlYWtwb2ludHNSZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG5cdFx0Ly8gY29tbWFuZDogJ3NldEV4Y2VwdGlvbkJyZWFrcG9pbnRzJztcblx0XHRhcmd1bWVudHM6IFNldEV4Y2VwdGlvbkJyZWFrcG9pbnRzQXJndW1lbnRzO1xuXHR9XG5cblx0LyoqIEFyZ3VtZW50cyBmb3IgJ3NldEV4Y2VwdGlvbkJyZWFrcG9pbnRzJyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFNldEV4Y2VwdGlvbkJyZWFrcG9pbnRzQXJndW1lbnRzIHtcblx0XHQvKiogU2V0IG9mIGV4Y2VwdGlvbiBmaWx0ZXJzIHNwZWNpZmllZCBieSB0aGVpciBJRC4gVGhlIHNldCBvZiBhbGwgcG9zc2libGUgZXhjZXB0aW9uIGZpbHRlcnMgaXMgZGVmaW5lZCBieSB0aGUgJ2V4Y2VwdGlvbkJyZWFrcG9pbnRGaWx0ZXJzJyBjYXBhYmlsaXR5LiBUaGUgJ2ZpbHRlcicgYW5kICdmaWx0ZXJPcHRpb25zJyBzZXRzIGFyZSBhZGRpdGl2ZS4gKi9cblx0XHRmaWx0ZXJzOiBzdHJpbmdbXTtcblx0XHQvKiogU2V0IG9mIGV4Y2VwdGlvbiBmaWx0ZXJzIGFuZCB0aGVpciBvcHRpb25zLiBUaGUgc2V0IG9mIGFsbCBwb3NzaWJsZSBleGNlcHRpb24gZmlsdGVycyBpcyBkZWZpbmVkIGJ5IHRoZSAnZXhjZXB0aW9uQnJlYWtwb2ludEZpbHRlcnMnIGNhcGFiaWxpdHkuIFRoaXMgYXR0cmlidXRlIGlzIG9ubHkgaG9ub3JlZCBieSBhIGRlYnVnIGFkYXB0ZXIgaWYgdGhlIGNhcGFiaWxpdHkgJ3N1cHBvcnRzRXhjZXB0aW9uRmlsdGVyT3B0aW9ucycgaXMgdHJ1ZS4gVGhlICdmaWx0ZXInIGFuZCAnZmlsdGVyT3B0aW9ucycgc2V0cyBhcmUgYWRkaXRpdmUuICovXG5cdFx0ZmlsdGVyT3B0aW9ucz86IEV4Y2VwdGlvbkZpbHRlck9wdGlvbnNbXTtcblx0XHQvKiogQ29uZmlndXJhdGlvbiBvcHRpb25zIGZvciBzZWxlY3RlZCBleGNlcHRpb25zLlxuXHRcdFx0VGhlIGF0dHJpYnV0ZSBpcyBvbmx5IGhvbm9yZWQgYnkgYSBkZWJ1ZyBhZGFwdGVyIGlmIHRoZSBjYXBhYmlsaXR5ICdzdXBwb3J0c0V4Y2VwdGlvbk9wdGlvbnMnIGlzIHRydWUuXG5cdFx0Ki9cblx0XHRleGNlcHRpb25PcHRpb25zPzogRXhjZXB0aW9uT3B0aW9uc1tdO1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICdzZXRFeGNlcHRpb25CcmVha3BvaW50cycgcmVxdWVzdC4gVGhpcyBpcyBqdXN0IGFuIGFja25vd2xlZGdlbWVudCwgc28gbm8gYm9keSBmaWVsZCBpcyByZXF1aXJlZC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBTZXRFeGNlcHRpb25CcmVha3BvaW50c1Jlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHR9XG5cblx0LyoqIERhdGFCcmVha3BvaW50SW5mbyByZXF1ZXN0OyB2YWx1ZSBvZiBjb21tYW5kIGZpZWxkIGlzICdkYXRhQnJlYWtwb2ludEluZm8nLlxuXHRcdE9idGFpbnMgaW5mb3JtYXRpb24gb24gYSBwb3NzaWJsZSBkYXRhIGJyZWFrcG9pbnQgdGhhdCBjb3VsZCBiZSBzZXQgb24gYW4gZXhwcmVzc2lvbiBvciB2YXJpYWJsZS5cblx0XHRDbGllbnRzIHNob3VsZCBvbmx5IGNhbGwgdGhpcyByZXF1ZXN0IGlmIHRoZSBjYXBhYmlsaXR5ICdzdXBwb3J0c0RhdGFCcmVha3BvaW50cycgaXMgdHJ1ZS5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBEYXRhQnJlYWtwb2ludEluZm9SZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG5cdFx0Ly8gY29tbWFuZDogJ2RhdGFCcmVha3BvaW50SW5mbyc7XG5cdFx0YXJndW1lbnRzOiBEYXRhQnJlYWtwb2ludEluZm9Bcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAnZGF0YUJyZWFrcG9pbnRJbmZvJyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIERhdGFCcmVha3BvaW50SW5mb0FyZ3VtZW50cyB7XG5cdFx0LyoqIFJlZmVyZW5jZSB0byB0aGUgVmFyaWFibGUgY29udGFpbmVyIGlmIHRoZSBkYXRhIGJyZWFrcG9pbnQgaXMgcmVxdWVzdGVkIGZvciBhIGNoaWxkIG9mIHRoZSBjb250YWluZXIuICovXG5cdFx0dmFyaWFibGVzUmVmZXJlbmNlPzogbnVtYmVyO1xuXHRcdC8qKiBUaGUgbmFtZSBvZiB0aGUgVmFyaWFibGUncyBjaGlsZCB0byBvYnRhaW4gZGF0YSBicmVha3BvaW50IGluZm9ybWF0aW9uIGZvci5cblx0XHRcdElmIHZhcmlhYmxlUmVmZXJlbmNlIGlzbuKAmXQgcHJvdmlkZWQsIHRoaXMgY2FuIGJlIGFuIGV4cHJlc3Npb24uXG5cdFx0Ki9cblx0XHRuYW1lOiBzdHJpbmc7XG5cdH1cblxuXHQvKiogUmVzcG9uc2UgdG8gJ2RhdGFCcmVha3BvaW50SW5mbycgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBEYXRhQnJlYWtwb2ludEluZm9SZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcblx0XHRib2R5OiB7XG5cdFx0XHQvKiogQW4gaWRlbnRpZmllciBmb3IgdGhlIGRhdGEgb24gd2hpY2ggYSBkYXRhIGJyZWFrcG9pbnQgY2FuIGJlIHJlZ2lzdGVyZWQgd2l0aCB0aGUgc2V0RGF0YUJyZWFrcG9pbnRzIHJlcXVlc3Qgb3IgbnVsbCBpZiBubyBkYXRhIGJyZWFrcG9pbnQgaXMgYXZhaWxhYmxlLiAqL1xuXHRcdFx0ZGF0YUlkOiBzdHJpbmcgfCBudWxsO1xuXHRcdFx0LyoqIFVJIHN0cmluZyB0aGF0IGRlc2NyaWJlcyBvbiB3aGF0IGRhdGEgdGhlIGJyZWFrcG9pbnQgaXMgc2V0IG9uIG9yIHdoeSBhIGRhdGEgYnJlYWtwb2ludCBpcyBub3QgYXZhaWxhYmxlLiAqL1xuXHRcdFx0ZGVzY3JpcHRpb246IHN0cmluZztcblx0XHRcdC8qKiBPcHRpb25hbCBhdHRyaWJ1dGUgbGlzdGluZyB0aGUgYXZhaWxhYmxlIGFjY2VzcyB0eXBlcyBmb3IgYSBwb3RlbnRpYWwgZGF0YSBicmVha3BvaW50LiBBIFVJIGZyb250ZW5kIGNvdWxkIHN1cmZhY2UgdGhpcyBpbmZvcm1hdGlvbi4gKi9cblx0XHRcdGFjY2Vzc1R5cGVzPzogRGF0YUJyZWFrcG9pbnRBY2Nlc3NUeXBlW107XG5cdFx0XHQvKiogT3B0aW9uYWwgYXR0cmlidXRlIGluZGljYXRpbmcgdGhhdCBhIHBvdGVudGlhbCBkYXRhIGJyZWFrcG9pbnQgY291bGQgYmUgcGVyc2lzdGVkIGFjcm9zcyBzZXNzaW9ucy4gKi9cblx0XHRcdGNhblBlcnNpc3Q/OiBib29sZWFuO1xuXHRcdH07XG5cdH1cblxuXHQvKiogU2V0RGF0YUJyZWFrcG9pbnRzIHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ3NldERhdGFCcmVha3BvaW50cycuXG5cdFx0UmVwbGFjZXMgYWxsIGV4aXN0aW5nIGRhdGEgYnJlYWtwb2ludHMgd2l0aCBuZXcgZGF0YSBicmVha3BvaW50cy5cblx0XHRUbyBjbGVhciBhbGwgZGF0YSBicmVha3BvaW50cywgc3BlY2lmeSBhbiBlbXB0eSBhcnJheS5cblx0XHRXaGVuIGEgZGF0YSBicmVha3BvaW50IGlzIGhpdCwgYSAnc3RvcHBlZCcgZXZlbnQgKHdpdGggcmVhc29uICdkYXRhIGJyZWFrcG9pbnQnKSBpcyBnZW5lcmF0ZWQuXG5cdFx0Q2xpZW50cyBzaG91bGQgb25seSBjYWxsIHRoaXMgcmVxdWVzdCBpZiB0aGUgY2FwYWJpbGl0eSAnc3VwcG9ydHNEYXRhQnJlYWtwb2ludHMnIGlzIHRydWUuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgU2V0RGF0YUJyZWFrcG9pbnRzUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdzZXREYXRhQnJlYWtwb2ludHMnO1xuXHRcdGFyZ3VtZW50czogU2V0RGF0YUJyZWFrcG9pbnRzQXJndW1lbnRzO1xuXHR9XG5cblx0LyoqIEFyZ3VtZW50cyBmb3IgJ3NldERhdGFCcmVha3BvaW50cycgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBTZXREYXRhQnJlYWtwb2ludHNBcmd1bWVudHMge1xuXHRcdC8qKiBUaGUgY29udGVudHMgb2YgdGhpcyBhcnJheSByZXBsYWNlcyBhbGwgZXhpc3RpbmcgZGF0YSBicmVha3BvaW50cy4gQW4gZW1wdHkgYXJyYXkgY2xlYXJzIGFsbCBkYXRhIGJyZWFrcG9pbnRzLiAqL1xuXHRcdGJyZWFrcG9pbnRzOiBEYXRhQnJlYWtwb2ludFtdO1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICdzZXREYXRhQnJlYWtwb2ludHMnIHJlcXVlc3QuXG5cdFx0UmV0dXJuZWQgaXMgaW5mb3JtYXRpb24gYWJvdXQgZWFjaCBicmVha3BvaW50IGNyZWF0ZWQgYnkgdGhpcyByZXF1ZXN0LlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFNldERhdGFCcmVha3BvaW50c1Jlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHRcdGJvZHk6IHtcblx0XHRcdC8qKiBJbmZvcm1hdGlvbiBhYm91dCB0aGUgZGF0YSBicmVha3BvaW50cy4gVGhlIGFycmF5IGVsZW1lbnRzIGNvcnJlc3BvbmQgdG8gdGhlIGVsZW1lbnRzIG9mIHRoZSBpbnB1dCBhcmd1bWVudCAnYnJlYWtwb2ludHMnIGFycmF5LiAqL1xuXHRcdFx0YnJlYWtwb2ludHM6IEJyZWFrcG9pbnRbXTtcblx0XHR9O1xuXHR9XG5cblx0LyoqIFNldEluc3RydWN0aW9uQnJlYWtwb2ludHMgcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAnc2V0SW5zdHJ1Y3Rpb25CcmVha3BvaW50cycuXG5cdFx0UmVwbGFjZXMgYWxsIGV4aXN0aW5nIGluc3RydWN0aW9uIGJyZWFrcG9pbnRzLiBUeXBpY2FsbHksIGluc3RydWN0aW9uIGJyZWFrcG9pbnRzIHdvdWxkIGJlIHNldCBmcm9tIGEgZGlhc3NlbWJseSB3aW5kb3cuIFxuXHRcdFRvIGNsZWFyIGFsbCBpbnN0cnVjdGlvbiBicmVha3BvaW50cywgc3BlY2lmeSBhbiBlbXB0eSBhcnJheS5cblx0XHRXaGVuIGFuIGluc3RydWN0aW9uIGJyZWFrcG9pbnQgaXMgaGl0LCBhICdzdG9wcGVkJyBldmVudCAod2l0aCByZWFzb24gJ2luc3RydWN0aW9uIGJyZWFrcG9pbnQnKSBpcyBnZW5lcmF0ZWQuXG5cdFx0Q2xpZW50cyBzaG91bGQgb25seSBjYWxsIHRoaXMgcmVxdWVzdCBpZiB0aGUgY2FwYWJpbGl0eSAnc3VwcG9ydHNJbnN0cnVjdGlvbkJyZWFrcG9pbnRzJyBpcyB0cnVlLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFNldEluc3RydWN0aW9uQnJlYWtwb2ludHNSZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG5cdFx0Ly8gY29tbWFuZDogJ3NldEluc3RydWN0aW9uQnJlYWtwb2ludHMnO1xuXHRcdGFyZ3VtZW50czogU2V0SW5zdHJ1Y3Rpb25CcmVha3BvaW50c0FyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICdzZXRJbnN0cnVjdGlvbkJyZWFrcG9pbnRzJyByZXF1ZXN0ICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgU2V0SW5zdHJ1Y3Rpb25CcmVha3BvaW50c0FyZ3VtZW50cyB7XG5cdFx0LyoqIFRoZSBpbnN0cnVjdGlvbiByZWZlcmVuY2VzIG9mIHRoZSBicmVha3BvaW50cyAqL1xuXHRcdGJyZWFrcG9pbnRzOiBJbnN0cnVjdGlvbkJyZWFrcG9pbnRbXTtcblx0fVxuXG5cdC8qKiBSZXNwb25zZSB0byAnc2V0SW5zdHJ1Y3Rpb25CcmVha3BvaW50cycgcmVxdWVzdCAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFNldEluc3RydWN0aW9uQnJlYWtwb2ludHNSZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcblx0XHRib2R5OiB7XG5cdFx0XHQvKiogSW5mb3JtYXRpb24gYWJvdXQgdGhlIGJyZWFrcG9pbnRzLiBUaGUgYXJyYXkgZWxlbWVudHMgY29ycmVzcG9uZCB0byB0aGUgZWxlbWVudHMgb2YgdGhlICdicmVha3BvaW50cycgYXJyYXkuICovXG5cdFx0XHRicmVha3BvaW50czogQnJlYWtwb2ludFtdO1xuXHRcdH07XG5cdH1cblxuXHQvKiogQ29udGludWUgcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAnY29udGludWUnLlxuXHRcdFRoZSByZXF1ZXN0IHN0YXJ0cyB0aGUgZGVidWdnZWUgdG8gcnVuIGFnYWluLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIENvbnRpbnVlUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdjb250aW51ZSc7XG5cdFx0YXJndW1lbnRzOiBDb250aW51ZUFyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICdjb250aW51ZScgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBDb250aW51ZUFyZ3VtZW50cyB7XG5cdFx0LyoqIENvbnRpbnVlIGV4ZWN1dGlvbiBmb3IgdGhlIHNwZWNpZmllZCB0aHJlYWQgKGlmIHBvc3NpYmxlKS5cblx0XHRcdElmIHRoZSBiYWNrZW5kIGNhbm5vdCBjb250aW51ZSBvbiBhIHNpbmdsZSB0aHJlYWQgYnV0IHdpbGwgY29udGludWUgb24gYWxsIHRocmVhZHMsIGl0IHNob3VsZCBzZXQgdGhlICdhbGxUaHJlYWRzQ29udGludWVkJyBhdHRyaWJ1dGUgaW4gdGhlIHJlc3BvbnNlIHRvIHRydWUuXG5cdFx0Ki9cblx0XHR0aHJlYWRJZDogbnVtYmVyO1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICdjb250aW51ZScgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBDb250aW51ZVJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHRcdGJvZHk6IHtcblx0XHRcdC8qKiBJZiB0cnVlLCB0aGUgJ2NvbnRpbnVlJyByZXF1ZXN0IGhhcyBpZ25vcmVkIHRoZSBzcGVjaWZpZWQgdGhyZWFkIGFuZCBjb250aW51ZWQgYWxsIHRocmVhZHMgaW5zdGVhZC5cblx0XHRcdFx0SWYgdGhpcyBhdHRyaWJ1dGUgaXMgbWlzc2luZyBhIHZhbHVlIG9mICd0cnVlJyBpcyBhc3N1bWVkIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LlxuXHRcdFx0Ki9cblx0XHRcdGFsbFRocmVhZHNDb250aW51ZWQ/OiBib29sZWFuO1xuXHRcdH07XG5cdH1cblxuXHQvKiogTmV4dCByZXF1ZXN0OyB2YWx1ZSBvZiBjb21tYW5kIGZpZWxkIGlzICduZXh0Jy5cblx0XHRUaGUgcmVxdWVzdCBzdGFydHMgdGhlIGRlYnVnZ2VlIHRvIHJ1biBhZ2FpbiBmb3Igb25lIHN0ZXAuXG5cdFx0VGhlIGRlYnVnIGFkYXB0ZXIgZmlyc3Qgc2VuZHMgdGhlIHJlc3BvbnNlIGFuZCB0aGVuIGEgJ3N0b3BwZWQnIGV2ZW50ICh3aXRoIHJlYXNvbiAnc3RlcCcpIGFmdGVyIHRoZSBzdGVwIGhhcyBjb21wbGV0ZWQuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgTmV4dFJlcXVlc3QgZXh0ZW5kcyBSZXF1ZXN0IHtcblx0XHQvLyBjb21tYW5kOiAnbmV4dCc7XG5cdFx0YXJndW1lbnRzOiBOZXh0QXJndW1lbnRzO1xuXHR9XG5cblx0LyoqIEFyZ3VtZW50cyBmb3IgJ25leHQnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgTmV4dEFyZ3VtZW50cyB7XG5cdFx0LyoqIEV4ZWN1dGUgJ25leHQnIGZvciB0aGlzIHRocmVhZC4gKi9cblx0XHR0aHJlYWRJZDogbnVtYmVyO1xuXHRcdC8qKiBPcHRpb25hbCBncmFudWxhcml0eSB0byBzdGVwLiBJZiBubyBncmFudWxhcml0eSBpcyBzcGVjaWZpZWQsIGEgZ3JhbnVsYXJpdHkgb2YgJ3N0YXRlbWVudCcgaXMgYXNzdW1lZC4gKi9cblx0XHRncmFudWxhcml0eT86IFN0ZXBwaW5nR3JhbnVsYXJpdHk7XG5cdH1cblxuXHQvKiogUmVzcG9uc2UgdG8gJ25leHQnIHJlcXVlc3QuIFRoaXMgaXMganVzdCBhbiBhY2tub3dsZWRnZW1lbnQsIHNvIG5vIGJvZHkgZmllbGQgaXMgcmVxdWlyZWQuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgTmV4dFJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHR9XG5cblx0LyoqIFN0ZXBJbiByZXF1ZXN0OyB2YWx1ZSBvZiBjb21tYW5kIGZpZWxkIGlzICdzdGVwSW4nLlxuXHRcdFRoZSByZXF1ZXN0IHN0YXJ0cyB0aGUgZGVidWdnZWUgdG8gc3RlcCBpbnRvIGEgZnVuY3Rpb24vbWV0aG9kIGlmIHBvc3NpYmxlLlxuXHRcdElmIGl0IGNhbm5vdCBzdGVwIGludG8gYSB0YXJnZXQsICdzdGVwSW4nIGJlaGF2ZXMgbGlrZSAnbmV4dCcuXG5cdFx0VGhlIGRlYnVnIGFkYXB0ZXIgZmlyc3Qgc2VuZHMgdGhlIHJlc3BvbnNlIGFuZCB0aGVuIGEgJ3N0b3BwZWQnIGV2ZW50ICh3aXRoIHJlYXNvbiAnc3RlcCcpIGFmdGVyIHRoZSBzdGVwIGhhcyBjb21wbGV0ZWQuXG5cdFx0SWYgdGhlcmUgYXJlIG11bHRpcGxlIGZ1bmN0aW9uL21ldGhvZCBjYWxscyAob3Igb3RoZXIgdGFyZ2V0cykgb24gdGhlIHNvdXJjZSBsaW5lLFxuXHRcdHRoZSBvcHRpb25hbCBhcmd1bWVudCAndGFyZ2V0SWQnIGNhbiBiZSB1c2VkIHRvIGNvbnRyb2wgaW50byB3aGljaCB0YXJnZXQgdGhlICdzdGVwSW4nIHNob3VsZCBvY2N1ci5cblx0XHRUaGUgbGlzdCBvZiBwb3NzaWJsZSB0YXJnZXRzIGZvciBhIGdpdmVuIHNvdXJjZSBsaW5lIGNhbiBiZSByZXRyaWV2ZWQgdmlhIHRoZSAnc3RlcEluVGFyZ2V0cycgcmVxdWVzdC5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBTdGVwSW5SZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG5cdFx0Ly8gY29tbWFuZDogJ3N0ZXBJbic7XG5cdFx0YXJndW1lbnRzOiBTdGVwSW5Bcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAnc3RlcEluJyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFN0ZXBJbkFyZ3VtZW50cyB7XG5cdFx0LyoqIEV4ZWN1dGUgJ3N0ZXBJbicgZm9yIHRoaXMgdGhyZWFkLiAqL1xuXHRcdHRocmVhZElkOiBudW1iZXI7XG5cdFx0LyoqIE9wdGlvbmFsIGlkIG9mIHRoZSB0YXJnZXQgdG8gc3RlcCBpbnRvLiAqL1xuXHRcdHRhcmdldElkPzogbnVtYmVyO1xuXHRcdC8qKiBPcHRpb25hbCBncmFudWxhcml0eSB0byBzdGVwLiBJZiBubyBncmFudWxhcml0eSBpcyBzcGVjaWZpZWQsIGEgZ3JhbnVsYXJpdHkgb2YgJ3N0YXRlbWVudCcgaXMgYXNzdW1lZC4gKi9cblx0XHRncmFudWxhcml0eT86IFN0ZXBwaW5nR3JhbnVsYXJpdHk7XG5cdH1cblxuXHQvKiogUmVzcG9uc2UgdG8gJ3N0ZXBJbicgcmVxdWVzdC4gVGhpcyBpcyBqdXN0IGFuIGFja25vd2xlZGdlbWVudCwgc28gbm8gYm9keSBmaWVsZCBpcyByZXF1aXJlZC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBTdGVwSW5SZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcblx0fVxuXG5cdC8qKiBTdGVwT3V0IHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ3N0ZXBPdXQnLlxuXHRcdFRoZSByZXF1ZXN0IHN0YXJ0cyB0aGUgZGVidWdnZWUgdG8gcnVuIGFnYWluIGZvciBvbmUgc3RlcC5cblx0XHRUaGUgZGVidWcgYWRhcHRlciBmaXJzdCBzZW5kcyB0aGUgcmVzcG9uc2UgYW5kIHRoZW4gYSAnc3RvcHBlZCcgZXZlbnQgKHdpdGggcmVhc29uICdzdGVwJykgYWZ0ZXIgdGhlIHN0ZXAgaGFzIGNvbXBsZXRlZC5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBTdGVwT3V0UmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdzdGVwT3V0Jztcblx0XHRhcmd1bWVudHM6IFN0ZXBPdXRBcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAnc3RlcE91dCcgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBTdGVwT3V0QXJndW1lbnRzIHtcblx0XHQvKiogRXhlY3V0ZSAnc3RlcE91dCcgZm9yIHRoaXMgdGhyZWFkLiAqL1xuXHRcdHRocmVhZElkOiBudW1iZXI7XG5cdFx0LyoqIE9wdGlvbmFsIGdyYW51bGFyaXR5IHRvIHN0ZXAuIElmIG5vIGdyYW51bGFyaXR5IGlzIHNwZWNpZmllZCwgYSBncmFudWxhcml0eSBvZiAnc3RhdGVtZW50JyBpcyBhc3N1bWVkLiAqL1xuXHRcdGdyYW51bGFyaXR5PzogU3RlcHBpbmdHcmFudWxhcml0eTtcblx0fVxuXG5cdC8qKiBSZXNwb25zZSB0byAnc3RlcE91dCcgcmVxdWVzdC4gVGhpcyBpcyBqdXN0IGFuIGFja25vd2xlZGdlbWVudCwgc28gbm8gYm9keSBmaWVsZCBpcyByZXF1aXJlZC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBTdGVwT3V0UmVzcG9uc2UgZXh0ZW5kcyBSZXNwb25zZSB7XG5cdH1cblxuXHQvKiogU3RlcEJhY2sgcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAnc3RlcEJhY2snLlxuXHRcdFRoZSByZXF1ZXN0IHN0YXJ0cyB0aGUgZGVidWdnZWUgdG8gcnVuIG9uZSBzdGVwIGJhY2t3YXJkcy5cblx0XHRUaGUgZGVidWcgYWRhcHRlciBmaXJzdCBzZW5kcyB0aGUgcmVzcG9uc2UgYW5kIHRoZW4gYSAnc3RvcHBlZCcgZXZlbnQgKHdpdGggcmVhc29uICdzdGVwJykgYWZ0ZXIgdGhlIHN0ZXAgaGFzIGNvbXBsZXRlZC5cblx0XHRDbGllbnRzIHNob3VsZCBvbmx5IGNhbGwgdGhpcyByZXF1ZXN0IGlmIHRoZSBjYXBhYmlsaXR5ICdzdXBwb3J0c1N0ZXBCYWNrJyBpcyB0cnVlLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFN0ZXBCYWNrUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdzdGVwQmFjayc7XG5cdFx0YXJndW1lbnRzOiBTdGVwQmFja0FyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICdzdGVwQmFjaycgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBTdGVwQmFja0FyZ3VtZW50cyB7XG5cdFx0LyoqIEV4ZWN1dGUgJ3N0ZXBCYWNrJyBmb3IgdGhpcyB0aHJlYWQuICovXG5cdFx0dGhyZWFkSWQ6IG51bWJlcjtcblx0XHQvKiogT3B0aW9uYWwgZ3JhbnVsYXJpdHkgdG8gc3RlcC4gSWYgbm8gZ3JhbnVsYXJpdHkgaXMgc3BlY2lmaWVkLCBhIGdyYW51bGFyaXR5IG9mICdzdGF0ZW1lbnQnIGlzIGFzc3VtZWQuICovXG5cdFx0Z3JhbnVsYXJpdHk/OiBTdGVwcGluZ0dyYW51bGFyaXR5O1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICdzdGVwQmFjaycgcmVxdWVzdC4gVGhpcyBpcyBqdXN0IGFuIGFja25vd2xlZGdlbWVudCwgc28gbm8gYm9keSBmaWVsZCBpcyByZXF1aXJlZC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBTdGVwQmFja1Jlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHR9XG5cblx0LyoqIFJldmVyc2VDb250aW51ZSByZXF1ZXN0OyB2YWx1ZSBvZiBjb21tYW5kIGZpZWxkIGlzICdyZXZlcnNlQ29udGludWUnLlxuXHRcdFRoZSByZXF1ZXN0IHN0YXJ0cyB0aGUgZGVidWdnZWUgdG8gcnVuIGJhY2t3YXJkLlxuXHRcdENsaWVudHMgc2hvdWxkIG9ubHkgY2FsbCB0aGlzIHJlcXVlc3QgaWYgdGhlIGNhcGFiaWxpdHkgJ3N1cHBvcnRzU3RlcEJhY2snIGlzIHRydWUuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgUmV2ZXJzZUNvbnRpbnVlUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdyZXZlcnNlQ29udGludWUnO1xuXHRcdGFyZ3VtZW50czogUmV2ZXJzZUNvbnRpbnVlQXJndW1lbnRzO1xuXHR9XG5cblx0LyoqIEFyZ3VtZW50cyBmb3IgJ3JldmVyc2VDb250aW51ZScgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBSZXZlcnNlQ29udGludWVBcmd1bWVudHMge1xuXHRcdC8qKiBFeGVjdXRlICdyZXZlcnNlQ29udGludWUnIGZvciB0aGlzIHRocmVhZC4gKi9cblx0XHR0aHJlYWRJZDogbnVtYmVyO1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICdyZXZlcnNlQ29udGludWUnIHJlcXVlc3QuIFRoaXMgaXMganVzdCBhbiBhY2tub3dsZWRnZW1lbnQsIHNvIG5vIGJvZHkgZmllbGQgaXMgcmVxdWlyZWQuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgUmV2ZXJzZUNvbnRpbnVlUmVzcG9uc2UgZXh0ZW5kcyBSZXNwb25zZSB7XG5cdH1cblxuXHQvKiogUmVzdGFydEZyYW1lIHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ3Jlc3RhcnRGcmFtZScuXG5cdFx0VGhlIHJlcXVlc3QgcmVzdGFydHMgZXhlY3V0aW9uIG9mIHRoZSBzcGVjaWZpZWQgc3RhY2tmcmFtZS5cblx0XHRUaGUgZGVidWcgYWRhcHRlciBmaXJzdCBzZW5kcyB0aGUgcmVzcG9uc2UgYW5kIHRoZW4gYSAnc3RvcHBlZCcgZXZlbnQgKHdpdGggcmVhc29uICdyZXN0YXJ0JykgYWZ0ZXIgdGhlIHJlc3RhcnQgaGFzIGNvbXBsZXRlZC5cblx0XHRDbGllbnRzIHNob3VsZCBvbmx5IGNhbGwgdGhpcyByZXF1ZXN0IGlmIHRoZSBjYXBhYmlsaXR5ICdzdXBwb3J0c1Jlc3RhcnRGcmFtZScgaXMgdHJ1ZS5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBSZXN0YXJ0RnJhbWVSZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG5cdFx0Ly8gY29tbWFuZDogJ3Jlc3RhcnRGcmFtZSc7XG5cdFx0YXJndW1lbnRzOiBSZXN0YXJ0RnJhbWVBcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAncmVzdGFydEZyYW1lJyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFJlc3RhcnRGcmFtZUFyZ3VtZW50cyB7XG5cdFx0LyoqIFJlc3RhcnQgdGhpcyBzdGFja2ZyYW1lLiAqL1xuXHRcdGZyYW1lSWQ6IG51bWJlcjtcblx0fVxuXG5cdC8qKiBSZXNwb25zZSB0byAncmVzdGFydEZyYW1lJyByZXF1ZXN0LiBUaGlzIGlzIGp1c3QgYW4gYWNrbm93bGVkZ2VtZW50LCBzbyBubyBib2R5IGZpZWxkIGlzIHJlcXVpcmVkLiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFJlc3RhcnRGcmFtZVJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHR9XG5cblx0LyoqIEdvdG8gcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAnZ290bycuXG5cdFx0VGhlIHJlcXVlc3Qgc2V0cyB0aGUgbG9jYXRpb24gd2hlcmUgdGhlIGRlYnVnZ2VlIHdpbGwgY29udGludWUgdG8gcnVuLlxuXHRcdFRoaXMgbWFrZXMgaXQgcG9zc2libGUgdG8gc2tpcCB0aGUgZXhlY3V0aW9uIG9mIGNvZGUgb3IgdG8gZXhlY3V0ZWQgY29kZSBhZ2Fpbi5cblx0XHRUaGUgY29kZSBiZXR3ZWVuIHRoZSBjdXJyZW50IGxvY2F0aW9uIGFuZCB0aGUgZ290byB0YXJnZXQgaXMgbm90IGV4ZWN1dGVkIGJ1dCBza2lwcGVkLlxuXHRcdFRoZSBkZWJ1ZyBhZGFwdGVyIGZpcnN0IHNlbmRzIHRoZSByZXNwb25zZSBhbmQgdGhlbiBhICdzdG9wcGVkJyBldmVudCB3aXRoIHJlYXNvbiAnZ290bycuXG5cdFx0Q2xpZW50cyBzaG91bGQgb25seSBjYWxsIHRoaXMgcmVxdWVzdCBpZiB0aGUgY2FwYWJpbGl0eSAnc3VwcG9ydHNHb3RvVGFyZ2V0c1JlcXVlc3QnIGlzIHRydWUgKGJlY2F1c2Ugb25seSB0aGVuIGdvdG8gdGFyZ2V0cyBleGlzdCB0aGF0IGNhbiBiZSBwYXNzZWQgYXMgYXJndW1lbnRzKS5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBHb3RvUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdnb3RvJztcblx0XHRhcmd1bWVudHM6IEdvdG9Bcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAnZ290bycgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBHb3RvQXJndW1lbnRzIHtcblx0XHQvKiogU2V0IHRoZSBnb3RvIHRhcmdldCBmb3IgdGhpcyB0aHJlYWQuICovXG5cdFx0dGhyZWFkSWQ6IG51bWJlcjtcblx0XHQvKiogVGhlIGxvY2F0aW9uIHdoZXJlIHRoZSBkZWJ1Z2dlZSB3aWxsIGNvbnRpbnVlIHRvIHJ1bi4gKi9cblx0XHR0YXJnZXRJZDogbnVtYmVyO1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICdnb3RvJyByZXF1ZXN0LiBUaGlzIGlzIGp1c3QgYW4gYWNrbm93bGVkZ2VtZW50LCBzbyBubyBib2R5IGZpZWxkIGlzIHJlcXVpcmVkLiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEdvdG9SZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcblx0fVxuXG5cdC8qKiBQYXVzZSByZXF1ZXN0OyB2YWx1ZSBvZiBjb21tYW5kIGZpZWxkIGlzICdwYXVzZScuXG5cdFx0VGhlIHJlcXVlc3Qgc3VzcGVuZHMgdGhlIGRlYnVnZ2VlLlxuXHRcdFRoZSBkZWJ1ZyBhZGFwdGVyIGZpcnN0IHNlbmRzIHRoZSByZXNwb25zZSBhbmQgdGhlbiBhICdzdG9wcGVkJyBldmVudCAod2l0aCByZWFzb24gJ3BhdXNlJykgYWZ0ZXIgdGhlIHRocmVhZCBoYXMgYmVlbiBwYXVzZWQgc3VjY2Vzc2Z1bGx5LlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFBhdXNlUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdwYXVzZSc7XG5cdFx0YXJndW1lbnRzOiBQYXVzZUFyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICdwYXVzZScgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBQYXVzZUFyZ3VtZW50cyB7XG5cdFx0LyoqIFBhdXNlIGV4ZWN1dGlvbiBmb3IgdGhpcyB0aHJlYWQuICovXG5cdFx0dGhyZWFkSWQ6IG51bWJlcjtcblx0fVxuXG5cdC8qKiBSZXNwb25zZSB0byAncGF1c2UnIHJlcXVlc3QuIFRoaXMgaXMganVzdCBhbiBhY2tub3dsZWRnZW1lbnQsIHNvIG5vIGJvZHkgZmllbGQgaXMgcmVxdWlyZWQuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgUGF1c2VSZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcblx0fVxuXG5cdC8qKiBTdGFja1RyYWNlIHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ3N0YWNrVHJhY2UnLlxuXHRcdFRoZSByZXF1ZXN0IHJldHVybnMgYSBzdGFja3RyYWNlIGZyb20gdGhlIGN1cnJlbnQgZXhlY3V0aW9uIHN0YXRlIG9mIGEgZ2l2ZW4gdGhyZWFkLlxuXHRcdEEgY2xpZW50IGNhbiByZXF1ZXN0IGFsbCBzdGFjayBmcmFtZXMgYnkgb21pdHRpbmcgdGhlIHN0YXJ0RnJhbWUgYW5kIGxldmVscyBhcmd1bWVudHMuIEZvciBwZXJmb3JtYW5jZSBjb25zY2lvdXMgY2xpZW50cyBzdGFjayBmcmFtZXMgY2FuIGJlIHJldHJpZXZlZCBpbiBhIHBpZWNlbWVhbCB3YXkgd2l0aCB0aGUgc3RhcnRGcmFtZSBhbmQgbGV2ZWxzIGFyZ3VtZW50cy4gVGhlIHJlc3BvbnNlIG9mIHRoZSBzdGFja1RyYWNlIHJlcXVlc3QgbWF5IGNvbnRhaW4gYSB0b3RhbEZyYW1lcyBwcm9wZXJ0eSB0aGF0IGhpbnRzIGF0IHRoZSB0b3RhbCBudW1iZXIgb2YgZnJhbWVzIGluIHRoZSBzdGFjay4gSWYgYSBjbGllbnQgbmVlZHMgdGhpcyB0b3RhbCBudW1iZXIgdXBmcm9udCwgaXQgY2FuIGlzc3VlIGEgcmVxdWVzdCBmb3IgYSBzaW5nbGUgKGZpcnN0KSBmcmFtZSBhbmQgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZSBvZiB0b3RhbEZyYW1lcyBkZWNpZGUgaG93IHRvIHByb2NlZWQuIEluIGFueSBjYXNlIGEgY2xpZW50IHNob3VsZCBiZSBwcmVwYXJlZCB0byByZWNlaXZlIGxlc3MgZnJhbWVzIHRoYW4gcmVxdWVzdGVkLCB3aGljaCBpcyBhbiBpbmRpY2F0aW9uIHRoYXQgdGhlIGVuZCBvZiB0aGUgc3RhY2sgaGFzIGJlZW4gcmVhY2hlZC5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBTdGFja1RyYWNlUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdzdGFja1RyYWNlJztcblx0XHRhcmd1bWVudHM6IFN0YWNrVHJhY2VBcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAnc3RhY2tUcmFjZScgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBTdGFja1RyYWNlQXJndW1lbnRzIHtcblx0XHQvKiogUmV0cmlldmUgdGhlIHN0YWNrdHJhY2UgZm9yIHRoaXMgdGhyZWFkLiAqL1xuXHRcdHRocmVhZElkOiBudW1iZXI7XG5cdFx0LyoqIFRoZSBpbmRleCBvZiB0aGUgZmlyc3QgZnJhbWUgdG8gcmV0dXJuOyBpZiBvbWl0dGVkIGZyYW1lcyBzdGFydCBhdCAwLiAqL1xuXHRcdHN0YXJ0RnJhbWU/OiBudW1iZXI7XG5cdFx0LyoqIFRoZSBtYXhpbXVtIG51bWJlciBvZiBmcmFtZXMgdG8gcmV0dXJuLiBJZiBsZXZlbHMgaXMgbm90IHNwZWNpZmllZCBvciAwLCBhbGwgZnJhbWVzIGFyZSByZXR1cm5lZC4gKi9cblx0XHRsZXZlbHM/OiBudW1iZXI7XG5cdFx0LyoqIFNwZWNpZmllcyBkZXRhaWxzIG9uIGhvdyB0byBmb3JtYXQgdGhlIHN0YWNrIGZyYW1lcy5cblx0XHRcdFRoZSBhdHRyaWJ1dGUgaXMgb25seSBob25vcmVkIGJ5IGEgZGVidWcgYWRhcHRlciBpZiB0aGUgY2FwYWJpbGl0eSAnc3VwcG9ydHNWYWx1ZUZvcm1hdHRpbmdPcHRpb25zJyBpcyB0cnVlLlxuXHRcdCovXG5cdFx0Zm9ybWF0PzogU3RhY2tGcmFtZUZvcm1hdDtcblx0fVxuXG5cdC8qKiBSZXNwb25zZSB0byAnc3RhY2tUcmFjZScgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBTdGFja1RyYWNlUmVzcG9uc2UgZXh0ZW5kcyBSZXNwb25zZSB7XG5cdFx0Ym9keToge1xuXHRcdFx0LyoqIFRoZSBmcmFtZXMgb2YgdGhlIHN0YWNrZnJhbWUuIElmIHRoZSBhcnJheSBoYXMgbGVuZ3RoIHplcm8sIHRoZXJlIGFyZSBubyBzdGFja2ZyYW1lcyBhdmFpbGFibGUuXG5cdFx0XHRcdFRoaXMgbWVhbnMgdGhhdCB0aGVyZSBpcyBubyBsb2NhdGlvbiBpbmZvcm1hdGlvbiBhdmFpbGFibGUuXG5cdFx0XHQqL1xuXHRcdFx0c3RhY2tGcmFtZXM6IFN0YWNrRnJhbWVbXTtcblx0XHRcdC8qKiBUaGUgdG90YWwgbnVtYmVyIG9mIGZyYW1lcyBhdmFpbGFibGUgaW4gdGhlIHN0YWNrLiBJZiBvbWl0dGVkIG9yIGlmIHRvdGFsRnJhbWVzIGlzIGxhcmdlciB0aGFuIHRoZSBhdmFpbGFibGUgZnJhbWVzLCBhIGNsaWVudCBpcyBleHBlY3RlZCB0byByZXF1ZXN0IGZyYW1lcyB1bnRpbCBhIHJlcXVlc3QgcmV0dXJucyBsZXNzIGZyYW1lcyB0aGFuIHJlcXVlc3RlZCAod2hpY2ggaW5kaWNhdGVzIHRoZSBlbmQgb2YgdGhlIHN0YWNrKS4gUmV0dXJuaW5nIG1vbm90b25pY2FsbHkgaW5jcmVhc2luZyB0b3RhbEZyYW1lcyB2YWx1ZXMgZm9yIHN1YnNlcXVlbnQgcmVxdWVzdHMgY2FuIGJlIHVzZWQgdG8gZW5mb3JjZSBwYWdpbmcgaW4gdGhlIGNsaWVudC4gKi9cblx0XHRcdHRvdGFsRnJhbWVzPzogbnVtYmVyO1xuXHRcdH07XG5cdH1cblxuXHQvKiogU2NvcGVzIHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ3Njb3BlcycuXG5cdFx0VGhlIHJlcXVlc3QgcmV0dXJucyB0aGUgdmFyaWFibGUgc2NvcGVzIGZvciBhIGdpdmVuIHN0YWNrZnJhbWUgSUQuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgU2NvcGVzUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdzY29wZXMnO1xuXHRcdGFyZ3VtZW50czogU2NvcGVzQXJndW1lbnRzO1xuXHR9XG5cblx0LyoqIEFyZ3VtZW50cyBmb3IgJ3Njb3BlcycgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBTY29wZXNBcmd1bWVudHMge1xuXHRcdC8qKiBSZXRyaWV2ZSB0aGUgc2NvcGVzIGZvciB0aGlzIHN0YWNrZnJhbWUuICovXG5cdFx0ZnJhbWVJZDogbnVtYmVyO1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICdzY29wZXMnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgU2NvcGVzUmVzcG9uc2UgZXh0ZW5kcyBSZXNwb25zZSB7XG5cdFx0Ym9keToge1xuXHRcdFx0LyoqIFRoZSBzY29wZXMgb2YgdGhlIHN0YWNrZnJhbWUuIElmIHRoZSBhcnJheSBoYXMgbGVuZ3RoIHplcm8sIHRoZXJlIGFyZSBubyBzY29wZXMgYXZhaWxhYmxlLiAqL1xuXHRcdFx0c2NvcGVzOiBTY29wZVtdO1xuXHRcdH07XG5cdH1cblxuXHQvKiogVmFyaWFibGVzIHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ3ZhcmlhYmxlcycuXG5cdFx0UmV0cmlldmVzIGFsbCBjaGlsZCB2YXJpYWJsZXMgZm9yIHRoZSBnaXZlbiB2YXJpYWJsZSByZWZlcmVuY2UuXG5cdFx0QW4gb3B0aW9uYWwgZmlsdGVyIGNhbiBiZSB1c2VkIHRvIGxpbWl0IHRoZSBmZXRjaGVkIGNoaWxkcmVuIHRvIGVpdGhlciBuYW1lZCBvciBpbmRleGVkIGNoaWxkcmVuLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFZhcmlhYmxlc1JlcXVlc3QgZXh0ZW5kcyBSZXF1ZXN0IHtcblx0XHQvLyBjb21tYW5kOiAndmFyaWFibGVzJztcblx0XHRhcmd1bWVudHM6IFZhcmlhYmxlc0FyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICd2YXJpYWJsZXMnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgVmFyaWFibGVzQXJndW1lbnRzIHtcblx0XHQvKiogVGhlIFZhcmlhYmxlIHJlZmVyZW5jZS4gKi9cblx0XHR2YXJpYWJsZXNSZWZlcmVuY2U6IG51bWJlcjtcblx0XHQvKiogT3B0aW9uYWwgZmlsdGVyIHRvIGxpbWl0IHRoZSBjaGlsZCB2YXJpYWJsZXMgdG8gZWl0aGVyIG5hbWVkIG9yIGluZGV4ZWQuIElmIG9taXR0ZWQsIGJvdGggdHlwZXMgYXJlIGZldGNoZWQuICovXG5cdFx0ZmlsdGVyPzogJ2luZGV4ZWQnIHwgJ25hbWVkJztcblx0XHQvKiogVGhlIGluZGV4IG9mIHRoZSBmaXJzdCB2YXJpYWJsZSB0byByZXR1cm47IGlmIG9taXR0ZWQgY2hpbGRyZW4gc3RhcnQgYXQgMC4gKi9cblx0XHRzdGFydD86IG51bWJlcjtcblx0XHQvKiogVGhlIG51bWJlciBvZiB2YXJpYWJsZXMgdG8gcmV0dXJuLiBJZiBjb3VudCBpcyBtaXNzaW5nIG9yIDAsIGFsbCB2YXJpYWJsZXMgYXJlIHJldHVybmVkLiAqL1xuXHRcdGNvdW50PzogbnVtYmVyO1xuXHRcdC8qKiBTcGVjaWZpZXMgZGV0YWlscyBvbiBob3cgdG8gZm9ybWF0IHRoZSBWYXJpYWJsZSB2YWx1ZXMuXG5cdFx0XHRUaGUgYXR0cmlidXRlIGlzIG9ubHkgaG9ub3JlZCBieSBhIGRlYnVnIGFkYXB0ZXIgaWYgdGhlIGNhcGFiaWxpdHkgJ3N1cHBvcnRzVmFsdWVGb3JtYXR0aW5nT3B0aW9ucycgaXMgdHJ1ZS5cblx0XHQqL1xuXHRcdGZvcm1hdD86IFZhbHVlRm9ybWF0O1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICd2YXJpYWJsZXMnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgVmFyaWFibGVzUmVzcG9uc2UgZXh0ZW5kcyBSZXNwb25zZSB7XG5cdFx0Ym9keToge1xuXHRcdFx0LyoqIEFsbCAob3IgYSByYW5nZSkgb2YgdmFyaWFibGVzIGZvciB0aGUgZ2l2ZW4gdmFyaWFibGUgcmVmZXJlbmNlLiAqL1xuXHRcdFx0dmFyaWFibGVzOiBWYXJpYWJsZVtdO1xuXHRcdH07XG5cdH1cblxuXHQvKiogU2V0VmFyaWFibGUgcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAnc2V0VmFyaWFibGUnLlxuXHRcdFNldCB0aGUgdmFyaWFibGUgd2l0aCB0aGUgZ2l2ZW4gbmFtZSBpbiB0aGUgdmFyaWFibGUgY29udGFpbmVyIHRvIGEgbmV3IHZhbHVlLiBDbGllbnRzIHNob3VsZCBvbmx5IGNhbGwgdGhpcyByZXF1ZXN0IGlmIHRoZSBjYXBhYmlsaXR5ICdzdXBwb3J0c1NldFZhcmlhYmxlJyBpcyB0cnVlLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFNldFZhcmlhYmxlUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdzZXRWYXJpYWJsZSc7XG5cdFx0YXJndW1lbnRzOiBTZXRWYXJpYWJsZUFyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICdzZXRWYXJpYWJsZScgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBTZXRWYXJpYWJsZUFyZ3VtZW50cyB7XG5cdFx0LyoqIFRoZSByZWZlcmVuY2Ugb2YgdGhlIHZhcmlhYmxlIGNvbnRhaW5lci4gKi9cblx0XHR2YXJpYWJsZXNSZWZlcmVuY2U6IG51bWJlcjtcblx0XHQvKiogVGhlIG5hbWUgb2YgdGhlIHZhcmlhYmxlIGluIHRoZSBjb250YWluZXIuICovXG5cdFx0bmFtZTogc3RyaW5nO1xuXHRcdC8qKiBUaGUgdmFsdWUgb2YgdGhlIHZhcmlhYmxlLiAqL1xuXHRcdHZhbHVlOiBzdHJpbmc7XG5cdFx0LyoqIFNwZWNpZmllcyBkZXRhaWxzIG9uIGhvdyB0byBmb3JtYXQgdGhlIHJlc3BvbnNlIHZhbHVlLiAqL1xuXHRcdGZvcm1hdD86IFZhbHVlRm9ybWF0O1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICdzZXRWYXJpYWJsZScgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBTZXRWYXJpYWJsZVJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHRcdGJvZHk6IHtcblx0XHRcdC8qKiBUaGUgbmV3IHZhbHVlIG9mIHRoZSB2YXJpYWJsZS4gKi9cblx0XHRcdHZhbHVlOiBzdHJpbmc7XG5cdFx0XHQvKiogVGhlIHR5cGUgb2YgdGhlIG5ldyB2YWx1ZS4gVHlwaWNhbGx5IHNob3duIGluIHRoZSBVSSB3aGVuIGhvdmVyaW5nIG92ZXIgdGhlIHZhbHVlLiAqL1xuXHRcdFx0dHlwZT86IHN0cmluZztcblx0XHRcdC8qKiBJZiB2YXJpYWJsZXNSZWZlcmVuY2UgaXMgPiAwLCB0aGUgbmV3IHZhbHVlIGlzIHN0cnVjdHVyZWQgYW5kIGl0cyBjaGlsZHJlbiBjYW4gYmUgcmV0cmlldmVkIGJ5IHBhc3NpbmcgdmFyaWFibGVzUmVmZXJlbmNlIHRvIHRoZSBWYXJpYWJsZXNSZXF1ZXN0LlxuXHRcdFx0XHRUaGUgdmFsdWUgc2hvdWxkIGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAyMTQ3NDgzNjQ3ICgyXjMxLTEpLlxuXHRcdFx0Ki9cblx0XHRcdHZhcmlhYmxlc1JlZmVyZW5jZT86IG51bWJlcjtcblx0XHRcdC8qKiBUaGUgbnVtYmVyIG9mIG5hbWVkIGNoaWxkIHZhcmlhYmxlcy5cblx0XHRcdFx0VGhlIGNsaWVudCBjYW4gdXNlIHRoaXMgb3B0aW9uYWwgaW5mb3JtYXRpb24gdG8gcHJlc2VudCB0aGUgdmFyaWFibGVzIGluIGEgcGFnZWQgVUkgYW5kIGZldGNoIHRoZW0gaW4gY2h1bmtzLlxuXHRcdFx0XHRUaGUgdmFsdWUgc2hvdWxkIGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAyMTQ3NDgzNjQ3ICgyXjMxLTEpLlxuXHRcdFx0Ki9cblx0XHRcdG5hbWVkVmFyaWFibGVzPzogbnVtYmVyO1xuXHRcdFx0LyoqIFRoZSBudW1iZXIgb2YgaW5kZXhlZCBjaGlsZCB2YXJpYWJsZXMuXG5cdFx0XHRcdFRoZSBjbGllbnQgY2FuIHVzZSB0aGlzIG9wdGlvbmFsIGluZm9ybWF0aW9uIHRvIHByZXNlbnQgdGhlIHZhcmlhYmxlcyBpbiBhIHBhZ2VkIFVJIGFuZCBmZXRjaCB0aGVtIGluIGNodW5rcy5cblx0XHRcdFx0VGhlIHZhbHVlIHNob3VsZCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gMjE0NzQ4MzY0NyAoMl4zMS0xKS5cblx0XHRcdCovXG5cdFx0XHRpbmRleGVkVmFyaWFibGVzPzogbnVtYmVyO1xuXHRcdH07XG5cdH1cblxuXHQvKiogU291cmNlIHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ3NvdXJjZScuXG5cdFx0VGhlIHJlcXVlc3QgcmV0cmlldmVzIHRoZSBzb3VyY2UgY29kZSBmb3IgYSBnaXZlbiBzb3VyY2UgcmVmZXJlbmNlLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFNvdXJjZVJlcXVlc3QgZXh0ZW5kcyBSZXF1ZXN0IHtcblx0XHQvLyBjb21tYW5kOiAnc291cmNlJztcblx0XHRhcmd1bWVudHM6IFNvdXJjZUFyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICdzb3VyY2UnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgU291cmNlQXJndW1lbnRzIHtcblx0XHQvKiogU3BlY2lmaWVzIHRoZSBzb3VyY2UgY29udGVudCB0byBsb2FkLiBFaXRoZXIgc291cmNlLnBhdGggb3Igc291cmNlLnNvdXJjZVJlZmVyZW5jZSBtdXN0IGJlIHNwZWNpZmllZC4gKi9cblx0XHRzb3VyY2U/OiBTb3VyY2U7XG5cdFx0LyoqIFRoZSByZWZlcmVuY2UgdG8gdGhlIHNvdXJjZS4gVGhpcyBpcyB0aGUgc2FtZSBhcyBzb3VyY2Uuc291cmNlUmVmZXJlbmNlLlxuXHRcdFx0VGhpcyBpcyBwcm92aWRlZCBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eSBzaW5jZSBvbGQgYmFja2VuZHMgZG8gbm90IHVuZGVyc3RhbmQgdGhlICdzb3VyY2UnIGF0dHJpYnV0ZS5cblx0XHQqL1xuXHRcdHNvdXJjZVJlZmVyZW5jZTogbnVtYmVyO1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICdzb3VyY2UnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgU291cmNlUmVzcG9uc2UgZXh0ZW5kcyBSZXNwb25zZSB7XG5cdFx0Ym9keToge1xuXHRcdFx0LyoqIENvbnRlbnQgb2YgdGhlIHNvdXJjZSByZWZlcmVuY2UuICovXG5cdFx0XHRjb250ZW50OiBzdHJpbmc7XG5cdFx0XHQvKiogT3B0aW9uYWwgY29udGVudCB0eXBlIChtaW1lIHR5cGUpIG9mIHRoZSBzb3VyY2UuICovXG5cdFx0XHRtaW1lVHlwZT86IHN0cmluZztcblx0XHR9O1xuXHR9XG5cblx0LyoqIFRocmVhZHMgcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAndGhyZWFkcycuXG5cdFx0VGhlIHJlcXVlc3QgcmV0cmlldmVzIGEgbGlzdCBvZiBhbGwgdGhyZWFkcy5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBUaHJlYWRzUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICd0aHJlYWRzJztcblx0fVxuXG5cdC8qKiBSZXNwb25zZSB0byAndGhyZWFkcycgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBUaHJlYWRzUmVzcG9uc2UgZXh0ZW5kcyBSZXNwb25zZSB7XG5cdFx0Ym9keToge1xuXHRcdFx0LyoqIEFsbCB0aHJlYWRzLiAqL1xuXHRcdFx0dGhyZWFkczogVGhyZWFkW107XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBUZXJtaW5hdGVUaHJlYWRzIHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ3Rlcm1pbmF0ZVRocmVhZHMnLlxuXHRcdFRoZSByZXF1ZXN0IHRlcm1pbmF0ZXMgdGhlIHRocmVhZHMgd2l0aCB0aGUgZ2l2ZW4gaWRzLlxuXHRcdENsaWVudHMgc2hvdWxkIG9ubHkgY2FsbCB0aGlzIHJlcXVlc3QgaWYgdGhlIGNhcGFiaWxpdHkgJ3N1cHBvcnRzVGVybWluYXRlVGhyZWFkc1JlcXVlc3QnIGlzIHRydWUuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgVGVybWluYXRlVGhyZWFkc1JlcXVlc3QgZXh0ZW5kcyBSZXF1ZXN0IHtcblx0XHQvLyBjb21tYW5kOiAndGVybWluYXRlVGhyZWFkcyc7XG5cdFx0YXJndW1lbnRzOiBUZXJtaW5hdGVUaHJlYWRzQXJndW1lbnRzO1xuXHR9XG5cblx0LyoqIEFyZ3VtZW50cyBmb3IgJ3Rlcm1pbmF0ZVRocmVhZHMnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgVGVybWluYXRlVGhyZWFkc0FyZ3VtZW50cyB7XG5cdFx0LyoqIElkcyBvZiB0aHJlYWRzIHRvIGJlIHRlcm1pbmF0ZWQuICovXG5cdFx0dGhyZWFkSWRzPzogbnVtYmVyW107XG5cdH1cblxuXHQvKiogUmVzcG9uc2UgdG8gJ3Rlcm1pbmF0ZVRocmVhZHMnIHJlcXVlc3QuIFRoaXMgaXMganVzdCBhbiBhY2tub3dsZWRnZW1lbnQsIHNvIG5vIGJvZHkgZmllbGQgaXMgcmVxdWlyZWQuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgVGVybWluYXRlVGhyZWFkc1Jlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHR9XG5cblx0LyoqIE1vZHVsZXMgcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAnbW9kdWxlcycuXG5cdFx0TW9kdWxlcyBjYW4gYmUgcmV0cmlldmVkIGZyb20gdGhlIGRlYnVnIGFkYXB0ZXIgd2l0aCB0aGlzIHJlcXVlc3Qgd2hpY2ggY2FuIGVpdGhlciByZXR1cm4gYWxsIG1vZHVsZXMgb3IgYSByYW5nZSBvZiBtb2R1bGVzIHRvIHN1cHBvcnQgcGFnaW5nLlxuXHRcdENsaWVudHMgc2hvdWxkIG9ubHkgY2FsbCB0aGlzIHJlcXVlc3QgaWYgdGhlIGNhcGFiaWxpdHkgJ3N1cHBvcnRzTW9kdWxlc1JlcXVlc3QnIGlzIHRydWUuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgTW9kdWxlc1JlcXVlc3QgZXh0ZW5kcyBSZXF1ZXN0IHtcblx0XHQvLyBjb21tYW5kOiAnbW9kdWxlcyc7XG5cdFx0YXJndW1lbnRzOiBNb2R1bGVzQXJndW1lbnRzO1xuXHR9XG5cblx0LyoqIEFyZ3VtZW50cyBmb3IgJ21vZHVsZXMnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgTW9kdWxlc0FyZ3VtZW50cyB7XG5cdFx0LyoqIFRoZSBpbmRleCBvZiB0aGUgZmlyc3QgbW9kdWxlIHRvIHJldHVybjsgaWYgb21pdHRlZCBtb2R1bGVzIHN0YXJ0IGF0IDAuICovXG5cdFx0c3RhcnRNb2R1bGU/OiBudW1iZXI7XG5cdFx0LyoqIFRoZSBudW1iZXIgb2YgbW9kdWxlcyB0byByZXR1cm4uIElmIG1vZHVsZUNvdW50IGlzIG5vdCBzcGVjaWZpZWQgb3IgMCwgYWxsIG1vZHVsZXMgYXJlIHJldHVybmVkLiAqL1xuXHRcdG1vZHVsZUNvdW50PzogbnVtYmVyO1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICdtb2R1bGVzJyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIE1vZHVsZXNSZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcblx0XHRib2R5OiB7XG5cdFx0XHQvKiogQWxsIG1vZHVsZXMgb3IgcmFuZ2Ugb2YgbW9kdWxlcy4gKi9cblx0XHRcdG1vZHVsZXM6IE1vZHVsZVtdO1xuXHRcdFx0LyoqIFRoZSB0b3RhbCBudW1iZXIgb2YgbW9kdWxlcyBhdmFpbGFibGUuICovXG5cdFx0XHR0b3RhbE1vZHVsZXM/OiBudW1iZXI7XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBMb2FkZWRTb3VyY2VzIHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ2xvYWRlZFNvdXJjZXMnLlxuXHRcdFJldHJpZXZlcyB0aGUgc2V0IG9mIGFsbCBzb3VyY2VzIGN1cnJlbnRseSBsb2FkZWQgYnkgdGhlIGRlYnVnZ2VkIHByb2Nlc3MuXG5cdFx0Q2xpZW50cyBzaG91bGQgb25seSBjYWxsIHRoaXMgcmVxdWVzdCBpZiB0aGUgY2FwYWJpbGl0eSAnc3VwcG9ydHNMb2FkZWRTb3VyY2VzUmVxdWVzdCcgaXMgdHJ1ZS5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBMb2FkZWRTb3VyY2VzUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdsb2FkZWRTb3VyY2VzJztcblx0XHRhcmd1bWVudHM/OiBMb2FkZWRTb3VyY2VzQXJndW1lbnRzO1xuXHR9XG5cblx0LyoqIEFyZ3VtZW50cyBmb3IgJ2xvYWRlZFNvdXJjZXMnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgTG9hZGVkU291cmNlc0FyZ3VtZW50cyB7XG5cdH1cblxuXHQvKiogUmVzcG9uc2UgdG8gJ2xvYWRlZFNvdXJjZXMnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgTG9hZGVkU291cmNlc1Jlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHRcdGJvZHk6IHtcblx0XHRcdC8qKiBTZXQgb2YgbG9hZGVkIHNvdXJjZXMuICovXG5cdFx0XHRzb3VyY2VzOiBTb3VyY2VbXTtcblx0XHR9O1xuXHR9XG5cblx0LyoqIEV2YWx1YXRlIHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ2V2YWx1YXRlJy5cblx0XHRFdmFsdWF0ZXMgdGhlIGdpdmVuIGV4cHJlc3Npb24gaW4gdGhlIGNvbnRleHQgb2YgdGhlIHRvcCBtb3N0IHN0YWNrIGZyYW1lLlxuXHRcdFRoZSBleHByZXNzaW9uIGhhcyBhY2Nlc3MgdG8gYW55IHZhcmlhYmxlcyBhbmQgYXJndW1lbnRzIHRoYXQgYXJlIGluIHNjb3BlLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEV2YWx1YXRlUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdldmFsdWF0ZSc7XG5cdFx0YXJndW1lbnRzOiBFdmFsdWF0ZUFyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICdldmFsdWF0ZScgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBFdmFsdWF0ZUFyZ3VtZW50cyB7XG5cdFx0LyoqIFRoZSBleHByZXNzaW9uIHRvIGV2YWx1YXRlLiAqL1xuXHRcdGV4cHJlc3Npb246IHN0cmluZztcblx0XHQvKiogRXZhbHVhdGUgdGhlIGV4cHJlc3Npb24gaW4gdGhlIHNjb3BlIG9mIHRoaXMgc3RhY2sgZnJhbWUuIElmIG5vdCBzcGVjaWZpZWQsIHRoZSBleHByZXNzaW9uIGlzIGV2YWx1YXRlZCBpbiB0aGUgZ2xvYmFsIHNjb3BlLiAqL1xuXHRcdGZyYW1lSWQ/OiBudW1iZXI7XG5cdFx0LyoqIFRoZSBjb250ZXh0IGluIHdoaWNoIHRoZSBldmFsdWF0ZSByZXF1ZXN0IGlzIHJ1bi5cblx0XHRcdFZhbHVlczogXG5cdFx0XHQnd2F0Y2gnOiBldmFsdWF0ZSBpcyBydW4gaW4gYSB3YXRjaC5cblx0XHRcdCdyZXBsJzogZXZhbHVhdGUgaXMgcnVuIGZyb20gUkVQTCBjb25zb2xlLlxuXHRcdFx0J2hvdmVyJzogZXZhbHVhdGUgaXMgcnVuIGZyb20gYSBkYXRhIGhvdmVyLlxuXHRcdFx0J2NsaXBib2FyZCc6IGV2YWx1YXRlIGlzIHJ1biB0byBnZW5lcmF0ZSB0aGUgdmFsdWUgdGhhdCB3aWxsIGJlIHN0b3JlZCBpbiB0aGUgY2xpcGJvYXJkLlxuXHRcdFx0VGhlIGF0dHJpYnV0ZSBpcyBvbmx5IGhvbm9yZWQgYnkgYSBkZWJ1ZyBhZGFwdGVyIGlmIHRoZSBjYXBhYmlsaXR5ICdzdXBwb3J0c0NsaXBib2FyZENvbnRleHQnIGlzIHRydWUuXG5cdFx0XHRldGMuXG5cdFx0Ki9cblx0XHRjb250ZXh0PzogJ3dhdGNoJyB8ICdyZXBsJyB8ICdob3ZlcicgfCAnY2xpcGJvYXJkJyB8IHN0cmluZztcblx0XHQvKiogU3BlY2lmaWVzIGRldGFpbHMgb24gaG93IHRvIGZvcm1hdCB0aGUgRXZhbHVhdGUgcmVzdWx0LlxuXHRcdFx0VGhlIGF0dHJpYnV0ZSBpcyBvbmx5IGhvbm9yZWQgYnkgYSBkZWJ1ZyBhZGFwdGVyIGlmIHRoZSBjYXBhYmlsaXR5ICdzdXBwb3J0c1ZhbHVlRm9ybWF0dGluZ09wdGlvbnMnIGlzIHRydWUuXG5cdFx0Ki9cblx0XHRmb3JtYXQ/OiBWYWx1ZUZvcm1hdDtcblx0fVxuXG5cdC8qKiBSZXNwb25zZSB0byAnZXZhbHVhdGUnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgRXZhbHVhdGVSZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcblx0XHRib2R5OiB7XG5cdFx0XHQvKiogVGhlIHJlc3VsdCBvZiB0aGUgZXZhbHVhdGUgcmVxdWVzdC4gKi9cblx0XHRcdHJlc3VsdDogc3RyaW5nO1xuXHRcdFx0LyoqIFRoZSBvcHRpb25hbCB0eXBlIG9mIHRoZSBldmFsdWF0ZSByZXN1bHQuXG5cdFx0XHRcdFRoaXMgYXR0cmlidXRlIHNob3VsZCBvbmx5IGJlIHJldHVybmVkIGJ5IGEgZGVidWcgYWRhcHRlciBpZiB0aGUgY2xpZW50IGhhcyBwYXNzZWQgdGhlIHZhbHVlIHRydWUgZm9yIHRoZSAnc3VwcG9ydHNWYXJpYWJsZVR5cGUnIGNhcGFiaWxpdHkgb2YgdGhlICdpbml0aWFsaXplJyByZXF1ZXN0LlxuXHRcdFx0Ki9cblx0XHRcdHR5cGU/OiBzdHJpbmc7XG5cdFx0XHQvKiogUHJvcGVydGllcyBvZiBhIGV2YWx1YXRlIHJlc3VsdCB0aGF0IGNhbiBiZSB1c2VkIHRvIGRldGVybWluZSBob3cgdG8gcmVuZGVyIHRoZSByZXN1bHQgaW4gdGhlIFVJLiAqL1xuXHRcdFx0cHJlc2VudGF0aW9uSGludD86IFZhcmlhYmxlUHJlc2VudGF0aW9uSGludDtcblx0XHRcdC8qKiBJZiB2YXJpYWJsZXNSZWZlcmVuY2UgaXMgPiAwLCB0aGUgZXZhbHVhdGUgcmVzdWx0IGlzIHN0cnVjdHVyZWQgYW5kIGl0cyBjaGlsZHJlbiBjYW4gYmUgcmV0cmlldmVkIGJ5IHBhc3NpbmcgdmFyaWFibGVzUmVmZXJlbmNlIHRvIHRoZSBWYXJpYWJsZXNSZXF1ZXN0LlxuXHRcdFx0XHRUaGUgdmFsdWUgc2hvdWxkIGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAyMTQ3NDgzNjQ3ICgyXjMxLTEpLlxuXHRcdFx0Ki9cblx0XHRcdHZhcmlhYmxlc1JlZmVyZW5jZTogbnVtYmVyO1xuXHRcdFx0LyoqIFRoZSBudW1iZXIgb2YgbmFtZWQgY2hpbGQgdmFyaWFibGVzLlxuXHRcdFx0XHRUaGUgY2xpZW50IGNhbiB1c2UgdGhpcyBvcHRpb25hbCBpbmZvcm1hdGlvbiB0byBwcmVzZW50IHRoZSB2YXJpYWJsZXMgaW4gYSBwYWdlZCBVSSBhbmQgZmV0Y2ggdGhlbSBpbiBjaHVua3MuXG5cdFx0XHRcdFRoZSB2YWx1ZSBzaG91bGQgYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIDIxNDc0ODM2NDcgKDJeMzEtMSkuXG5cdFx0XHQqL1xuXHRcdFx0bmFtZWRWYXJpYWJsZXM/OiBudW1iZXI7XG5cdFx0XHQvKiogVGhlIG51bWJlciBvZiBpbmRleGVkIGNoaWxkIHZhcmlhYmxlcy5cblx0XHRcdFx0VGhlIGNsaWVudCBjYW4gdXNlIHRoaXMgb3B0aW9uYWwgaW5mb3JtYXRpb24gdG8gcHJlc2VudCB0aGUgdmFyaWFibGVzIGluIGEgcGFnZWQgVUkgYW5kIGZldGNoIHRoZW0gaW4gY2h1bmtzLlxuXHRcdFx0XHRUaGUgdmFsdWUgc2hvdWxkIGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAyMTQ3NDgzNjQ3ICgyXjMxLTEpLlxuXHRcdFx0Ki9cblx0XHRcdGluZGV4ZWRWYXJpYWJsZXM/OiBudW1iZXI7XG5cdFx0XHQvKiogT3B0aW9uYWwgbWVtb3J5IHJlZmVyZW5jZSB0byBhIGxvY2F0aW9uIGFwcHJvcHJpYXRlIGZvciB0aGlzIHJlc3VsdC5cblx0XHRcdFx0Rm9yIHBvaW50ZXIgdHlwZSBldmFsIHJlc3VsdHMsIHRoaXMgaXMgZ2VuZXJhbGx5IGEgcmVmZXJlbmNlIHRvIHRoZSBtZW1vcnkgYWRkcmVzcyBjb250YWluZWQgaW4gdGhlIHBvaW50ZXIuXG5cdFx0XHRcdFRoaXMgYXR0cmlidXRlIHNob3VsZCBiZSByZXR1cm5lZCBieSBhIGRlYnVnIGFkYXB0ZXIgaWYgdGhlIGNsaWVudCBoYXMgcGFzc2VkIHRoZSB2YWx1ZSB0cnVlIGZvciB0aGUgJ3N1cHBvcnRzTWVtb3J5UmVmZXJlbmNlcycgY2FwYWJpbGl0eSBvZiB0aGUgJ2luaXRpYWxpemUnIHJlcXVlc3QuXG5cdFx0XHQqL1xuXHRcdFx0bWVtb3J5UmVmZXJlbmNlPzogc3RyaW5nO1xuXHRcdH07XG5cdH1cblxuXHQvKiogU2V0RXhwcmVzc2lvbiByZXF1ZXN0OyB2YWx1ZSBvZiBjb21tYW5kIGZpZWxkIGlzICdzZXRFeHByZXNzaW9uJy5cblx0XHRFdmFsdWF0ZXMgdGhlIGdpdmVuICd2YWx1ZScgZXhwcmVzc2lvbiBhbmQgYXNzaWducyBpdCB0byB0aGUgJ2V4cHJlc3Npb24nIHdoaWNoIG11c3QgYmUgYSBtb2RpZmlhYmxlIGwtdmFsdWUuXG5cdFx0VGhlIGV4cHJlc3Npb25zIGhhdmUgYWNjZXNzIHRvIGFueSB2YXJpYWJsZXMgYW5kIGFyZ3VtZW50cyB0aGF0IGFyZSBpbiBzY29wZSBvZiB0aGUgc3BlY2lmaWVkIGZyYW1lLlxuXHRcdENsaWVudHMgc2hvdWxkIG9ubHkgY2FsbCB0aGlzIHJlcXVlc3QgaWYgdGhlIGNhcGFiaWxpdHkgJ3N1cHBvcnRzU2V0RXhwcmVzc2lvbicgaXMgdHJ1ZS5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBTZXRFeHByZXNzaW9uUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdzZXRFeHByZXNzaW9uJztcblx0XHRhcmd1bWVudHM6IFNldEV4cHJlc3Npb25Bcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAnc2V0RXhwcmVzc2lvbicgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBTZXRFeHByZXNzaW9uQXJndW1lbnRzIHtcblx0XHQvKiogVGhlIGwtdmFsdWUgZXhwcmVzc2lvbiB0byBhc3NpZ24gdG8uICovXG5cdFx0ZXhwcmVzc2lvbjogc3RyaW5nO1xuXHRcdC8qKiBUaGUgdmFsdWUgZXhwcmVzc2lvbiB0byBhc3NpZ24gdG8gdGhlIGwtdmFsdWUgZXhwcmVzc2lvbi4gKi9cblx0XHR2YWx1ZTogc3RyaW5nO1xuXHRcdC8qKiBFdmFsdWF0ZSB0aGUgZXhwcmVzc2lvbnMgaW4gdGhlIHNjb3BlIG9mIHRoaXMgc3RhY2sgZnJhbWUuIElmIG5vdCBzcGVjaWZpZWQsIHRoZSBleHByZXNzaW9ucyBhcmUgZXZhbHVhdGVkIGluIHRoZSBnbG9iYWwgc2NvcGUuICovXG5cdFx0ZnJhbWVJZD86IG51bWJlcjtcblx0XHQvKiogU3BlY2lmaWVzIGhvdyB0aGUgcmVzdWx0aW5nIHZhbHVlIHNob3VsZCBiZSBmb3JtYXR0ZWQuICovXG5cdFx0Zm9ybWF0PzogVmFsdWVGb3JtYXQ7XG5cdH1cblxuXHQvKiogUmVzcG9uc2UgdG8gJ3NldEV4cHJlc3Npb24nIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgU2V0RXhwcmVzc2lvblJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHRcdGJvZHk6IHtcblx0XHRcdC8qKiBUaGUgbmV3IHZhbHVlIG9mIHRoZSBleHByZXNzaW9uLiAqL1xuXHRcdFx0dmFsdWU6IHN0cmluZztcblx0XHRcdC8qKiBUaGUgb3B0aW9uYWwgdHlwZSBvZiB0aGUgdmFsdWUuXG5cdFx0XHRcdFRoaXMgYXR0cmlidXRlIHNob3VsZCBvbmx5IGJlIHJldHVybmVkIGJ5IGEgZGVidWcgYWRhcHRlciBpZiB0aGUgY2xpZW50IGhhcyBwYXNzZWQgdGhlIHZhbHVlIHRydWUgZm9yIHRoZSAnc3VwcG9ydHNWYXJpYWJsZVR5cGUnIGNhcGFiaWxpdHkgb2YgdGhlICdpbml0aWFsaXplJyByZXF1ZXN0LlxuXHRcdFx0Ki9cblx0XHRcdHR5cGU/OiBzdHJpbmc7XG5cdFx0XHQvKiogUHJvcGVydGllcyBvZiBhIHZhbHVlIHRoYXQgY2FuIGJlIHVzZWQgdG8gZGV0ZXJtaW5lIGhvdyB0byByZW5kZXIgdGhlIHJlc3VsdCBpbiB0aGUgVUkuICovXG5cdFx0XHRwcmVzZW50YXRpb25IaW50PzogVmFyaWFibGVQcmVzZW50YXRpb25IaW50O1xuXHRcdFx0LyoqIElmIHZhcmlhYmxlc1JlZmVyZW5jZSBpcyA+IDAsIHRoZSB2YWx1ZSBpcyBzdHJ1Y3R1cmVkIGFuZCBpdHMgY2hpbGRyZW4gY2FuIGJlIHJldHJpZXZlZCBieSBwYXNzaW5nIHZhcmlhYmxlc1JlZmVyZW5jZSB0byB0aGUgVmFyaWFibGVzUmVxdWVzdC5cblx0XHRcdFx0VGhlIHZhbHVlIHNob3VsZCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gMjE0NzQ4MzY0NyAoMl4zMS0xKS5cblx0XHRcdCovXG5cdFx0XHR2YXJpYWJsZXNSZWZlcmVuY2U/OiBudW1iZXI7XG5cdFx0XHQvKiogVGhlIG51bWJlciBvZiBuYW1lZCBjaGlsZCB2YXJpYWJsZXMuXG5cdFx0XHRcdFRoZSBjbGllbnQgY2FuIHVzZSB0aGlzIG9wdGlvbmFsIGluZm9ybWF0aW9uIHRvIHByZXNlbnQgdGhlIHZhcmlhYmxlcyBpbiBhIHBhZ2VkIFVJIGFuZCBmZXRjaCB0aGVtIGluIGNodW5rcy5cblx0XHRcdFx0VGhlIHZhbHVlIHNob3VsZCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gMjE0NzQ4MzY0NyAoMl4zMS0xKS5cblx0XHRcdCovXG5cdFx0XHRuYW1lZFZhcmlhYmxlcz86IG51bWJlcjtcblx0XHRcdC8qKiBUaGUgbnVtYmVyIG9mIGluZGV4ZWQgY2hpbGQgdmFyaWFibGVzLlxuXHRcdFx0XHRUaGUgY2xpZW50IGNhbiB1c2UgdGhpcyBvcHRpb25hbCBpbmZvcm1hdGlvbiB0byBwcmVzZW50IHRoZSB2YXJpYWJsZXMgaW4gYSBwYWdlZCBVSSBhbmQgZmV0Y2ggdGhlbSBpbiBjaHVua3MuXG5cdFx0XHRcdFRoZSB2YWx1ZSBzaG91bGQgYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIDIxNDc0ODM2NDcgKDJeMzEtMSkuXG5cdFx0XHQqL1xuXHRcdFx0aW5kZXhlZFZhcmlhYmxlcz86IG51bWJlcjtcblx0XHR9O1xuXHR9XG5cblx0LyoqIFN0ZXBJblRhcmdldHMgcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAnc3RlcEluVGFyZ2V0cycuXG5cdFx0VGhpcyByZXF1ZXN0IHJldHJpZXZlcyB0aGUgcG9zc2libGUgc3RlcEluIHRhcmdldHMgZm9yIHRoZSBzcGVjaWZpZWQgc3RhY2sgZnJhbWUuXG5cdFx0VGhlc2UgdGFyZ2V0cyBjYW4gYmUgdXNlZCBpbiB0aGUgJ3N0ZXBJbicgcmVxdWVzdC5cblx0XHRUaGUgU3RlcEluVGFyZ2V0cyBtYXkgb25seSBiZSBjYWxsZWQgaWYgdGhlICdzdXBwb3J0c1N0ZXBJblRhcmdldHNSZXF1ZXN0JyBjYXBhYmlsaXR5IGV4aXN0cyBhbmQgaXMgdHJ1ZS5cblx0XHRDbGllbnRzIHNob3VsZCBvbmx5IGNhbGwgdGhpcyByZXF1ZXN0IGlmIHRoZSBjYXBhYmlsaXR5ICdzdXBwb3J0c1N0ZXBJblRhcmdldHNSZXF1ZXN0JyBpcyB0cnVlLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFN0ZXBJblRhcmdldHNSZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG5cdFx0Ly8gY29tbWFuZDogJ3N0ZXBJblRhcmdldHMnO1xuXHRcdGFyZ3VtZW50czogU3RlcEluVGFyZ2V0c0FyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICdzdGVwSW5UYXJnZXRzJyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFN0ZXBJblRhcmdldHNBcmd1bWVudHMge1xuXHRcdC8qKiBUaGUgc3RhY2sgZnJhbWUgZm9yIHdoaWNoIHRvIHJldHJpZXZlIHRoZSBwb3NzaWJsZSBzdGVwSW4gdGFyZ2V0cy4gKi9cblx0XHRmcmFtZUlkOiBudW1iZXI7XG5cdH1cblxuXHQvKiogUmVzcG9uc2UgdG8gJ3N0ZXBJblRhcmdldHMnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgU3RlcEluVGFyZ2V0c1Jlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHRcdGJvZHk6IHtcblx0XHRcdC8qKiBUaGUgcG9zc2libGUgc3RlcEluIHRhcmdldHMgb2YgdGhlIHNwZWNpZmllZCBzb3VyY2UgbG9jYXRpb24uICovXG5cdFx0XHR0YXJnZXRzOiBTdGVwSW5UYXJnZXRbXTtcblx0XHR9O1xuXHR9XG5cblx0LyoqIEdvdG9UYXJnZXRzIHJlcXVlc3Q7IHZhbHVlIG9mIGNvbW1hbmQgZmllbGQgaXMgJ2dvdG9UYXJnZXRzJy5cblx0XHRUaGlzIHJlcXVlc3QgcmV0cmlldmVzIHRoZSBwb3NzaWJsZSBnb3RvIHRhcmdldHMgZm9yIHRoZSBzcGVjaWZpZWQgc291cmNlIGxvY2F0aW9uLlxuXHRcdFRoZXNlIHRhcmdldHMgY2FuIGJlIHVzZWQgaW4gdGhlICdnb3RvJyByZXF1ZXN0LlxuXHRcdENsaWVudHMgc2hvdWxkIG9ubHkgY2FsbCB0aGlzIHJlcXVlc3QgaWYgdGhlIGNhcGFiaWxpdHkgJ3N1cHBvcnRzR290b1RhcmdldHNSZXF1ZXN0JyBpcyB0cnVlLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEdvdG9UYXJnZXRzUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdnb3RvVGFyZ2V0cyc7XG5cdFx0YXJndW1lbnRzOiBHb3RvVGFyZ2V0c0FyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICdnb3RvVGFyZ2V0cycgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBHb3RvVGFyZ2V0c0FyZ3VtZW50cyB7XG5cdFx0LyoqIFRoZSBzb3VyY2UgbG9jYXRpb24gZm9yIHdoaWNoIHRoZSBnb3RvIHRhcmdldHMgYXJlIGRldGVybWluZWQuICovXG5cdFx0c291cmNlOiBTb3VyY2U7XG5cdFx0LyoqIFRoZSBsaW5lIGxvY2F0aW9uIGZvciB3aGljaCB0aGUgZ290byB0YXJnZXRzIGFyZSBkZXRlcm1pbmVkLiAqL1xuXHRcdGxpbmU6IG51bWJlcjtcblx0XHQvKiogQW4gb3B0aW9uYWwgY29sdW1uIGxvY2F0aW9uIGZvciB3aGljaCB0aGUgZ290byB0YXJnZXRzIGFyZSBkZXRlcm1pbmVkLiAqL1xuXHRcdGNvbHVtbj86IG51bWJlcjtcblx0fVxuXG5cdC8qKiBSZXNwb25zZSB0byAnZ290b1RhcmdldHMnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgR290b1RhcmdldHNSZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcblx0XHRib2R5OiB7XG5cdFx0XHQvKiogVGhlIHBvc3NpYmxlIGdvdG8gdGFyZ2V0cyBvZiB0aGUgc3BlY2lmaWVkIGxvY2F0aW9uLiAqL1xuXHRcdFx0dGFyZ2V0czogR290b1RhcmdldFtdO1xuXHRcdH07XG5cdH1cblxuXHQvKiogQ29tcGxldGlvbnMgcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAnY29tcGxldGlvbnMnLlxuXHRcdFJldHVybnMgYSBsaXN0IG9mIHBvc3NpYmxlIGNvbXBsZXRpb25zIGZvciBhIGdpdmVuIGNhcmV0IHBvc2l0aW9uIGFuZCB0ZXh0LlxuXHRcdENsaWVudHMgc2hvdWxkIG9ubHkgY2FsbCB0aGlzIHJlcXVlc3QgaWYgdGhlIGNhcGFiaWxpdHkgJ3N1cHBvcnRzQ29tcGxldGlvbnNSZXF1ZXN0JyBpcyB0cnVlLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIENvbXBsZXRpb25zUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdjb21wbGV0aW9ucyc7XG5cdFx0YXJndW1lbnRzOiBDb21wbGV0aW9uc0FyZ3VtZW50cztcblx0fVxuXG5cdC8qKiBBcmd1bWVudHMgZm9yICdjb21wbGV0aW9ucycgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBDb21wbGV0aW9uc0FyZ3VtZW50cyB7XG5cdFx0LyoqIFJldHVybnMgY29tcGxldGlvbnMgaW4gdGhlIHNjb3BlIG9mIHRoaXMgc3RhY2sgZnJhbWUuIElmIG5vdCBzcGVjaWZpZWQsIHRoZSBjb21wbGV0aW9ucyBhcmUgcmV0dXJuZWQgZm9yIHRoZSBnbG9iYWwgc2NvcGUuICovXG5cdFx0ZnJhbWVJZD86IG51bWJlcjtcblx0XHQvKiogT25lIG9yIG1vcmUgc291cmNlIGxpbmVzLiBUeXBpY2FsbHkgdGhpcyBpcyB0aGUgdGV4dCBhIHVzZXIgaGFzIHR5cGVkIGludG8gdGhlIGRlYnVnIGNvbnNvbGUgYmVmb3JlIGhlIGFza2VkIGZvciBjb21wbGV0aW9uLiAqL1xuXHRcdHRleHQ6IHN0cmluZztcblx0XHQvKiogVGhlIGNoYXJhY3RlciBwb3NpdGlvbiBmb3Igd2hpY2ggdG8gZGV0ZXJtaW5lIHRoZSBjb21wbGV0aW9uIHByb3Bvc2Fscy4gKi9cblx0XHRjb2x1bW46IG51bWJlcjtcblx0XHQvKiogQW4gb3B0aW9uYWwgbGluZSBmb3Igd2hpY2ggdG8gZGV0ZXJtaW5lIHRoZSBjb21wbGV0aW9uIHByb3Bvc2Fscy4gSWYgbWlzc2luZyB0aGUgZmlyc3QgbGluZSBvZiB0aGUgdGV4dCBpcyBhc3N1bWVkLiAqL1xuXHRcdGxpbmU/OiBudW1iZXI7XG5cdH1cblxuXHQvKiogUmVzcG9uc2UgdG8gJ2NvbXBsZXRpb25zJyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIENvbXBsZXRpb25zUmVzcG9uc2UgZXh0ZW5kcyBSZXNwb25zZSB7XG5cdFx0Ym9keToge1xuXHRcdFx0LyoqIFRoZSBwb3NzaWJsZSBjb21wbGV0aW9ucyBmb3IgLiAqL1xuXHRcdFx0dGFyZ2V0czogQ29tcGxldGlvbkl0ZW1bXTtcblx0XHR9O1xuXHR9XG5cblx0LyoqIEV4Y2VwdGlvbkluZm8gcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAnZXhjZXB0aW9uSW5mbycuXG5cdFx0UmV0cmlldmVzIHRoZSBkZXRhaWxzIG9mIHRoZSBleGNlcHRpb24gdGhhdCBjYXVzZWQgdGhpcyBldmVudCB0byBiZSByYWlzZWQuXG5cdFx0Q2xpZW50cyBzaG91bGQgb25seSBjYWxsIHRoaXMgcmVxdWVzdCBpZiB0aGUgY2FwYWJpbGl0eSAnc3VwcG9ydHNFeGNlcHRpb25JbmZvUmVxdWVzdCcgaXMgdHJ1ZS5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBFeGNlcHRpb25JbmZvUmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuXHRcdC8vIGNvbW1hbmQ6ICdleGNlcHRpb25JbmZvJztcblx0XHRhcmd1bWVudHM6IEV4Y2VwdGlvbkluZm9Bcmd1bWVudHM7XG5cdH1cblxuXHQvKiogQXJndW1lbnRzIGZvciAnZXhjZXB0aW9uSW5mbycgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBFeGNlcHRpb25JbmZvQXJndW1lbnRzIHtcblx0XHQvKiogVGhyZWFkIGZvciB3aGljaCBleGNlcHRpb24gaW5mb3JtYXRpb24gc2hvdWxkIGJlIHJldHJpZXZlZC4gKi9cblx0XHR0aHJlYWRJZDogbnVtYmVyO1xuXHR9XG5cblx0LyoqIFJlc3BvbnNlIHRvICdleGNlcHRpb25JbmZvJyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEV4Y2VwdGlvbkluZm9SZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcblx0XHRib2R5OiB7XG5cdFx0XHQvKiogSUQgb2YgdGhlIGV4Y2VwdGlvbiB0aGF0IHdhcyB0aHJvd24uICovXG5cdFx0XHRleGNlcHRpb25JZDogc3RyaW5nO1xuXHRcdFx0LyoqIERlc2NyaXB0aXZlIHRleHQgZm9yIHRoZSBleGNlcHRpb24gcHJvdmlkZWQgYnkgdGhlIGRlYnVnIGFkYXB0ZXIuICovXG5cdFx0XHRkZXNjcmlwdGlvbj86IHN0cmluZztcblx0XHRcdC8qKiBNb2RlIHRoYXQgY2F1c2VkIHRoZSBleGNlcHRpb24gbm90aWZpY2F0aW9uIHRvIGJlIHJhaXNlZC4gKi9cblx0XHRcdGJyZWFrTW9kZTogRXhjZXB0aW9uQnJlYWtNb2RlO1xuXHRcdFx0LyoqIERldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IHRoZSBleGNlcHRpb24uICovXG5cdFx0XHRkZXRhaWxzPzogRXhjZXB0aW9uRGV0YWlscztcblx0XHR9O1xuXHR9XG5cblx0LyoqIFJlYWRNZW1vcnkgcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAncmVhZE1lbW9yeScuXG5cdFx0UmVhZHMgYnl0ZXMgZnJvbSBtZW1vcnkgYXQgdGhlIHByb3ZpZGVkIGxvY2F0aW9uLlxuXHRcdENsaWVudHMgc2hvdWxkIG9ubHkgY2FsbCB0aGlzIHJlcXVlc3QgaWYgdGhlIGNhcGFiaWxpdHkgJ3N1cHBvcnRzUmVhZE1lbW9yeVJlcXVlc3QnIGlzIHRydWUuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgUmVhZE1lbW9yeVJlcXVlc3QgZXh0ZW5kcyBSZXF1ZXN0IHtcblx0XHQvLyBjb21tYW5kOiAncmVhZE1lbW9yeSc7XG5cdFx0YXJndW1lbnRzOiBSZWFkTWVtb3J5QXJndW1lbnRzO1xuXHR9XG5cblx0LyoqIEFyZ3VtZW50cyBmb3IgJ3JlYWRNZW1vcnknIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgUmVhZE1lbW9yeUFyZ3VtZW50cyB7XG5cdFx0LyoqIE1lbW9yeSByZWZlcmVuY2UgdG8gdGhlIGJhc2UgbG9jYXRpb24gZnJvbSB3aGljaCBkYXRhIHNob3VsZCBiZSByZWFkLiAqL1xuXHRcdG1lbW9yeVJlZmVyZW5jZTogc3RyaW5nO1xuXHRcdC8qKiBPcHRpb25hbCBvZmZzZXQgKGluIGJ5dGVzKSB0byBiZSBhcHBsaWVkIHRvIHRoZSByZWZlcmVuY2UgbG9jYXRpb24gYmVmb3JlIHJlYWRpbmcgZGF0YS4gQ2FuIGJlIG5lZ2F0aXZlLiAqL1xuXHRcdG9mZnNldD86IG51bWJlcjtcblx0XHQvKiogTnVtYmVyIG9mIGJ5dGVzIHRvIHJlYWQgYXQgdGhlIHNwZWNpZmllZCBsb2NhdGlvbiBhbmQgb2Zmc2V0LiAqL1xuXHRcdGNvdW50OiBudW1iZXI7XG5cdH1cblxuXHQvKiogUmVzcG9uc2UgdG8gJ3JlYWRNZW1vcnknIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgUmVhZE1lbW9yeVJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuXHRcdGJvZHk/OiB7XG5cdFx0XHQvKiogVGhlIGFkZHJlc3Mgb2YgdGhlIGZpcnN0IGJ5dGUgb2YgZGF0YSByZXR1cm5lZC5cblx0XHRcdFx0VHJlYXRlZCBhcyBhIGhleCB2YWx1ZSBpZiBwcmVmaXhlZCB3aXRoICcweCcsIG9yIGFzIGEgZGVjaW1hbCB2YWx1ZSBvdGhlcndpc2UuXG5cdFx0XHQqL1xuXHRcdFx0YWRkcmVzczogc3RyaW5nO1xuXHRcdFx0LyoqIFRoZSBudW1iZXIgb2YgdW5yZWFkYWJsZSBieXRlcyBlbmNvdW50ZXJlZCBhZnRlciB0aGUgbGFzdCBzdWNjZXNzZnVsbHkgcmVhZCBieXRlLlxuXHRcdFx0XHRUaGlzIGNhbiBiZSB1c2VkIHRvIGRldGVybWluZSB0aGUgbnVtYmVyIG9mIGJ5dGVzIHRoYXQgbXVzdCBiZSBza2lwcGVkIGJlZm9yZSBhIHN1YnNlcXVlbnQgJ3JlYWRNZW1vcnknIHJlcXVlc3Qgd2lsbCBzdWNjZWVkLlxuXHRcdFx0Ki9cblx0XHRcdHVucmVhZGFibGVCeXRlcz86IG51bWJlcjtcblx0XHRcdC8qKiBUaGUgYnl0ZXMgcmVhZCBmcm9tIG1lbW9yeSwgZW5jb2RlZCB1c2luZyBiYXNlNjQuICovXG5cdFx0XHRkYXRhPzogc3RyaW5nO1xuXHRcdH07XG5cdH1cblxuXHQvKiogRGlzYXNzZW1ibGUgcmVxdWVzdDsgdmFsdWUgb2YgY29tbWFuZCBmaWVsZCBpcyAnZGlzYXNzZW1ibGUnLlxuXHRcdERpc2Fzc2VtYmxlcyBjb2RlIHN0b3JlZCBhdCB0aGUgcHJvdmlkZWQgbG9jYXRpb24uXG5cdFx0Q2xpZW50cyBzaG91bGQgb25seSBjYWxsIHRoaXMgcmVxdWVzdCBpZiB0aGUgY2FwYWJpbGl0eSAnc3VwcG9ydHNEaXNhc3NlbWJsZVJlcXVlc3QnIGlzIHRydWUuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgRGlzYXNzZW1ibGVSZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG5cdFx0Ly8gY29tbWFuZDogJ2Rpc2Fzc2VtYmxlJztcblx0XHRhcmd1bWVudHM6IERpc2Fzc2VtYmxlQXJndW1lbnRzO1xuXHR9XG5cblx0LyoqIEFyZ3VtZW50cyBmb3IgJ2Rpc2Fzc2VtYmxlJyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIERpc2Fzc2VtYmxlQXJndW1lbnRzIHtcblx0XHQvKiogTWVtb3J5IHJlZmVyZW5jZSB0byB0aGUgYmFzZSBsb2NhdGlvbiBjb250YWluaW5nIHRoZSBpbnN0cnVjdGlvbnMgdG8gZGlzYXNzZW1ibGUuICovXG5cdFx0bWVtb3J5UmVmZXJlbmNlOiBzdHJpbmc7XG5cdFx0LyoqIE9wdGlvbmFsIG9mZnNldCAoaW4gYnl0ZXMpIHRvIGJlIGFwcGxpZWQgdG8gdGhlIHJlZmVyZW5jZSBsb2NhdGlvbiBiZWZvcmUgZGlzYXNzZW1ibGluZy4gQ2FuIGJlIG5lZ2F0aXZlLiAqL1xuXHRcdG9mZnNldD86IG51bWJlcjtcblx0XHQvKiogT3B0aW9uYWwgb2Zmc2V0IChpbiBpbnN0cnVjdGlvbnMpIHRvIGJlIGFwcGxpZWQgYWZ0ZXIgdGhlIGJ5dGUgb2Zmc2V0IChpZiBhbnkpIGJlZm9yZSBkaXNhc3NlbWJsaW5nLiBDYW4gYmUgbmVnYXRpdmUuICovXG5cdFx0aW5zdHJ1Y3Rpb25PZmZzZXQ/OiBudW1iZXI7XG5cdFx0LyoqIE51bWJlciBvZiBpbnN0cnVjdGlvbnMgdG8gZGlzYXNzZW1ibGUgc3RhcnRpbmcgYXQgdGhlIHNwZWNpZmllZCBsb2NhdGlvbiBhbmQgb2Zmc2V0LlxuXHRcdFx0QW4gYWRhcHRlciBtdXN0IHJldHVybiBleGFjdGx5IHRoaXMgbnVtYmVyIG9mIGluc3RydWN0aW9ucyAtIGFueSB1bmF2YWlsYWJsZSBpbnN0cnVjdGlvbnMgc2hvdWxkIGJlIHJlcGxhY2VkIHdpdGggYW4gaW1wbGVtZW50YXRpb24tZGVmaW5lZCAnaW52YWxpZCBpbnN0cnVjdGlvbicgdmFsdWUuXG5cdFx0Ki9cblx0XHRpbnN0cnVjdGlvbkNvdW50OiBudW1iZXI7XG5cdFx0LyoqIElmIHRydWUsIHRoZSBhZGFwdGVyIHNob3VsZCBhdHRlbXB0IHRvIHJlc29sdmUgbWVtb3J5IGFkZHJlc3NlcyBhbmQgb3RoZXIgdmFsdWVzIHRvIHN5bWJvbGljIG5hbWVzLiAqL1xuXHRcdHJlc29sdmVTeW1ib2xzPzogYm9vbGVhbjtcblx0fVxuXG5cdC8qKiBSZXNwb25zZSB0byAnZGlzYXNzZW1ibGUnIHJlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgRGlzYXNzZW1ibGVSZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcblx0XHRib2R5Pzoge1xuXHRcdFx0LyoqIFRoZSBsaXN0IG9mIGRpc2Fzc2VtYmxlZCBpbnN0cnVjdGlvbnMuICovXG5cdFx0XHRpbnN0cnVjdGlvbnM6IERpc2Fzc2VtYmxlZEluc3RydWN0aW9uW107XG5cdFx0fTtcblx0fVxuXG5cdC8qKiBJbmZvcm1hdGlvbiBhYm91dCB0aGUgY2FwYWJpbGl0aWVzIG9mIGEgZGVidWcgYWRhcHRlci4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBDYXBhYmlsaXRpZXMge1xuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBzdXBwb3J0cyB0aGUgJ2NvbmZpZ3VyYXRpb25Eb25lJyByZXF1ZXN0LiAqL1xuXHRcdHN1cHBvcnRzQ29uZmlndXJhdGlvbkRvbmVSZXF1ZXN0PzogYm9vbGVhbjtcblx0XHQvKiogVGhlIGRlYnVnIGFkYXB0ZXIgc3VwcG9ydHMgZnVuY3Rpb24gYnJlYWtwb2ludHMuICovXG5cdFx0c3VwcG9ydHNGdW5jdGlvbkJyZWFrcG9pbnRzPzogYm9vbGVhbjtcblx0XHQvKiogVGhlIGRlYnVnIGFkYXB0ZXIgc3VwcG9ydHMgY29uZGl0aW9uYWwgYnJlYWtwb2ludHMuICovXG5cdFx0c3VwcG9ydHNDb25kaXRpb25hbEJyZWFrcG9pbnRzPzogYm9vbGVhbjtcblx0XHQvKiogVGhlIGRlYnVnIGFkYXB0ZXIgc3VwcG9ydHMgYnJlYWtwb2ludHMgdGhhdCBicmVhayBleGVjdXRpb24gYWZ0ZXIgYSBzcGVjaWZpZWQgbnVtYmVyIG9mIGhpdHMuICovXG5cdFx0c3VwcG9ydHNIaXRDb25kaXRpb25hbEJyZWFrcG9pbnRzPzogYm9vbGVhbjtcblx0XHQvKiogVGhlIGRlYnVnIGFkYXB0ZXIgc3VwcG9ydHMgYSAoc2lkZSBlZmZlY3QgZnJlZSkgZXZhbHVhdGUgcmVxdWVzdCBmb3IgZGF0YSBob3ZlcnMuICovXG5cdFx0c3VwcG9ydHNFdmFsdWF0ZUZvckhvdmVycz86IGJvb2xlYW47XG5cdFx0LyoqIEF2YWlsYWJsZSBleGNlcHRpb24gZmlsdGVyIG9wdGlvbnMgZm9yIHRoZSAnc2V0RXhjZXB0aW9uQnJlYWtwb2ludHMnIHJlcXVlc3QuICovXG5cdFx0ZXhjZXB0aW9uQnJlYWtwb2ludEZpbHRlcnM/OiBFeGNlcHRpb25CcmVha3BvaW50c0ZpbHRlcltdO1xuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBzdXBwb3J0cyBzdGVwcGluZyBiYWNrIHZpYSB0aGUgJ3N0ZXBCYWNrJyBhbmQgJ3JldmVyc2VDb250aW51ZScgcmVxdWVzdHMuICovXG5cdFx0c3VwcG9ydHNTdGVwQmFjaz86IGJvb2xlYW47XG5cdFx0LyoqIFRoZSBkZWJ1ZyBhZGFwdGVyIHN1cHBvcnRzIHNldHRpbmcgYSB2YXJpYWJsZSB0byBhIHZhbHVlLiAqL1xuXHRcdHN1cHBvcnRzU2V0VmFyaWFibGU/OiBib29sZWFuO1xuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBzdXBwb3J0cyByZXN0YXJ0aW5nIGEgZnJhbWUuICovXG5cdFx0c3VwcG9ydHNSZXN0YXJ0RnJhbWU/OiBib29sZWFuO1xuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBzdXBwb3J0cyB0aGUgJ2dvdG9UYXJnZXRzJyByZXF1ZXN0LiAqL1xuXHRcdHN1cHBvcnRzR290b1RhcmdldHNSZXF1ZXN0PzogYm9vbGVhbjtcblx0XHQvKiogVGhlIGRlYnVnIGFkYXB0ZXIgc3VwcG9ydHMgdGhlICdzdGVwSW5UYXJnZXRzJyByZXF1ZXN0LiAqL1xuXHRcdHN1cHBvcnRzU3RlcEluVGFyZ2V0c1JlcXVlc3Q/OiBib29sZWFuO1xuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBzdXBwb3J0cyB0aGUgJ2NvbXBsZXRpb25zJyByZXF1ZXN0LiAqL1xuXHRcdHN1cHBvcnRzQ29tcGxldGlvbnNSZXF1ZXN0PzogYm9vbGVhbjtcblx0XHQvKiogVGhlIHNldCBvZiBjaGFyYWN0ZXJzIHRoYXQgc2hvdWxkIHRyaWdnZXIgY29tcGxldGlvbiBpbiBhIFJFUEwuIElmIG5vdCBzcGVjaWZpZWQsIHRoZSBVSSBzaG91bGQgYXNzdW1lIHRoZSAnLicgY2hhcmFjdGVyLiAqL1xuXHRcdGNvbXBsZXRpb25UcmlnZ2VyQ2hhcmFjdGVycz86IHN0cmluZ1tdO1xuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBzdXBwb3J0cyB0aGUgJ21vZHVsZXMnIHJlcXVlc3QuICovXG5cdFx0c3VwcG9ydHNNb2R1bGVzUmVxdWVzdD86IGJvb2xlYW47XG5cdFx0LyoqIFRoZSBzZXQgb2YgYWRkaXRpb25hbCBtb2R1bGUgaW5mb3JtYXRpb24gZXhwb3NlZCBieSB0aGUgZGVidWcgYWRhcHRlci4gKi9cblx0XHRhZGRpdGlvbmFsTW9kdWxlQ29sdW1ucz86IENvbHVtbkRlc2NyaXB0b3JbXTtcblx0XHQvKiogQ2hlY2tzdW0gYWxnb3JpdGhtcyBzdXBwb3J0ZWQgYnkgdGhlIGRlYnVnIGFkYXB0ZXIuICovXG5cdFx0c3VwcG9ydGVkQ2hlY2tzdW1BbGdvcml0aG1zPzogQ2hlY2tzdW1BbGdvcml0aG1bXTtcblx0XHQvKiogVGhlIGRlYnVnIGFkYXB0ZXIgc3VwcG9ydHMgdGhlICdyZXN0YXJ0JyByZXF1ZXN0LiBJbiB0aGlzIGNhc2UgYSBjbGllbnQgc2hvdWxkIG5vdCBpbXBsZW1lbnQgJ3Jlc3RhcnQnIGJ5IHRlcm1pbmF0aW5nIGFuZCByZWxhdW5jaGluZyB0aGUgYWRhcHRlciBidXQgYnkgY2FsbGluZyB0aGUgUmVzdGFydFJlcXVlc3QuICovXG5cdFx0c3VwcG9ydHNSZXN0YXJ0UmVxdWVzdD86IGJvb2xlYW47XG5cdFx0LyoqIFRoZSBkZWJ1ZyBhZGFwdGVyIHN1cHBvcnRzICdleGNlcHRpb25PcHRpb25zJyBvbiB0aGUgc2V0RXhjZXB0aW9uQnJlYWtwb2ludHMgcmVxdWVzdC4gKi9cblx0XHRzdXBwb3J0c0V4Y2VwdGlvbk9wdGlvbnM/OiBib29sZWFuO1xuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBzdXBwb3J0cyBhICdmb3JtYXQnIGF0dHJpYnV0ZSBvbiB0aGUgc3RhY2tUcmFjZVJlcXVlc3QsIHZhcmlhYmxlc1JlcXVlc3QsIGFuZCBldmFsdWF0ZVJlcXVlc3QuICovXG5cdFx0c3VwcG9ydHNWYWx1ZUZvcm1hdHRpbmdPcHRpb25zPzogYm9vbGVhbjtcblx0XHQvKiogVGhlIGRlYnVnIGFkYXB0ZXIgc3VwcG9ydHMgdGhlICdleGNlcHRpb25JbmZvJyByZXF1ZXN0LiAqL1xuXHRcdHN1cHBvcnRzRXhjZXB0aW9uSW5mb1JlcXVlc3Q/OiBib29sZWFuO1xuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBzdXBwb3J0cyB0aGUgJ3Rlcm1pbmF0ZURlYnVnZ2VlJyBhdHRyaWJ1dGUgb24gdGhlICdkaXNjb25uZWN0JyByZXF1ZXN0LiAqL1xuXHRcdHN1cHBvcnRUZXJtaW5hdGVEZWJ1Z2dlZT86IGJvb2xlYW47XG5cdFx0LyoqIFRoZSBkZWJ1ZyBhZGFwdGVyIHN1cHBvcnRzIHRoZSBkZWxheWVkIGxvYWRpbmcgb2YgcGFydHMgb2YgdGhlIHN0YWNrLCB3aGljaCByZXF1aXJlcyB0aGF0IGJvdGggdGhlICdzdGFydEZyYW1lJyBhbmQgJ2xldmVscycgYXJndW1lbnRzIGFuZCB0aGUgJ3RvdGFsRnJhbWVzJyByZXN1bHQgb2YgdGhlICdTdGFja1RyYWNlJyByZXF1ZXN0IGFyZSBzdXBwb3J0ZWQuICovXG5cdFx0c3VwcG9ydHNEZWxheWVkU3RhY2tUcmFjZUxvYWRpbmc/OiBib29sZWFuO1xuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBzdXBwb3J0cyB0aGUgJ2xvYWRlZFNvdXJjZXMnIHJlcXVlc3QuICovXG5cdFx0c3VwcG9ydHNMb2FkZWRTb3VyY2VzUmVxdWVzdD86IGJvb2xlYW47XG5cdFx0LyoqIFRoZSBkZWJ1ZyBhZGFwdGVyIHN1cHBvcnRzIGxvZ3BvaW50cyBieSBpbnRlcnByZXRpbmcgdGhlICdsb2dNZXNzYWdlJyBhdHRyaWJ1dGUgb2YgdGhlIFNvdXJjZUJyZWFrcG9pbnQuICovXG5cdFx0c3VwcG9ydHNMb2dQb2ludHM/OiBib29sZWFuO1xuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBzdXBwb3J0cyB0aGUgJ3Rlcm1pbmF0ZVRocmVhZHMnIHJlcXVlc3QuICovXG5cdFx0c3VwcG9ydHNUZXJtaW5hdGVUaHJlYWRzUmVxdWVzdD86IGJvb2xlYW47XG5cdFx0LyoqIFRoZSBkZWJ1ZyBhZGFwdGVyIHN1cHBvcnRzIHRoZSAnc2V0RXhwcmVzc2lvbicgcmVxdWVzdC4gKi9cblx0XHRzdXBwb3J0c1NldEV4cHJlc3Npb24/OiBib29sZWFuO1xuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBzdXBwb3J0cyB0aGUgJ3Rlcm1pbmF0ZScgcmVxdWVzdC4gKi9cblx0XHRzdXBwb3J0c1Rlcm1pbmF0ZVJlcXVlc3Q/OiBib29sZWFuO1xuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBzdXBwb3J0cyBkYXRhIGJyZWFrcG9pbnRzLiAqL1xuXHRcdHN1cHBvcnRzRGF0YUJyZWFrcG9pbnRzPzogYm9vbGVhbjtcblx0XHQvKiogVGhlIGRlYnVnIGFkYXB0ZXIgc3VwcG9ydHMgdGhlICdyZWFkTWVtb3J5JyByZXF1ZXN0LiAqL1xuXHRcdHN1cHBvcnRzUmVhZE1lbW9yeVJlcXVlc3Q/OiBib29sZWFuO1xuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBzdXBwb3J0cyB0aGUgJ2Rpc2Fzc2VtYmxlJyByZXF1ZXN0LiAqL1xuXHRcdHN1cHBvcnRzRGlzYXNzZW1ibGVSZXF1ZXN0PzogYm9vbGVhbjtcblx0XHQvKiogVGhlIGRlYnVnIGFkYXB0ZXIgc3VwcG9ydHMgdGhlICdjYW5jZWwnIHJlcXVlc3QuICovXG5cdFx0c3VwcG9ydHNDYW5jZWxSZXF1ZXN0PzogYm9vbGVhbjtcblx0XHQvKiogVGhlIGRlYnVnIGFkYXB0ZXIgc3VwcG9ydHMgdGhlICdicmVha3BvaW50TG9jYXRpb25zJyByZXF1ZXN0LiAqL1xuXHRcdHN1cHBvcnRzQnJlYWtwb2ludExvY2F0aW9uc1JlcXVlc3Q/OiBib29sZWFuO1xuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBzdXBwb3J0cyB0aGUgJ2NsaXBib2FyZCcgY29udGV4dCB2YWx1ZSBpbiB0aGUgJ2V2YWx1YXRlJyByZXF1ZXN0LiAqL1xuXHRcdHN1cHBvcnRzQ2xpcGJvYXJkQ29udGV4dD86IGJvb2xlYW47XG5cdFx0LyoqIFRoZSBkZWJ1ZyBhZGFwdGVyIHN1cHBvcnRzIHN0ZXBwaW5nIGdyYW51bGFyaXRpZXMgKGFyZ3VtZW50ICdncmFudWxhcml0eScpIGZvciB0aGUgc3RlcHBpbmcgcmVxdWVzdHMuICovXG5cdFx0c3VwcG9ydHNTdGVwcGluZ0dyYW51bGFyaXR5PzogYm9vbGVhbjtcblx0XHQvKiogVGhlIGRlYnVnIGFkYXB0ZXIgc3VwcG9ydHMgYWRkaW5nIGJyZWFrcG9pbnRzIGJhc2VkIG9uIGluc3RydWN0aW9uIHJlZmVyZW5jZXMuICovXG5cdFx0c3VwcG9ydHNJbnN0cnVjdGlvbkJyZWFrcG9pbnRzPzogYm9vbGVhbjtcblx0XHQvKiogVGhlIGRlYnVnIGFkYXB0ZXIgc3VwcG9ydHMgJ2ZpbHRlck9wdGlvbnMnIGFzIGFuIGFyZ3VtZW50IG9uIHRoZSAnc2V0RXhjZXB0aW9uQnJlYWtwb2ludHMnIHJlcXVlc3QuICovXG5cdFx0c3VwcG9ydHNFeGNlcHRpb25GaWx0ZXJPcHRpb25zPzogYm9vbGVhbjtcblx0fVxuXG5cdC8qKiBBbiBFeGNlcHRpb25CcmVha3BvaW50c0ZpbHRlciBpcyBzaG93biBpbiB0aGUgVUkgYXMgYW4gZmlsdGVyIG9wdGlvbiBmb3IgY29uZmlndXJpbmcgaG93IGV4Y2VwdGlvbnMgYXJlIGRlYWx0IHdpdGguICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgRXhjZXB0aW9uQnJlYWtwb2ludHNGaWx0ZXIge1xuXHRcdC8qKiBUaGUgaW50ZXJuYWwgSUQgb2YgdGhlIGZpbHRlciBvcHRpb24uIFRoaXMgdmFsdWUgaXMgcGFzc2VkIHRvIHRoZSAnc2V0RXhjZXB0aW9uQnJlYWtwb2ludHMnIHJlcXVlc3QuICovXG5cdFx0ZmlsdGVyOiBzdHJpbmc7XG5cdFx0LyoqIFRoZSBuYW1lIG9mIHRoZSBmaWx0ZXIgb3B0aW9uLiBUaGlzIHdpbGwgYmUgc2hvd24gaW4gdGhlIFVJLiAqL1xuXHRcdGxhYmVsOiBzdHJpbmc7XG5cdFx0LyoqIEluaXRpYWwgdmFsdWUgb2YgdGhlIGZpbHRlciBvcHRpb24uIElmIG5vdCBzcGVjaWZpZWQgYSB2YWx1ZSAnZmFsc2UnIGlzIGFzc3VtZWQuICovXG5cdFx0ZGVmYXVsdD86IGJvb2xlYW47XG5cdFx0LyoqIENvbnRyb2xzIHdoZXRoZXIgYSBjb25kaXRpb24gY2FuIGJlIHNwZWNpZmllZCBmb3IgdGhpcyBmaWx0ZXIgb3B0aW9uLiBJZiBmYWxzZSBvciBtaXNzaW5nLCBhIGNvbmRpdGlvbiBjYW4gbm90IGJlIHNldC4gKi9cblx0XHRzdXBwb3J0c0NvbmRpdGlvbj86IGJvb2xlYW47XG5cdH1cblxuXHQvKiogQSBzdHJ1Y3R1cmVkIG1lc3NhZ2Ugb2JqZWN0LiBVc2VkIHRvIHJldHVybiBlcnJvcnMgZnJvbSByZXF1ZXN0cy4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBNZXNzYWdlIHtcblx0XHQvKiogVW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSBtZXNzYWdlLiAqL1xuXHRcdGlkOiBudW1iZXI7XG5cdFx0LyoqIEEgZm9ybWF0IHN0cmluZyBmb3IgdGhlIG1lc3NhZ2UuIEVtYmVkZGVkIHZhcmlhYmxlcyBoYXZlIHRoZSBmb3JtICd7bmFtZX0nLlxuXHRcdFx0SWYgdmFyaWFibGUgbmFtZSBzdGFydHMgd2l0aCBhbiB1bmRlcnNjb3JlIGNoYXJhY3RlciwgdGhlIHZhcmlhYmxlIGRvZXMgbm90IGNvbnRhaW4gdXNlciBkYXRhIChQSUkpIGFuZCBjYW4gYmUgc2FmZWx5IHVzZWQgZm9yIHRlbGVtZXRyeSBwdXJwb3Nlcy5cblx0XHQqL1xuXHRcdGZvcm1hdDogc3RyaW5nO1xuXHRcdC8qKiBBbiBvYmplY3QgdXNlZCBhcyBhIGRpY3Rpb25hcnkgZm9yIGxvb2tpbmcgdXAgdGhlIHZhcmlhYmxlcyBpbiB0aGUgZm9ybWF0IHN0cmluZy4gKi9cblx0XHR2YXJpYWJsZXM/OiB7IFtrZXk6IHN0cmluZ106IHN0cmluZzsgfTtcblx0XHQvKiogSWYgdHJ1ZSBzZW5kIHRvIHRlbGVtZXRyeS4gKi9cblx0XHRzZW5kVGVsZW1ldHJ5PzogYm9vbGVhbjtcblx0XHQvKiogSWYgdHJ1ZSBzaG93IHVzZXIuICovXG5cdFx0c2hvd1VzZXI/OiBib29sZWFuO1xuXHRcdC8qKiBBbiBvcHRpb25hbCB1cmwgd2hlcmUgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBhYm91dCB0aGlzIG1lc3NhZ2UgY2FuIGJlIGZvdW5kLiAqL1xuXHRcdHVybD86IHN0cmluZztcblx0XHQvKiogQW4gb3B0aW9uYWwgbGFiZWwgdGhhdCBpcyBwcmVzZW50ZWQgdG8gdGhlIHVzZXIgYXMgdGhlIFVJIGZvciBvcGVuaW5nIHRoZSB1cmwuICovXG5cdFx0dXJsTGFiZWw/OiBzdHJpbmc7XG5cdH1cblxuXHQvKiogQSBNb2R1bGUgb2JqZWN0IHJlcHJlc2VudHMgYSByb3cgaW4gdGhlIG1vZHVsZXMgdmlldy5cblx0XHRUd28gYXR0cmlidXRlcyBhcmUgbWFuZGF0b3J5OiBhbiBpZCBpZGVudGlmaWVzIGEgbW9kdWxlIGluIHRoZSBtb2R1bGVzIHZpZXcgYW5kIGlzIHVzZWQgaW4gYSBNb2R1bGVFdmVudCBmb3IgaWRlbnRpZnlpbmcgYSBtb2R1bGUgZm9yIGFkZGluZywgdXBkYXRpbmcgb3IgZGVsZXRpbmcuXG5cdFx0VGhlIG5hbWUgaXMgdXNlZCB0byBtaW5pbWFsbHkgcmVuZGVyIHRoZSBtb2R1bGUgaW4gdGhlIFVJLlxuXHRcdFxuXHRcdEFkZGl0aW9uYWwgYXR0cmlidXRlcyBjYW4gYmUgYWRkZWQgdG8gdGhlIG1vZHVsZS4gVGhleSB3aWxsIHNob3cgdXAgaW4gdGhlIG1vZHVsZSBWaWV3IGlmIHRoZXkgaGF2ZSBhIGNvcnJlc3BvbmRpbmcgQ29sdW1uRGVzY3JpcHRvci5cblx0XHRcblx0XHRUbyBhdm9pZCBhbiB1bm5lY2Vzc2FyeSBwcm9saWZlcmF0aW9uIG9mIGFkZGl0aW9uYWwgYXR0cmlidXRlcyB3aXRoIHNpbWlsYXIgc2VtYW50aWNzIGJ1dCBkaWZmZXJlbnQgbmFtZXNcblx0XHR3ZSByZWNvbW1lbmQgdG8gcmUtdXNlIGF0dHJpYnV0ZXMgZnJvbSB0aGUgJ3JlY29tbWVuZGVkJyBsaXN0IGJlbG93IGZpcnN0LCBhbmQgb25seSBpbnRyb2R1Y2UgbmV3IGF0dHJpYnV0ZXMgaWYgbm90aGluZyBhcHByb3ByaWF0ZSBjb3VsZCBiZSBmb3VuZC5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBNb2R1bGUge1xuXHRcdC8qKiBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIG1vZHVsZS4gKi9cblx0XHRpZDogbnVtYmVyIHwgc3RyaW5nO1xuXHRcdC8qKiBBIG5hbWUgb2YgdGhlIG1vZHVsZS4gKi9cblx0XHRuYW1lOiBzdHJpbmc7XG5cdFx0LyoqIG9wdGlvbmFsIGJ1dCByZWNvbW1lbmRlZCBhdHRyaWJ1dGVzLlxuXHRcdFx0YWx3YXlzIHRyeSB0byB1c2UgdGhlc2UgZmlyc3QgYmVmb3JlIGludHJvZHVjaW5nIGFkZGl0aW9uYWwgYXR0cmlidXRlcy5cblx0XHRcdFxuXHRcdFx0TG9naWNhbCBmdWxsIHBhdGggdG8gdGhlIG1vZHVsZS4gVGhlIGV4YWN0IGRlZmluaXRpb24gaXMgaW1wbGVtZW50YXRpb24gZGVmaW5lZCwgYnV0IHVzdWFsbHkgdGhpcyB3b3VsZCBiZSBhIGZ1bGwgcGF0aCB0byB0aGUgb24tZGlzayBmaWxlIGZvciB0aGUgbW9kdWxlLlxuXHRcdCovXG5cdFx0cGF0aD86IHN0cmluZztcblx0XHQvKiogVHJ1ZSBpZiB0aGUgbW9kdWxlIGlzIG9wdGltaXplZC4gKi9cblx0XHRpc09wdGltaXplZD86IGJvb2xlYW47XG5cdFx0LyoqIFRydWUgaWYgdGhlIG1vZHVsZSBpcyBjb25zaWRlcmVkICd1c2VyIGNvZGUnIGJ5IGEgZGVidWdnZXIgdGhhdCBzdXBwb3J0cyAnSnVzdCBNeSBDb2RlJy4gKi9cblx0XHRpc1VzZXJDb2RlPzogYm9vbGVhbjtcblx0XHQvKiogVmVyc2lvbiBvZiBNb2R1bGUuICovXG5cdFx0dmVyc2lvbj86IHN0cmluZztcblx0XHQvKiogVXNlciB1bmRlcnN0YW5kYWJsZSBkZXNjcmlwdGlvbiBvZiBpZiBzeW1ib2xzIHdlcmUgZm91bmQgZm9yIHRoZSBtb2R1bGUgKGV4OiAnU3ltYm9scyBMb2FkZWQnLCAnU3ltYm9scyBub3QgZm91bmQnLCBldGMuICovXG5cdFx0c3ltYm9sU3RhdHVzPzogc3RyaW5nO1xuXHRcdC8qKiBMb2dpY2FsIGZ1bGwgcGF0aCB0byB0aGUgc3ltYm9sIGZpbGUuIFRoZSBleGFjdCBkZWZpbml0aW9uIGlzIGltcGxlbWVudGF0aW9uIGRlZmluZWQuICovXG5cdFx0c3ltYm9sRmlsZVBhdGg/OiBzdHJpbmc7XG5cdFx0LyoqIE1vZHVsZSBjcmVhdGVkIG9yIG1vZGlmaWVkLiAqL1xuXHRcdGRhdGVUaW1lU3RhbXA/OiBzdHJpbmc7XG5cdFx0LyoqIEFkZHJlc3MgcmFuZ2UgY292ZXJlZCBieSB0aGlzIG1vZHVsZS4gKi9cblx0XHRhZGRyZXNzUmFuZ2U/OiBzdHJpbmc7XG5cdH1cblxuXHQvKiogQSBDb2x1bW5EZXNjcmlwdG9yIHNwZWNpZmllcyB3aGF0IG1vZHVsZSBhdHRyaWJ1dGUgdG8gc2hvdyBpbiBhIGNvbHVtbiBvZiB0aGUgTW9kdWxlc1ZpZXcsIGhvdyB0byBmb3JtYXQgaXQsXG5cdFx0YW5kIHdoYXQgdGhlIGNvbHVtbidzIGxhYmVsIHNob3VsZCBiZS5cblx0XHRJdCBpcyBvbmx5IHVzZWQgaWYgdGhlIHVuZGVybHlpbmcgVUkgYWN0dWFsbHkgc3VwcG9ydHMgdGhpcyBsZXZlbCBvZiBjdXN0b21pemF0aW9uLlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIENvbHVtbkRlc2NyaXB0b3Ige1xuXHRcdC8qKiBOYW1lIG9mIHRoZSBhdHRyaWJ1dGUgcmVuZGVyZWQgaW4gdGhpcyBjb2x1bW4uICovXG5cdFx0YXR0cmlidXRlTmFtZTogc3RyaW5nO1xuXHRcdC8qKiBIZWFkZXIgVUkgbGFiZWwgb2YgY29sdW1uLiAqL1xuXHRcdGxhYmVsOiBzdHJpbmc7XG5cdFx0LyoqIEZvcm1hdCB0byB1c2UgZm9yIHRoZSByZW5kZXJlZCB2YWx1ZXMgaW4gdGhpcyBjb2x1bW4uIFRCRCBob3cgdGhlIGZvcm1hdCBzdHJpbmdzIGxvb2tzIGxpa2UuICovXG5cdFx0Zm9ybWF0Pzogc3RyaW5nO1xuXHRcdC8qKiBEYXRhdHlwZSBvZiB2YWx1ZXMgaW4gdGhpcyBjb2x1bW4uICBEZWZhdWx0cyB0byAnc3RyaW5nJyBpZiBub3Qgc3BlY2lmaWVkLiAqL1xuXHRcdHR5cGU/OiAnc3RyaW5nJyB8ICdudW1iZXInIHwgJ2Jvb2xlYW4nIHwgJ3VuaXhUaW1lc3RhbXBVVEMnO1xuXHRcdC8qKiBXaWR0aCBvZiB0aGlzIGNvbHVtbiBpbiBjaGFyYWN0ZXJzIChoaW50IG9ubHkpLiAqL1xuXHRcdHdpZHRoPzogbnVtYmVyO1xuXHR9XG5cblx0LyoqIFRoZSBNb2R1bGVzVmlld0Rlc2NyaXB0b3IgaXMgdGhlIGNvbnRhaW5lciBmb3IgYWxsIGRlY2xhcmF0aXZlIGNvbmZpZ3VyYXRpb24gb3B0aW9ucyBvZiBhIE1vZHVsZVZpZXcuXG5cdFx0Rm9yIG5vdyBpdCBvbmx5IHNwZWNpZmllcyB0aGUgY29sdW1ucyB0byBiZSBzaG93biBpbiB0aGUgbW9kdWxlcyB2aWV3LlxuXHQqL1xuXHRleHBvcnQgaW50ZXJmYWNlIE1vZHVsZXNWaWV3RGVzY3JpcHRvciB7XG5cdFx0Y29sdW1uczogQ29sdW1uRGVzY3JpcHRvcltdO1xuXHR9XG5cblx0LyoqIEEgVGhyZWFkICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgVGhyZWFkIHtcblx0XHQvKiogVW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSB0aHJlYWQuICovXG5cdFx0aWQ6IG51bWJlcjtcblx0XHQvKiogQSBuYW1lIG9mIHRoZSB0aHJlYWQuICovXG5cdFx0bmFtZTogc3RyaW5nO1xuXHR9XG5cblx0LyoqIEEgU291cmNlIGlzIGEgZGVzY3JpcHRvciBmb3Igc291cmNlIGNvZGUuXG5cdFx0SXQgaXMgcmV0dXJuZWQgZnJvbSB0aGUgZGVidWcgYWRhcHRlciBhcyBwYXJ0IG9mIGEgU3RhY2tGcmFtZSBhbmQgaXQgaXMgdXNlZCBieSBjbGllbnRzIHdoZW4gc3BlY2lmeWluZyBicmVha3BvaW50cy5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBTb3VyY2Uge1xuXHRcdC8qKiBUaGUgc2hvcnQgbmFtZSBvZiB0aGUgc291cmNlLiBFdmVyeSBzb3VyY2UgcmV0dXJuZWQgZnJvbSB0aGUgZGVidWcgYWRhcHRlciBoYXMgYSBuYW1lLlxuXHRcdFx0V2hlbiBzZW5kaW5nIGEgc291cmNlIHRvIHRoZSBkZWJ1ZyBhZGFwdGVyIHRoaXMgbmFtZSBpcyBvcHRpb25hbC5cblx0XHQqL1xuXHRcdG5hbWU/OiBzdHJpbmc7XG5cdFx0LyoqIFRoZSBwYXRoIG9mIHRoZSBzb3VyY2UgdG8gYmUgc2hvd24gaW4gdGhlIFVJLlxuXHRcdFx0SXQgaXMgb25seSB1c2VkIHRvIGxvY2F0ZSBhbmQgbG9hZCB0aGUgY29udGVudCBvZiB0aGUgc291cmNlIGlmIG5vIHNvdXJjZVJlZmVyZW5jZSBpcyBzcGVjaWZpZWQgKG9yIGl0cyB2YWx1ZSBpcyAwKS5cblx0XHQqL1xuXHRcdHBhdGg/OiBzdHJpbmc7XG5cdFx0LyoqIElmIHNvdXJjZVJlZmVyZW5jZSA+IDAgdGhlIGNvbnRlbnRzIG9mIHRoZSBzb3VyY2UgbXVzdCBiZSByZXRyaWV2ZWQgdGhyb3VnaCB0aGUgU291cmNlUmVxdWVzdCAoZXZlbiBpZiBhIHBhdGggaXMgc3BlY2lmaWVkKS5cblx0XHRcdEEgc291cmNlUmVmZXJlbmNlIGlzIG9ubHkgdmFsaWQgZm9yIGEgc2Vzc2lvbiwgc28gaXQgbXVzdCBub3QgYmUgdXNlZCB0byBwZXJzaXN0IGEgc291cmNlLlxuXHRcdFx0VGhlIHZhbHVlIHNob3VsZCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gMjE0NzQ4MzY0NyAoMl4zMS0xKS5cblx0XHQqL1xuXHRcdHNvdXJjZVJlZmVyZW5jZT86IG51bWJlcjtcblx0XHQvKiogQW4gb3B0aW9uYWwgaGludCBmb3IgaG93IHRvIHByZXNlbnQgdGhlIHNvdXJjZSBpbiB0aGUgVUkuXG5cdFx0XHRBIHZhbHVlIG9mICdkZWVtcGhhc2l6ZScgY2FuIGJlIHVzZWQgdG8gaW5kaWNhdGUgdGhhdCB0aGUgc291cmNlIGlzIG5vdCBhdmFpbGFibGUgb3IgdGhhdCBpdCBpcyBza2lwcGVkIG9uIHN0ZXBwaW5nLlxuXHRcdCovXG5cdFx0cHJlc2VudGF0aW9uSGludD86ICdub3JtYWwnIHwgJ2VtcGhhc2l6ZScgfCAnZGVlbXBoYXNpemUnO1xuXHRcdC8qKiBUaGUgKG9wdGlvbmFsKSBvcmlnaW4gb2YgdGhpcyBzb3VyY2U6IHBvc3NpYmxlIHZhbHVlcyAnaW50ZXJuYWwgbW9kdWxlJywgJ2lubGluZWQgY29udGVudCBmcm9tIHNvdXJjZSBtYXAnLCBldGMuICovXG5cdFx0b3JpZ2luPzogc3RyaW5nO1xuXHRcdC8qKiBBbiBvcHRpb25hbCBsaXN0IG9mIHNvdXJjZXMgdGhhdCBhcmUgcmVsYXRlZCB0byB0aGlzIHNvdXJjZS4gVGhlc2UgbWF5IGJlIHRoZSBzb3VyY2UgdGhhdCBnZW5lcmF0ZWQgdGhpcyBzb3VyY2UuICovXG5cdFx0c291cmNlcz86IFNvdXJjZVtdO1xuXHRcdC8qKiBPcHRpb25hbCBkYXRhIHRoYXQgYSBkZWJ1ZyBhZGFwdGVyIG1pZ2h0IHdhbnQgdG8gbG9vcCB0aHJvdWdoIHRoZSBjbGllbnQuXG5cdFx0XHRUaGUgY2xpZW50IHNob3VsZCBsZWF2ZSB0aGUgZGF0YSBpbnRhY3QgYW5kIHBlcnNpc3QgaXQgYWNyb3NzIHNlc3Npb25zLiBUaGUgY2xpZW50IHNob3VsZCBub3QgaW50ZXJwcmV0IHRoZSBkYXRhLlxuXHRcdCovXG5cdFx0YWRhcHRlckRhdGE/OiBhbnk7XG5cdFx0LyoqIFRoZSBjaGVja3N1bXMgYXNzb2NpYXRlZCB3aXRoIHRoaXMgZmlsZS4gKi9cblx0XHRjaGVja3N1bXM/OiBDaGVja3N1bVtdO1xuXHR9XG5cblx0LyoqIEEgU3RhY2tmcmFtZSBjb250YWlucyB0aGUgc291cmNlIGxvY2F0aW9uLiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFN0YWNrRnJhbWUge1xuXHRcdC8qKiBBbiBpZGVudGlmaWVyIGZvciB0aGUgc3RhY2sgZnJhbWUuIEl0IG11c3QgYmUgdW5pcXVlIGFjcm9zcyBhbGwgdGhyZWFkcy5cblx0XHRcdFRoaXMgaWQgY2FuIGJlIHVzZWQgdG8gcmV0cmlldmUgdGhlIHNjb3BlcyBvZiB0aGUgZnJhbWUgd2l0aCB0aGUgJ3Njb3Blc1JlcXVlc3QnIG9yIHRvIHJlc3RhcnQgdGhlIGV4ZWN1dGlvbiBvZiBhIHN0YWNrZnJhbWUuXG5cdFx0Ki9cblx0XHRpZDogbnVtYmVyO1xuXHRcdC8qKiBUaGUgbmFtZSBvZiB0aGUgc3RhY2sgZnJhbWUsIHR5cGljYWxseSBhIG1ldGhvZCBuYW1lLiAqL1xuXHRcdG5hbWU6IHN0cmluZztcblx0XHQvKiogVGhlIG9wdGlvbmFsIHNvdXJjZSBvZiB0aGUgZnJhbWUuICovXG5cdFx0c291cmNlPzogU291cmNlO1xuXHRcdC8qKiBUaGUgbGluZSB3aXRoaW4gdGhlIGZpbGUgb2YgdGhlIGZyYW1lLiBJZiBzb3VyY2UgaXMgbnVsbCBvciBkb2Vzbid0IGV4aXN0LCBsaW5lIGlzIDAgYW5kIG11c3QgYmUgaWdub3JlZC4gKi9cblx0XHRsaW5lOiBudW1iZXI7XG5cdFx0LyoqIFRoZSBjb2x1bW4gd2l0aGluIHRoZSBsaW5lLiBJZiBzb3VyY2UgaXMgbnVsbCBvciBkb2Vzbid0IGV4aXN0LCBjb2x1bW4gaXMgMCBhbmQgbXVzdCBiZSBpZ25vcmVkLiAqL1xuXHRcdGNvbHVtbjogbnVtYmVyO1xuXHRcdC8qKiBBbiBvcHRpb25hbCBlbmQgbGluZSBvZiB0aGUgcmFuZ2UgY292ZXJlZCBieSB0aGUgc3RhY2sgZnJhbWUuICovXG5cdFx0ZW5kTGluZT86IG51bWJlcjtcblx0XHQvKiogQW4gb3B0aW9uYWwgZW5kIGNvbHVtbiBvZiB0aGUgcmFuZ2UgY292ZXJlZCBieSB0aGUgc3RhY2sgZnJhbWUuICovXG5cdFx0ZW5kQ29sdW1uPzogbnVtYmVyO1xuXHRcdC8qKiBPcHRpb25hbCBtZW1vcnkgcmVmZXJlbmNlIGZvciB0aGUgY3VycmVudCBpbnN0cnVjdGlvbiBwb2ludGVyIGluIHRoaXMgZnJhbWUuICovXG5cdFx0aW5zdHJ1Y3Rpb25Qb2ludGVyUmVmZXJlbmNlPzogc3RyaW5nO1xuXHRcdC8qKiBUaGUgbW9kdWxlIGFzc29jaWF0ZWQgd2l0aCB0aGlzIGZyYW1lLCBpZiBhbnkuICovXG5cdFx0bW9kdWxlSWQ/OiBudW1iZXIgfCBzdHJpbmc7XG5cdFx0LyoqIEFuIG9wdGlvbmFsIGhpbnQgZm9yIGhvdyB0byBwcmVzZW50IHRoaXMgZnJhbWUgaW4gdGhlIFVJLlxuXHRcdFx0QSB2YWx1ZSBvZiAnbGFiZWwnIGNhbiBiZSB1c2VkIHRvIGluZGljYXRlIHRoYXQgdGhlIGZyYW1lIGlzIGFuIGFydGlmaWNpYWwgZnJhbWUgdGhhdCBpcyB1c2VkIGFzIGEgdmlzdWFsIGxhYmVsIG9yIHNlcGFyYXRvci4gQSB2YWx1ZSBvZiAnc3VidGxlJyBjYW4gYmUgdXNlZCB0byBjaGFuZ2UgdGhlIGFwcGVhcmFuY2Ugb2YgYSBmcmFtZSBpbiBhICdzdWJ0bGUnIHdheS5cblx0XHQqL1xuXHRcdHByZXNlbnRhdGlvbkhpbnQ/OiAnbm9ybWFsJyB8ICdsYWJlbCcgfCAnc3VidGxlJztcblx0fVxuXG5cdC8qKiBBIFNjb3BlIGlzIGEgbmFtZWQgY29udGFpbmVyIGZvciB2YXJpYWJsZXMuIE9wdGlvbmFsbHkgYSBzY29wZSBjYW4gbWFwIHRvIGEgc291cmNlIG9yIGEgcmFuZ2Ugd2l0aGluIGEgc291cmNlLiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFNjb3BlIHtcblx0XHQvKiogTmFtZSBvZiB0aGUgc2NvcGUgc3VjaCBhcyAnQXJndW1lbnRzJywgJ0xvY2FscycsIG9yICdSZWdpc3RlcnMnLiBUaGlzIHN0cmluZyBpcyBzaG93biBpbiB0aGUgVUkgYXMgaXMgYW5kIGNhbiBiZSB0cmFuc2xhdGVkLiAqL1xuXHRcdG5hbWU6IHN0cmluZztcblx0XHQvKiogQW4gb3B0aW9uYWwgaGludCBmb3IgaG93IHRvIHByZXNlbnQgdGhpcyBzY29wZSBpbiB0aGUgVUkuIElmIHRoaXMgYXR0cmlidXRlIGlzIG1pc3NpbmcsIHRoZSBzY29wZSBpcyBzaG93biB3aXRoIGEgZ2VuZXJpYyBVSS5cblx0XHRcdFZhbHVlczogXG5cdFx0XHQnYXJndW1lbnRzJzogU2NvcGUgY29udGFpbnMgbWV0aG9kIGFyZ3VtZW50cy5cblx0XHRcdCdsb2NhbHMnOiBTY29wZSBjb250YWlucyBsb2NhbCB2YXJpYWJsZXMuXG5cdFx0XHQncmVnaXN0ZXJzJzogU2NvcGUgY29udGFpbnMgcmVnaXN0ZXJzLiBPbmx5IGEgc2luZ2xlICdyZWdpc3RlcnMnIHNjb3BlIHNob3VsZCBiZSByZXR1cm5lZCBmcm9tIGEgJ3Njb3BlcycgcmVxdWVzdC5cblx0XHRcdGV0Yy5cblx0XHQqL1xuXHRcdHByZXNlbnRhdGlvbkhpbnQ/OiAnYXJndW1lbnRzJyB8ICdsb2NhbHMnIHwgJ3JlZ2lzdGVycycgfCBzdHJpbmc7XG5cdFx0LyoqIFRoZSB2YXJpYWJsZXMgb2YgdGhpcyBzY29wZSBjYW4gYmUgcmV0cmlldmVkIGJ5IHBhc3NpbmcgdGhlIHZhbHVlIG9mIHZhcmlhYmxlc1JlZmVyZW5jZSB0byB0aGUgVmFyaWFibGVzUmVxdWVzdC4gKi9cblx0XHR2YXJpYWJsZXNSZWZlcmVuY2U6IG51bWJlcjtcblx0XHQvKiogVGhlIG51bWJlciBvZiBuYW1lZCB2YXJpYWJsZXMgaW4gdGhpcyBzY29wZS5cblx0XHRcdFRoZSBjbGllbnQgY2FuIHVzZSB0aGlzIG9wdGlvbmFsIGluZm9ybWF0aW9uIHRvIHByZXNlbnQgdGhlIHZhcmlhYmxlcyBpbiBhIHBhZ2VkIFVJIGFuZCBmZXRjaCB0aGVtIGluIGNodW5rcy5cblx0XHQqL1xuXHRcdG5hbWVkVmFyaWFibGVzPzogbnVtYmVyO1xuXHRcdC8qKiBUaGUgbnVtYmVyIG9mIGluZGV4ZWQgdmFyaWFibGVzIGluIHRoaXMgc2NvcGUuXG5cdFx0XHRUaGUgY2xpZW50IGNhbiB1c2UgdGhpcyBvcHRpb25hbCBpbmZvcm1hdGlvbiB0byBwcmVzZW50IHRoZSB2YXJpYWJsZXMgaW4gYSBwYWdlZCBVSSBhbmQgZmV0Y2ggdGhlbSBpbiBjaHVua3MuXG5cdFx0Ki9cblx0XHRpbmRleGVkVmFyaWFibGVzPzogbnVtYmVyO1xuXHRcdC8qKiBJZiB0cnVlLCB0aGUgbnVtYmVyIG9mIHZhcmlhYmxlcyBpbiB0aGlzIHNjb3BlIGlzIGxhcmdlIG9yIGV4cGVuc2l2ZSB0byByZXRyaWV2ZS4gKi9cblx0XHRleHBlbnNpdmU6IGJvb2xlYW47XG5cdFx0LyoqIE9wdGlvbmFsIHNvdXJjZSBmb3IgdGhpcyBzY29wZS4gKi9cblx0XHRzb3VyY2U/OiBTb3VyY2U7XG5cdFx0LyoqIE9wdGlvbmFsIHN0YXJ0IGxpbmUgb2YgdGhlIHJhbmdlIGNvdmVyZWQgYnkgdGhpcyBzY29wZS4gKi9cblx0XHRsaW5lPzogbnVtYmVyO1xuXHRcdC8qKiBPcHRpb25hbCBzdGFydCBjb2x1bW4gb2YgdGhlIHJhbmdlIGNvdmVyZWQgYnkgdGhpcyBzY29wZS4gKi9cblx0XHRjb2x1bW4/OiBudW1iZXI7XG5cdFx0LyoqIE9wdGlvbmFsIGVuZCBsaW5lIG9mIHRoZSByYW5nZSBjb3ZlcmVkIGJ5IHRoaXMgc2NvcGUuICovXG5cdFx0ZW5kTGluZT86IG51bWJlcjtcblx0XHQvKiogT3B0aW9uYWwgZW5kIGNvbHVtbiBvZiB0aGUgcmFuZ2UgY292ZXJlZCBieSB0aGlzIHNjb3BlLiAqL1xuXHRcdGVuZENvbHVtbj86IG51bWJlcjtcblx0fVxuXG5cdC8qKiBBIFZhcmlhYmxlIGlzIGEgbmFtZS92YWx1ZSBwYWlyLlxuXHRcdE9wdGlvbmFsbHkgYSB2YXJpYWJsZSBjYW4gaGF2ZSBhICd0eXBlJyB0aGF0IGlzIHNob3duIGlmIHNwYWNlIHBlcm1pdHMgb3Igd2hlbiBob3ZlcmluZyBvdmVyIHRoZSB2YXJpYWJsZSdzIG5hbWUuXG5cdFx0QW4gb3B0aW9uYWwgJ2tpbmQnIGlzIHVzZWQgdG8gcmVuZGVyIGFkZGl0aW9uYWwgcHJvcGVydGllcyBvZiB0aGUgdmFyaWFibGUsIGUuZy4gZGlmZmVyZW50IGljb25zIGNhbiBiZSB1c2VkIHRvIGluZGljYXRlIHRoYXQgYSB2YXJpYWJsZSBpcyBwdWJsaWMgb3IgcHJpdmF0ZS5cblx0XHRJZiB0aGUgdmFsdWUgaXMgc3RydWN0dXJlZCAoaGFzIGNoaWxkcmVuKSwgYSBoYW5kbGUgaXMgcHJvdmlkZWQgdG8gcmV0cmlldmUgdGhlIGNoaWxkcmVuIHdpdGggdGhlIFZhcmlhYmxlc1JlcXVlc3QuXG5cdFx0SWYgdGhlIG51bWJlciBvZiBuYW1lZCBvciBpbmRleGVkIGNoaWxkcmVuIGlzIGxhcmdlLCB0aGUgbnVtYmVycyBzaG91bGQgYmUgcmV0dXJuZWQgdmlhIHRoZSBvcHRpb25hbCAnbmFtZWRWYXJpYWJsZXMnIGFuZCAnaW5kZXhlZFZhcmlhYmxlcycgYXR0cmlidXRlcy5cblx0XHRUaGUgY2xpZW50IGNhbiB1c2UgdGhpcyBvcHRpb25hbCBpbmZvcm1hdGlvbiB0byBwcmVzZW50IHRoZSBjaGlsZHJlbiBpbiBhIHBhZ2VkIFVJIGFuZCBmZXRjaCB0aGVtIGluIGNodW5rcy5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBWYXJpYWJsZSB7XG5cdFx0LyoqIFRoZSB2YXJpYWJsZSdzIG5hbWUuICovXG5cdFx0bmFtZTogc3RyaW5nO1xuXHRcdC8qKiBUaGUgdmFyaWFibGUncyB2YWx1ZS4gVGhpcyBjYW4gYmUgYSBtdWx0aS1saW5lIHRleHQsIGUuZy4gZm9yIGEgZnVuY3Rpb24gdGhlIGJvZHkgb2YgYSBmdW5jdGlvbi4gKi9cblx0XHR2YWx1ZTogc3RyaW5nO1xuXHRcdC8qKiBUaGUgdHlwZSBvZiB0aGUgdmFyaWFibGUncyB2YWx1ZS4gVHlwaWNhbGx5IHNob3duIGluIHRoZSBVSSB3aGVuIGhvdmVyaW5nIG92ZXIgdGhlIHZhbHVlLlxuXHRcdFx0VGhpcyBhdHRyaWJ1dGUgc2hvdWxkIG9ubHkgYmUgcmV0dXJuZWQgYnkgYSBkZWJ1ZyBhZGFwdGVyIGlmIHRoZSBjbGllbnQgaGFzIHBhc3NlZCB0aGUgdmFsdWUgdHJ1ZSBmb3IgdGhlICdzdXBwb3J0c1ZhcmlhYmxlVHlwZScgY2FwYWJpbGl0eSBvZiB0aGUgJ2luaXRpYWxpemUnIHJlcXVlc3QuXG5cdFx0Ki9cblx0XHR0eXBlPzogc3RyaW5nO1xuXHRcdC8qKiBQcm9wZXJ0aWVzIG9mIGEgdmFyaWFibGUgdGhhdCBjYW4gYmUgdXNlZCB0byBkZXRlcm1pbmUgaG93IHRvIHJlbmRlciB0aGUgdmFyaWFibGUgaW4gdGhlIFVJLiAqL1xuXHRcdHByZXNlbnRhdGlvbkhpbnQ/OiBWYXJpYWJsZVByZXNlbnRhdGlvbkhpbnQ7XG5cdFx0LyoqIE9wdGlvbmFsIGV2YWx1YXRhYmxlIG5hbWUgb2YgdGhpcyB2YXJpYWJsZSB3aGljaCBjYW4gYmUgcGFzc2VkIHRvIHRoZSAnRXZhbHVhdGVSZXF1ZXN0JyB0byBmZXRjaCB0aGUgdmFyaWFibGUncyB2YWx1ZS4gKi9cblx0XHRldmFsdWF0ZU5hbWU/OiBzdHJpbmc7XG5cdFx0LyoqIElmIHZhcmlhYmxlc1JlZmVyZW5jZSBpcyA+IDAsIHRoZSB2YXJpYWJsZSBpcyBzdHJ1Y3R1cmVkIGFuZCBpdHMgY2hpbGRyZW4gY2FuIGJlIHJldHJpZXZlZCBieSBwYXNzaW5nIHZhcmlhYmxlc1JlZmVyZW5jZSB0byB0aGUgVmFyaWFibGVzUmVxdWVzdC4gKi9cblx0XHR2YXJpYWJsZXNSZWZlcmVuY2U6IG51bWJlcjtcblx0XHQvKiogVGhlIG51bWJlciBvZiBuYW1lZCBjaGlsZCB2YXJpYWJsZXMuXG5cdFx0XHRUaGUgY2xpZW50IGNhbiB1c2UgdGhpcyBvcHRpb25hbCBpbmZvcm1hdGlvbiB0byBwcmVzZW50IHRoZSBjaGlsZHJlbiBpbiBhIHBhZ2VkIFVJIGFuZCBmZXRjaCB0aGVtIGluIGNodW5rcy5cblx0XHQqL1xuXHRcdG5hbWVkVmFyaWFibGVzPzogbnVtYmVyO1xuXHRcdC8qKiBUaGUgbnVtYmVyIG9mIGluZGV4ZWQgY2hpbGQgdmFyaWFibGVzLlxuXHRcdFx0VGhlIGNsaWVudCBjYW4gdXNlIHRoaXMgb3B0aW9uYWwgaW5mb3JtYXRpb24gdG8gcHJlc2VudCB0aGUgY2hpbGRyZW4gaW4gYSBwYWdlZCBVSSBhbmQgZmV0Y2ggdGhlbSBpbiBjaHVua3MuXG5cdFx0Ki9cblx0XHRpbmRleGVkVmFyaWFibGVzPzogbnVtYmVyO1xuXHRcdC8qKiBPcHRpb25hbCBtZW1vcnkgcmVmZXJlbmNlIGZvciB0aGUgdmFyaWFibGUgaWYgdGhlIHZhcmlhYmxlIHJlcHJlc2VudHMgZXhlY3V0YWJsZSBjb2RlLCBzdWNoIGFzIGEgZnVuY3Rpb24gcG9pbnRlci5cblx0XHRcdFRoaXMgYXR0cmlidXRlIGlzIG9ubHkgcmVxdWlyZWQgaWYgdGhlIGNsaWVudCBoYXMgcGFzc2VkIHRoZSB2YWx1ZSB0cnVlIGZvciB0aGUgJ3N1cHBvcnRzTWVtb3J5UmVmZXJlbmNlcycgY2FwYWJpbGl0eSBvZiB0aGUgJ2luaXRpYWxpemUnIHJlcXVlc3QuXG5cdFx0Ki9cblx0XHRtZW1vcnlSZWZlcmVuY2U/OiBzdHJpbmc7XG5cdH1cblxuXHQvKiogT3B0aW9uYWwgcHJvcGVydGllcyBvZiBhIHZhcmlhYmxlIHRoYXQgY2FuIGJlIHVzZWQgdG8gZGV0ZXJtaW5lIGhvdyB0byByZW5kZXIgdGhlIHZhcmlhYmxlIGluIHRoZSBVSS4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBWYXJpYWJsZVByZXNlbnRhdGlvbkhpbnQge1xuXHRcdC8qKiBUaGUga2luZCBvZiB2YXJpYWJsZS4gQmVmb3JlIGludHJvZHVjaW5nIGFkZGl0aW9uYWwgdmFsdWVzLCB0cnkgdG8gdXNlIHRoZSBsaXN0ZWQgdmFsdWVzLlxuXHRcdFx0VmFsdWVzOiBcblx0XHRcdCdwcm9wZXJ0eSc6IEluZGljYXRlcyB0aGF0IHRoZSBvYmplY3QgaXMgYSBwcm9wZXJ0eS5cblx0XHRcdCdtZXRob2QnOiBJbmRpY2F0ZXMgdGhhdCB0aGUgb2JqZWN0IGlzIGEgbWV0aG9kLlxuXHRcdFx0J2NsYXNzJzogSW5kaWNhdGVzIHRoYXQgdGhlIG9iamVjdCBpcyBhIGNsYXNzLlxuXHRcdFx0J2RhdGEnOiBJbmRpY2F0ZXMgdGhhdCB0aGUgb2JqZWN0IGlzIGRhdGEuXG5cdFx0XHQnZXZlbnQnOiBJbmRpY2F0ZXMgdGhhdCB0aGUgb2JqZWN0IGlzIGFuIGV2ZW50LlxuXHRcdFx0J2Jhc2VDbGFzcyc6IEluZGljYXRlcyB0aGF0IHRoZSBvYmplY3QgaXMgYSBiYXNlIGNsYXNzLlxuXHRcdFx0J2lubmVyQ2xhc3MnOiBJbmRpY2F0ZXMgdGhhdCB0aGUgb2JqZWN0IGlzIGFuIGlubmVyIGNsYXNzLlxuXHRcdFx0J2ludGVyZmFjZSc6IEluZGljYXRlcyB0aGF0IHRoZSBvYmplY3QgaXMgYW4gaW50ZXJmYWNlLlxuXHRcdFx0J21vc3REZXJpdmVkQ2xhc3MnOiBJbmRpY2F0ZXMgdGhhdCB0aGUgb2JqZWN0IGlzIHRoZSBtb3N0IGRlcml2ZWQgY2xhc3MuXG5cdFx0XHQndmlydHVhbCc6IEluZGljYXRlcyB0aGF0IHRoZSBvYmplY3QgaXMgdmlydHVhbCwgdGhhdCBtZWFucyBpdCBpcyBhIHN5bnRoZXRpYyBvYmplY3QgaW50cm9kdWNlZGJ5IHRoZVxuXHRcdFx0YWRhcHRlciBmb3IgcmVuZGVyaW5nIHB1cnBvc2VzLCBlLmcuIGFuIGluZGV4IHJhbmdlIGZvciBsYXJnZSBhcnJheXMuXG5cdFx0XHQnZGF0YUJyZWFrcG9pbnQnOiBJbmRpY2F0ZXMgdGhhdCBhIGRhdGEgYnJlYWtwb2ludCBpcyByZWdpc3RlcmVkIGZvciB0aGUgb2JqZWN0LlxuXHRcdFx0ZXRjLlxuXHRcdCovXG5cdFx0a2luZD86ICdwcm9wZXJ0eScgfCAnbWV0aG9kJyB8ICdjbGFzcycgfCAnZGF0YScgfCAnZXZlbnQnIHwgJ2Jhc2VDbGFzcycgfCAnaW5uZXJDbGFzcycgfCAnaW50ZXJmYWNlJyB8ICdtb3N0RGVyaXZlZENsYXNzJyB8ICd2aXJ0dWFsJyB8ICdkYXRhQnJlYWtwb2ludCcgfCBzdHJpbmc7XG5cdFx0LyoqIFNldCBvZiBhdHRyaWJ1dGVzIHJlcHJlc2VudGVkIGFzIGFuIGFycmF5IG9mIHN0cmluZ3MuIEJlZm9yZSBpbnRyb2R1Y2luZyBhZGRpdGlvbmFsIHZhbHVlcywgdHJ5IHRvIHVzZSB0aGUgbGlzdGVkIHZhbHVlcy5cblx0XHRcdFZhbHVlczogXG5cdFx0XHQnc3RhdGljJzogSW5kaWNhdGVzIHRoYXQgdGhlIG9iamVjdCBpcyBzdGF0aWMuXG5cdFx0XHQnY29uc3RhbnQnOiBJbmRpY2F0ZXMgdGhhdCB0aGUgb2JqZWN0IGlzIGEgY29uc3RhbnQuXG5cdFx0XHQncmVhZE9ubHknOiBJbmRpY2F0ZXMgdGhhdCB0aGUgb2JqZWN0IGlzIHJlYWQgb25seS5cblx0XHRcdCdyYXdTdHJpbmcnOiBJbmRpY2F0ZXMgdGhhdCB0aGUgb2JqZWN0IGlzIGEgcmF3IHN0cmluZy5cblx0XHRcdCdoYXNPYmplY3RJZCc6IEluZGljYXRlcyB0aGF0IHRoZSBvYmplY3QgY2FuIGhhdmUgYW4gT2JqZWN0IElEIGNyZWF0ZWQgZm9yIGl0LlxuXHRcdFx0J2NhbkhhdmVPYmplY3RJZCc6IEluZGljYXRlcyB0aGF0IHRoZSBvYmplY3QgaGFzIGFuIE9iamVjdCBJRCBhc3NvY2lhdGVkIHdpdGggaXQuXG5cdFx0XHQnaGFzU2lkZUVmZmVjdHMnOiBJbmRpY2F0ZXMgdGhhdCB0aGUgZXZhbHVhdGlvbiBoYWQgc2lkZSBlZmZlY3RzLlxuXHRcdFx0ZXRjLlxuXHRcdCovXG5cdFx0YXR0cmlidXRlcz86ICgnc3RhdGljJyB8ICdjb25zdGFudCcgfCAncmVhZE9ubHknIHwgJ3Jhd1N0cmluZycgfCAnaGFzT2JqZWN0SWQnIHwgJ2NhbkhhdmVPYmplY3RJZCcgfCAnaGFzU2lkZUVmZmVjdHMnIHwgc3RyaW5nKVtdO1xuXHRcdC8qKiBWaXNpYmlsaXR5IG9mIHZhcmlhYmxlLiBCZWZvcmUgaW50cm9kdWNpbmcgYWRkaXRpb25hbCB2YWx1ZXMsIHRyeSB0byB1c2UgdGhlIGxpc3RlZCB2YWx1ZXMuXG5cdFx0XHRWYWx1ZXM6ICdwdWJsaWMnLCAncHJpdmF0ZScsICdwcm90ZWN0ZWQnLCAnaW50ZXJuYWwnLCAnZmluYWwnLCBldGMuXG5cdFx0Ki9cblx0XHR2aXNpYmlsaXR5PzogJ3B1YmxpYycgfCAncHJpdmF0ZScgfCAncHJvdGVjdGVkJyB8ICdpbnRlcm5hbCcgfCAnZmluYWwnIHwgc3RyaW5nO1xuXHR9XG5cblx0LyoqIFByb3BlcnRpZXMgb2YgYSBicmVha3BvaW50IGxvY2F0aW9uIHJldHVybmVkIGZyb20gdGhlICdicmVha3BvaW50TG9jYXRpb25zJyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEJyZWFrcG9pbnRMb2NhdGlvbiB7XG5cdFx0LyoqIFN0YXJ0IGxpbmUgb2YgYnJlYWtwb2ludCBsb2NhdGlvbi4gKi9cblx0XHRsaW5lOiBudW1iZXI7XG5cdFx0LyoqIE9wdGlvbmFsIHN0YXJ0IGNvbHVtbiBvZiBicmVha3BvaW50IGxvY2F0aW9uLiAqL1xuXHRcdGNvbHVtbj86IG51bWJlcjtcblx0XHQvKiogT3B0aW9uYWwgZW5kIGxpbmUgb2YgYnJlYWtwb2ludCBsb2NhdGlvbiBpZiB0aGUgbG9jYXRpb24gY292ZXJzIGEgcmFuZ2UuICovXG5cdFx0ZW5kTGluZT86IG51bWJlcjtcblx0XHQvKiogT3B0aW9uYWwgZW5kIGNvbHVtbiBvZiBicmVha3BvaW50IGxvY2F0aW9uIGlmIHRoZSBsb2NhdGlvbiBjb3ZlcnMgYSByYW5nZS4gKi9cblx0XHRlbmRDb2x1bW4/OiBudW1iZXI7XG5cdH1cblxuXHQvKiogUHJvcGVydGllcyBvZiBhIGJyZWFrcG9pbnQgb3IgbG9ncG9pbnQgcGFzc2VkIHRvIHRoZSBzZXRCcmVha3BvaW50cyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFNvdXJjZUJyZWFrcG9pbnQge1xuXHRcdC8qKiBUaGUgc291cmNlIGxpbmUgb2YgdGhlIGJyZWFrcG9pbnQgb3IgbG9ncG9pbnQuICovXG5cdFx0bGluZTogbnVtYmVyO1xuXHRcdC8qKiBBbiBvcHRpb25hbCBzb3VyY2UgY29sdW1uIG9mIHRoZSBicmVha3BvaW50LiAqL1xuXHRcdGNvbHVtbj86IG51bWJlcjtcblx0XHQvKiogQW4gb3B0aW9uYWwgZXhwcmVzc2lvbiBmb3IgY29uZGl0aW9uYWwgYnJlYWtwb2ludHMuXG5cdFx0XHRJdCBpcyBvbmx5IGhvbm9yZWQgYnkgYSBkZWJ1ZyBhZGFwdGVyIGlmIHRoZSBjYXBhYmlsaXR5ICdzdXBwb3J0c0NvbmRpdGlvbmFsQnJlYWtwb2ludHMnIGlzIHRydWUuXG5cdFx0Ki9cblx0XHRjb25kaXRpb24/OiBzdHJpbmc7XG5cdFx0LyoqIEFuIG9wdGlvbmFsIGV4cHJlc3Npb24gdGhhdCBjb250cm9scyBob3cgbWFueSBoaXRzIG9mIHRoZSBicmVha3BvaW50IGFyZSBpZ25vcmVkLlxuXHRcdFx0VGhlIGJhY2tlbmQgaXMgZXhwZWN0ZWQgdG8gaW50ZXJwcmV0IHRoZSBleHByZXNzaW9uIGFzIG5lZWRlZC5cblx0XHRcdFRoZSBhdHRyaWJ1dGUgaXMgb25seSBob25vcmVkIGJ5IGEgZGVidWcgYWRhcHRlciBpZiB0aGUgY2FwYWJpbGl0eSAnc3VwcG9ydHNIaXRDb25kaXRpb25hbEJyZWFrcG9pbnRzJyBpcyB0cnVlLlxuXHRcdCovXG5cdFx0aGl0Q29uZGl0aW9uPzogc3RyaW5nO1xuXHRcdC8qKiBJZiB0aGlzIGF0dHJpYnV0ZSBleGlzdHMgYW5kIGlzIG5vbi1lbXB0eSwgdGhlIGJhY2tlbmQgbXVzdCBub3QgJ2JyZWFrJyAoc3RvcClcblx0XHRcdGJ1dCBsb2cgdGhlIG1lc3NhZ2UgaW5zdGVhZC4gRXhwcmVzc2lvbnMgd2l0aGluIHt9IGFyZSBpbnRlcnBvbGF0ZWQuXG5cdFx0XHRUaGUgYXR0cmlidXRlIGlzIG9ubHkgaG9ub3JlZCBieSBhIGRlYnVnIGFkYXB0ZXIgaWYgdGhlIGNhcGFiaWxpdHkgJ3N1cHBvcnRzTG9nUG9pbnRzJyBpcyB0cnVlLlxuXHRcdCovXG5cdFx0bG9nTWVzc2FnZT86IHN0cmluZztcblx0fVxuXG5cdC8qKiBQcm9wZXJ0aWVzIG9mIGEgYnJlYWtwb2ludCBwYXNzZWQgdG8gdGhlIHNldEZ1bmN0aW9uQnJlYWtwb2ludHMgcmVxdWVzdC4gKi9cblx0ZXhwb3J0IGludGVyZmFjZSBGdW5jdGlvbkJyZWFrcG9pbnQge1xuXHRcdC8qKiBUaGUgbmFtZSBvZiB0aGUgZnVuY3Rpb24uICovXG5cdFx0bmFtZTogc3RyaW5nO1xuXHRcdC8qKiBBbiBvcHRpb25hbCBleHByZXNzaW9uIGZvciBjb25kaXRpb25hbCBicmVha3BvaW50cy5cblx0XHRcdEl0IGlzIG9ubHkgaG9ub3JlZCBieSBhIGRlYnVnIGFkYXB0ZXIgaWYgdGhlIGNhcGFiaWxpdHkgJ3N1cHBvcnRzQ29uZGl0aW9uYWxCcmVha3BvaW50cycgaXMgdHJ1ZS5cblx0XHQqL1xuXHRcdGNvbmRpdGlvbj86IHN0cmluZztcblx0XHQvKiogQW4gb3B0aW9uYWwgZXhwcmVzc2lvbiB0aGF0IGNvbnRyb2xzIGhvdyBtYW55IGhpdHMgb2YgdGhlIGJyZWFrcG9pbnQgYXJlIGlnbm9yZWQuXG5cdFx0XHRUaGUgYmFja2VuZCBpcyBleHBlY3RlZCB0byBpbnRlcnByZXQgdGhlIGV4cHJlc3Npb24gYXMgbmVlZGVkLlxuXHRcdFx0VGhlIGF0dHJpYnV0ZSBpcyBvbmx5IGhvbm9yZWQgYnkgYSBkZWJ1ZyBhZGFwdGVyIGlmIHRoZSBjYXBhYmlsaXR5ICdzdXBwb3J0c0hpdENvbmRpdGlvbmFsQnJlYWtwb2ludHMnIGlzIHRydWUuXG5cdFx0Ki9cblx0XHRoaXRDb25kaXRpb24/OiBzdHJpbmc7XG5cdH1cblxuXHQvKiogVGhpcyBlbnVtZXJhdGlvbiBkZWZpbmVzIGFsbCBwb3NzaWJsZSBhY2Nlc3MgdHlwZXMgZm9yIGRhdGEgYnJlYWtwb2ludHMuICovXG5cdGV4cG9ydCB0eXBlIERhdGFCcmVha3BvaW50QWNjZXNzVHlwZSA9ICdyZWFkJyB8ICd3cml0ZScgfCAncmVhZFdyaXRlJztcblxuXHQvKiogUHJvcGVydGllcyBvZiBhIGRhdGEgYnJlYWtwb2ludCBwYXNzZWQgdG8gdGhlIHNldERhdGFCcmVha3BvaW50cyByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIERhdGFCcmVha3BvaW50IHtcblx0XHQvKiogQW4gaWQgcmVwcmVzZW50aW5nIHRoZSBkYXRhLiBUaGlzIGlkIGlzIHJldHVybmVkIGZyb20gdGhlIGRhdGFCcmVha3BvaW50SW5mbyByZXF1ZXN0LiAqL1xuXHRcdGRhdGFJZDogc3RyaW5nO1xuXHRcdC8qKiBUaGUgYWNjZXNzIHR5cGUgb2YgdGhlIGRhdGEuICovXG5cdFx0YWNjZXNzVHlwZT86IERhdGFCcmVha3BvaW50QWNjZXNzVHlwZTtcblx0XHQvKiogQW4gb3B0aW9uYWwgZXhwcmVzc2lvbiBmb3IgY29uZGl0aW9uYWwgYnJlYWtwb2ludHMuICovXG5cdFx0Y29uZGl0aW9uPzogc3RyaW5nO1xuXHRcdC8qKiBBbiBvcHRpb25hbCBleHByZXNzaW9uIHRoYXQgY29udHJvbHMgaG93IG1hbnkgaGl0cyBvZiB0aGUgYnJlYWtwb2ludCBhcmUgaWdub3JlZC5cblx0XHRcdFRoZSBiYWNrZW5kIGlzIGV4cGVjdGVkIHRvIGludGVycHJldCB0aGUgZXhwcmVzc2lvbiBhcyBuZWVkZWQuXG5cdFx0Ki9cblx0XHRoaXRDb25kaXRpb24/OiBzdHJpbmc7XG5cdH1cblxuXHQvKiogUHJvcGVydGllcyBvZiBhIGJyZWFrcG9pbnQgcGFzc2VkIHRvIHRoZSBzZXRJbnN0cnVjdGlvbkJyZWFrcG9pbnRzIHJlcXVlc3QgKi9cblx0ZXhwb3J0IGludGVyZmFjZSBJbnN0cnVjdGlvbkJyZWFrcG9pbnQge1xuXHRcdC8qKiBUaGUgaW5zdHJ1Y3Rpb24gcmVmZXJlbmNlIG9mIHRoZSBicmVha3BvaW50LlxuXHRcdFx0VGhpcyBzaG91bGQgYmUgYSBtZW1vcnkgb3IgaW5zdHJ1Y3Rpb24gcG9pbnRlciByZWZlcmVuY2UgZnJvbSBhbiBFdmFsdWF0ZVJlc3BvbnNlLCBWYXJpYWJsZSwgU3RhY2tGcmFtZSwgR290b1RhcmdldCwgb3IgQnJlYWtwb2ludC5cblx0XHQqL1xuXHRcdGluc3RydWN0aW9uUmVmZXJlbmNlOiBzdHJpbmc7XG5cdFx0LyoqIEFuIG9wdGlvbmFsIG9mZnNldCBmcm9tIHRoZSBpbnN0cnVjdGlvbiByZWZlcmVuY2UuXG5cdFx0XHRUaGlzIGNhbiBiZSBuZWdhdGl2ZS5cblx0XHQqL1xuXHRcdG9mZnNldD86IG51bWJlcjtcblx0XHQvKiogQW4gb3B0aW9uYWwgZXhwcmVzc2lvbiBmb3IgY29uZGl0aW9uYWwgYnJlYWtwb2ludHMuXG5cdFx0XHRJdCBpcyBvbmx5IGhvbm9yZWQgYnkgYSBkZWJ1ZyBhZGFwdGVyIGlmIHRoZSBjYXBhYmlsaXR5ICdzdXBwb3J0c0NvbmRpdGlvbmFsQnJlYWtwb2ludHMnIGlzIHRydWUuXG5cdFx0Ki9cblx0XHRjb25kaXRpb24/OiBzdHJpbmc7XG5cdFx0LyoqIEFuIG9wdGlvbmFsIGV4cHJlc3Npb24gdGhhdCBjb250cm9scyBob3cgbWFueSBoaXRzIG9mIHRoZSBicmVha3BvaW50IGFyZSBpZ25vcmVkLlxuXHRcdFx0VGhlIGJhY2tlbmQgaXMgZXhwZWN0ZWQgdG8gaW50ZXJwcmV0IHRoZSBleHByZXNzaW9uIGFzIG5lZWRlZC5cblx0XHRcdFRoZSBhdHRyaWJ1dGUgaXMgb25seSBob25vcmVkIGJ5IGEgZGVidWcgYWRhcHRlciBpZiB0aGUgY2FwYWJpbGl0eSAnc3VwcG9ydHNIaXRDb25kaXRpb25hbEJyZWFrcG9pbnRzJyBpcyB0cnVlLlxuXHRcdCovXG5cdFx0aGl0Q29uZGl0aW9uPzogc3RyaW5nO1xuXHR9XG5cblx0LyoqIEluZm9ybWF0aW9uIGFib3V0IGEgQnJlYWtwb2ludCBjcmVhdGVkIGluIHNldEJyZWFrcG9pbnRzLCBzZXRGdW5jdGlvbkJyZWFrcG9pbnRzLCBzZXRJbnN0cnVjdGlvbkJyZWFrcG9pbnRzLCBvciBzZXREYXRhQnJlYWtwb2ludHMuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgQnJlYWtwb2ludCB7XG5cdFx0LyoqIEFuIG9wdGlvbmFsIGlkZW50aWZpZXIgZm9yIHRoZSBicmVha3BvaW50LiBJdCBpcyBuZWVkZWQgaWYgYnJlYWtwb2ludCBldmVudHMgYXJlIHVzZWQgdG8gdXBkYXRlIG9yIHJlbW92ZSBicmVha3BvaW50cy4gKi9cblx0XHRpZD86IG51bWJlcjtcblx0XHQvKiogSWYgdHJ1ZSBicmVha3BvaW50IGNvdWxkIGJlIHNldCAoYnV0IG5vdCBuZWNlc3NhcmlseSBhdCB0aGUgZGVzaXJlZCBsb2NhdGlvbikuICovXG5cdFx0dmVyaWZpZWQ6IGJvb2xlYW47XG5cdFx0LyoqIEFuIG9wdGlvbmFsIG1lc3NhZ2UgYWJvdXQgdGhlIHN0YXRlIG9mIHRoZSBicmVha3BvaW50LlxuXHRcdFx0VGhpcyBpcyBzaG93biB0byB0aGUgdXNlciBhbmQgY2FuIGJlIHVzZWQgdG8gZXhwbGFpbiB3aHkgYSBicmVha3BvaW50IGNvdWxkIG5vdCBiZSB2ZXJpZmllZC5cblx0XHQqL1xuXHRcdG1lc3NhZ2U/OiBzdHJpbmc7XG5cdFx0LyoqIFRoZSBzb3VyY2Ugd2hlcmUgdGhlIGJyZWFrcG9pbnQgaXMgbG9jYXRlZC4gKi9cblx0XHRzb3VyY2U/OiBTb3VyY2U7XG5cdFx0LyoqIFRoZSBzdGFydCBsaW5lIG9mIHRoZSBhY3R1YWwgcmFuZ2UgY292ZXJlZCBieSB0aGUgYnJlYWtwb2ludC4gKi9cblx0XHRsaW5lPzogbnVtYmVyO1xuXHRcdC8qKiBBbiBvcHRpb25hbCBzdGFydCBjb2x1bW4gb2YgdGhlIGFjdHVhbCByYW5nZSBjb3ZlcmVkIGJ5IHRoZSBicmVha3BvaW50LiAqL1xuXHRcdGNvbHVtbj86IG51bWJlcjtcblx0XHQvKiogQW4gb3B0aW9uYWwgZW5kIGxpbmUgb2YgdGhlIGFjdHVhbCByYW5nZSBjb3ZlcmVkIGJ5IHRoZSBicmVha3BvaW50LiAqL1xuXHRcdGVuZExpbmU/OiBudW1iZXI7XG5cdFx0LyoqIEFuIG9wdGlvbmFsIGVuZCBjb2x1bW4gb2YgdGhlIGFjdHVhbCByYW5nZSBjb3ZlcmVkIGJ5IHRoZSBicmVha3BvaW50LlxuXHRcdFx0SWYgbm8gZW5kIGxpbmUgaXMgZ2l2ZW4sIHRoZW4gdGhlIGVuZCBjb2x1bW4gaXMgYXNzdW1lZCB0byBiZSBpbiB0aGUgc3RhcnQgbGluZS5cblx0XHQqL1xuXHRcdGVuZENvbHVtbj86IG51bWJlcjtcblx0XHQvKiogQW4gb3B0aW9uYWwgbWVtb3J5IHJlZmVyZW5jZSB0byB3aGVyZSB0aGUgYnJlYWtwb2ludCBpcyBzZXQuICovXG5cdFx0aW5zdHJ1Y3Rpb25SZWZlcmVuY2U/OiBzdHJpbmc7XG5cdFx0LyoqIEFuIG9wdGlvbmFsIG9mZnNldCBmcm9tIHRoZSBpbnN0cnVjdGlvbiByZWZlcmVuY2UuXG5cdFx0XHRUaGlzIGNhbiBiZSBuZWdhdGl2ZS5cblx0XHQqL1xuXHRcdG9mZnNldD86IG51bWJlcjtcblx0fVxuXG5cdC8qKiBUaGUgZ3JhbnVsYXJpdHkgb2Ygb25lICdzdGVwJyBpbiB0aGUgc3RlcHBpbmcgcmVxdWVzdHMgJ25leHQnLCAnc3RlcEluJywgJ3N0ZXBPdXQnLCBhbmQgJ3N0ZXBCYWNrJy5cblx0XHQnc3RhdGVtZW50JzogVGhlIHN0ZXAgc2hvdWxkIGFsbG93IHRoZSBwcm9ncmFtIHRvIHJ1biB1bnRpbCB0aGUgY3VycmVudCBzdGF0ZW1lbnQgaGFzIGZpbmlzaGVkIGV4ZWN1dGluZy5cblx0XHRUaGUgbWVhbmluZyBvZiBhIHN0YXRlbWVudCBpcyBkZXRlcm1pbmVkIGJ5IHRoZSBhZGFwdGVyIGFuZCBpdCBtYXkgYmUgY29uc2lkZXJlZCBlcXVpdmFsZW50IHRvIGEgbGluZS5cblx0XHRGb3IgZXhhbXBsZSAnZm9yKGludCBpID0gMDsgaSA8IDEwOyBpKyspIGNvdWxkIGJlIGNvbnNpZGVyZWQgdG8gaGF2ZSAzIHN0YXRlbWVudHMgJ2ludCBpID0gMCcsICdpIDwgMTAnLCBhbmQgJ2krKycuXG5cdFx0J2xpbmUnOiBUaGUgc3RlcCBzaG91bGQgYWxsb3cgdGhlIHByb2dyYW0gdG8gcnVuIHVudGlsIHRoZSBjdXJyZW50IHNvdXJjZSBsaW5lIGhhcyBleGVjdXRlZC5cblx0XHQnaW5zdHJ1Y3Rpb24nOiBUaGUgc3RlcCBzaG91bGQgYWxsb3cgb25lIGluc3RydWN0aW9uIHRvIGV4ZWN1dGUgKGUuZy4gb25lIHg4NiBpbnN0cnVjdGlvbikuXG5cdCovXG5cdGV4cG9ydCB0eXBlIFN0ZXBwaW5nR3JhbnVsYXJpdHkgPSAnc3RhdGVtZW50JyB8ICdsaW5lJyB8ICdpbnN0cnVjdGlvbic7XG5cblx0LyoqIEEgU3RlcEluVGFyZ2V0IGNhbiBiZSB1c2VkIGluIHRoZSAnc3RlcEluJyByZXF1ZXN0IGFuZCBkZXRlcm1pbmVzIGludG8gd2hpY2ggc2luZ2xlIHRhcmdldCB0aGUgc3RlcEluIHJlcXVlc3Qgc2hvdWxkIHN0ZXAuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgU3RlcEluVGFyZ2V0IHtcblx0XHQvKiogVW5pcXVlIGlkZW50aWZpZXIgZm9yIGEgc3RlcEluIHRhcmdldC4gKi9cblx0XHRpZDogbnVtYmVyO1xuXHRcdC8qKiBUaGUgbmFtZSBvZiB0aGUgc3RlcEluIHRhcmdldCAoc2hvd24gaW4gdGhlIFVJKS4gKi9cblx0XHRsYWJlbDogc3RyaW5nO1xuXHR9XG5cblx0LyoqIEEgR290b1RhcmdldCBkZXNjcmliZXMgYSBjb2RlIGxvY2F0aW9uIHRoYXQgY2FuIGJlIHVzZWQgYXMgYSB0YXJnZXQgaW4gdGhlICdnb3RvJyByZXF1ZXN0LlxuXHRcdFRoZSBwb3NzaWJsZSBnb3RvIHRhcmdldHMgY2FuIGJlIGRldGVybWluZWQgdmlhIHRoZSAnZ290b1RhcmdldHMnIHJlcXVlc3QuXG5cdCovXG5cdGV4cG9ydCBpbnRlcmZhY2UgR290b1RhcmdldCB7XG5cdFx0LyoqIFVuaXF1ZSBpZGVudGlmaWVyIGZvciBhIGdvdG8gdGFyZ2V0LiBUaGlzIGlzIHVzZWQgaW4gdGhlIGdvdG8gcmVxdWVzdC4gKi9cblx0XHRpZDogbnVtYmVyO1xuXHRcdC8qKiBUaGUgbmFtZSBvZiB0aGUgZ290byB0YXJnZXQgKHNob3duIGluIHRoZSBVSSkuICovXG5cdFx0bGFiZWw6IHN0cmluZztcblx0XHQvKiogVGhlIGxpbmUgb2YgdGhlIGdvdG8gdGFyZ2V0LiAqL1xuXHRcdGxpbmU6IG51bWJlcjtcblx0XHQvKiogQW4gb3B0aW9uYWwgY29sdW1uIG9mIHRoZSBnb3RvIHRhcmdldC4gKi9cblx0XHRjb2x1bW4/OiBudW1iZXI7XG5cdFx0LyoqIEFuIG9wdGlvbmFsIGVuZCBsaW5lIG9mIHRoZSByYW5nZSBjb3ZlcmVkIGJ5IHRoZSBnb3RvIHRhcmdldC4gKi9cblx0XHRlbmRMaW5lPzogbnVtYmVyO1xuXHRcdC8qKiBBbiBvcHRpb25hbCBlbmQgY29sdW1uIG9mIHRoZSByYW5nZSBjb3ZlcmVkIGJ5IHRoZSBnb3RvIHRhcmdldC4gKi9cblx0XHRlbmRDb2x1bW4/OiBudW1iZXI7XG5cdFx0LyoqIE9wdGlvbmFsIG1lbW9yeSByZWZlcmVuY2UgZm9yIHRoZSBpbnN0cnVjdGlvbiBwb2ludGVyIHZhbHVlIHJlcHJlc2VudGVkIGJ5IHRoaXMgdGFyZ2V0LiAqL1xuXHRcdGluc3RydWN0aW9uUG9pbnRlclJlZmVyZW5jZT86IHN0cmluZztcblx0fVxuXG5cdC8qKiBDb21wbGV0aW9uSXRlbXMgYXJlIHRoZSBzdWdnZXN0aW9ucyByZXR1cm5lZCBmcm9tIHRoZSBDb21wbGV0aW9uc1JlcXVlc3QuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgQ29tcGxldGlvbkl0ZW0ge1xuXHRcdC8qKiBUaGUgbGFiZWwgb2YgdGhpcyBjb21wbGV0aW9uIGl0ZW0uIEJ5IGRlZmF1bHQgdGhpcyBpcyBhbHNvIHRoZSB0ZXh0IHRoYXQgaXMgaW5zZXJ0ZWQgd2hlbiBzZWxlY3RpbmcgdGhpcyBjb21wbGV0aW9uLiAqL1xuXHRcdGxhYmVsOiBzdHJpbmc7XG5cdFx0LyoqIElmIHRleHQgaXMgbm90IGZhbHN5IHRoZW4gaXQgaXMgaW5zZXJ0ZWQgaW5zdGVhZCBvZiB0aGUgbGFiZWwuICovXG5cdFx0dGV4dD86IHN0cmluZztcblx0XHQvKiogQSBzdHJpbmcgdGhhdCBzaG91bGQgYmUgdXNlZCB3aGVuIGNvbXBhcmluZyB0aGlzIGl0ZW0gd2l0aCBvdGhlciBpdGVtcy4gV2hlbiBgZmFsc3lgIHRoZSBsYWJlbCBpcyB1c2VkLiAqL1xuXHRcdHNvcnRUZXh0Pzogc3RyaW5nO1xuXHRcdC8qKiBUaGUgaXRlbSdzIHR5cGUuIFR5cGljYWxseSB0aGUgY2xpZW50IHVzZXMgdGhpcyBpbmZvcm1hdGlvbiB0byByZW5kZXIgdGhlIGl0ZW0gaW4gdGhlIFVJIHdpdGggYW4gaWNvbi4gKi9cblx0XHR0eXBlPzogQ29tcGxldGlvbkl0ZW1UeXBlO1xuXHRcdC8qKiBUaGlzIHZhbHVlIGRldGVybWluZXMgdGhlIGxvY2F0aW9uIChpbiB0aGUgQ29tcGxldGlvbnNSZXF1ZXN0J3MgJ3RleHQnIGF0dHJpYnV0ZSkgd2hlcmUgdGhlIGNvbXBsZXRpb24gdGV4dCBpcyBhZGRlZC5cblx0XHRcdElmIG1pc3NpbmcgdGhlIHRleHQgaXMgYWRkZWQgYXQgdGhlIGxvY2F0aW9uIHNwZWNpZmllZCBieSB0aGUgQ29tcGxldGlvbnNSZXF1ZXN0J3MgJ2NvbHVtbicgYXR0cmlidXRlLlxuXHRcdCovXG5cdFx0c3RhcnQ/OiBudW1iZXI7XG5cdFx0LyoqIFRoaXMgdmFsdWUgZGV0ZXJtaW5lcyBob3cgbWFueSBjaGFyYWN0ZXJzIGFyZSBvdmVyd3JpdHRlbiBieSB0aGUgY29tcGxldGlvbiB0ZXh0LlxuXHRcdFx0SWYgbWlzc2luZyB0aGUgdmFsdWUgMCBpcyBhc3N1bWVkIHdoaWNoIHJlc3VsdHMgaW4gdGhlIGNvbXBsZXRpb24gdGV4dCBiZWluZyBpbnNlcnRlZC5cblx0XHQqL1xuXHRcdGxlbmd0aD86IG51bWJlcjtcblx0XHQvKiogRGV0ZXJtaW5lcyB0aGUgc3RhcnQgb2YgdGhlIG5ldyBzZWxlY3Rpb24gYWZ0ZXIgdGhlIHRleHQgaGFzIGJlZW4gaW5zZXJ0ZWQgKG9yIHJlcGxhY2VkKS5cblx0XHRcdFRoZSBzdGFydCBwb3NpdGlvbiBtdXN0IGluIHRoZSByYW5nZSAwIGFuZCBsZW5ndGggb2YgdGhlIGNvbXBsZXRpb24gdGV4dC5cblx0XHRcdElmIG9taXR0ZWQgdGhlIHNlbGVjdGlvbiBzdGFydHMgYXQgdGhlIGVuZCBvZiB0aGUgY29tcGxldGlvbiB0ZXh0LlxuXHRcdCovXG5cdFx0c2VsZWN0aW9uU3RhcnQ/OiBudW1iZXI7XG5cdFx0LyoqIERldGVybWluZXMgdGhlIGxlbmd0aCBvZiB0aGUgbmV3IHNlbGVjdGlvbiBhZnRlciB0aGUgdGV4dCBoYXMgYmVlbiBpbnNlcnRlZCAob3IgcmVwbGFjZWQpLlxuXHRcdFx0VGhlIHNlbGVjdGlvbiBjYW4gbm90IGV4dGVuZCBiZXlvbmQgdGhlIGJvdW5kcyBvZiB0aGUgY29tcGxldGlvbiB0ZXh0LlxuXHRcdFx0SWYgb21pdHRlZCB0aGUgbGVuZ3RoIGlzIGFzc3VtZWQgdG8gYmUgMC5cblx0XHQqL1xuXHRcdHNlbGVjdGlvbkxlbmd0aD86IG51bWJlcjtcblx0fVxuXG5cdC8qKiBTb21lIHByZWRlZmluZWQgdHlwZXMgZm9yIHRoZSBDb21wbGV0aW9uSXRlbS4gUGxlYXNlIG5vdGUgdGhhdCBub3QgYWxsIGNsaWVudHMgaGF2ZSBzcGVjaWZpYyBpY29ucyBmb3IgYWxsIG9mIHRoZW0uICovXG5cdGV4cG9ydCB0eXBlIENvbXBsZXRpb25JdGVtVHlwZSA9ICdtZXRob2QnIHwgJ2Z1bmN0aW9uJyB8ICdjb25zdHJ1Y3RvcicgfCAnZmllbGQnIHwgJ3ZhcmlhYmxlJyB8ICdjbGFzcycgfCAnaW50ZXJmYWNlJyB8ICdtb2R1bGUnIHwgJ3Byb3BlcnR5JyB8ICd1bml0JyB8ICd2YWx1ZScgfCAnZW51bScgfCAna2V5d29yZCcgfCAnc25pcHBldCcgfCAndGV4dCcgfCAnY29sb3InIHwgJ2ZpbGUnIHwgJ3JlZmVyZW5jZScgfCAnY3VzdG9tY29sb3InO1xuXG5cdC8qKiBOYW1lcyBvZiBjaGVja3N1bSBhbGdvcml0aG1zIHRoYXQgbWF5IGJlIHN1cHBvcnRlZCBieSBhIGRlYnVnIGFkYXB0ZXIuICovXG5cdGV4cG9ydCB0eXBlIENoZWNrc3VtQWxnb3JpdGhtID0gJ01ENScgfCAnU0hBMScgfCAnU0hBMjU2JyB8ICd0aW1lc3RhbXAnO1xuXG5cdC8qKiBUaGUgY2hlY2tzdW0gb2YgYW4gaXRlbSBjYWxjdWxhdGVkIGJ5IHRoZSBzcGVjaWZpZWQgYWxnb3JpdGhtLiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIENoZWNrc3VtIHtcblx0XHQvKiogVGhlIGFsZ29yaXRobSB1c2VkIHRvIGNhbGN1bGF0ZSB0aGlzIGNoZWNrc3VtLiAqL1xuXHRcdGFsZ29yaXRobTogQ2hlY2tzdW1BbGdvcml0aG07XG5cdFx0LyoqIFZhbHVlIG9mIHRoZSBjaGVja3N1bS4gKi9cblx0XHRjaGVja3N1bTogc3RyaW5nO1xuXHR9XG5cblx0LyoqIFByb3ZpZGVzIGZvcm1hdHRpbmcgaW5mb3JtYXRpb24gZm9yIGEgdmFsdWUuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgVmFsdWVGb3JtYXQge1xuXHRcdC8qKiBEaXNwbGF5IHRoZSB2YWx1ZSBpbiBoZXguICovXG5cdFx0aGV4PzogYm9vbGVhbjtcblx0fVxuXG5cdC8qKiBQcm92aWRlcyBmb3JtYXR0aW5nIGluZm9ybWF0aW9uIGZvciBhIHN0YWNrIGZyYW1lLiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIFN0YWNrRnJhbWVGb3JtYXQgZXh0ZW5kcyBWYWx1ZUZvcm1hdCB7XG5cdFx0LyoqIERpc3BsYXlzIHBhcmFtZXRlcnMgZm9yIHRoZSBzdGFjayBmcmFtZS4gKi9cblx0XHRwYXJhbWV0ZXJzPzogYm9vbGVhbjtcblx0XHQvKiogRGlzcGxheXMgdGhlIHR5cGVzIG9mIHBhcmFtZXRlcnMgZm9yIHRoZSBzdGFjayBmcmFtZS4gKi9cblx0XHRwYXJhbWV0ZXJUeXBlcz86IGJvb2xlYW47XG5cdFx0LyoqIERpc3BsYXlzIHRoZSBuYW1lcyBvZiBwYXJhbWV0ZXJzIGZvciB0aGUgc3RhY2sgZnJhbWUuICovXG5cdFx0cGFyYW1ldGVyTmFtZXM/OiBib29sZWFuO1xuXHRcdC8qKiBEaXNwbGF5cyB0aGUgdmFsdWVzIG9mIHBhcmFtZXRlcnMgZm9yIHRoZSBzdGFjayBmcmFtZS4gKi9cblx0XHRwYXJhbWV0ZXJWYWx1ZXM/OiBib29sZWFuO1xuXHRcdC8qKiBEaXNwbGF5cyB0aGUgbGluZSBudW1iZXIgb2YgdGhlIHN0YWNrIGZyYW1lLiAqL1xuXHRcdGxpbmU/OiBib29sZWFuO1xuXHRcdC8qKiBEaXNwbGF5cyB0aGUgbW9kdWxlIG9mIHRoZSBzdGFjayBmcmFtZS4gKi9cblx0XHRtb2R1bGU/OiBib29sZWFuO1xuXHRcdC8qKiBJbmNsdWRlcyBhbGwgc3RhY2sgZnJhbWVzLCBpbmNsdWRpbmcgdGhvc2UgdGhlIGRlYnVnIGFkYXB0ZXIgbWlnaHQgb3RoZXJ3aXNlIGhpZGUuICovXG5cdFx0aW5jbHVkZUFsbD86IGJvb2xlYW47XG5cdH1cblxuXHQvKiogQW4gRXhjZXB0aW9uRmlsdGVyT3B0aW9ucyBpcyB1c2VkIHRvIHNwZWNpZnkgYW4gZXhjZXB0aW9uIGZpbHRlciB0b2dldGhlciB3aXRoIGEgY29uZGl0aW9uIGZvciB0aGUgc2V0RXhjZXB0aW9uc0ZpbHRlciByZXF1ZXN0LiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEV4Y2VwdGlvbkZpbHRlck9wdGlvbnMge1xuXHRcdC8qKiBJRCBvZiBhbiBleGNlcHRpb24gZmlsdGVyIHJldHVybmVkIGJ5IHRoZSAnZXhjZXB0aW9uQnJlYWtwb2ludEZpbHRlcnMnIGNhcGFiaWxpdHkuICovXG5cdFx0ZmlsdGVySWQ6IHN0cmluZztcblx0XHQvKiogQW4gb3B0aW9uYWwgZXhwcmVzc2lvbiBmb3IgY29uZGl0aW9uYWwgZXhjZXB0aW9ucy5cblx0XHRcdFRoZSBleGNlcHRpb24gd2lsbCBicmVhayBpbnRvIHRoZSBkZWJ1Z2dlciBpZiB0aGUgcmVzdWx0IG9mIHRoZSBjb25kaXRpb24gaXMgdHJ1ZS5cblx0XHQqL1xuXHRcdGNvbmRpdGlvbj86IHN0cmluZztcblx0fVxuXG5cdC8qKiBBbiBFeGNlcHRpb25PcHRpb25zIGFzc2lnbnMgY29uZmlndXJhdGlvbiBvcHRpb25zIHRvIGEgc2V0IG9mIGV4Y2VwdGlvbnMuICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgRXhjZXB0aW9uT3B0aW9ucyB7XG5cdFx0LyoqIEEgcGF0aCB0aGF0IHNlbGVjdHMgYSBzaW5nbGUgb3IgbXVsdGlwbGUgZXhjZXB0aW9ucyBpbiBhIHRyZWUuIElmICdwYXRoJyBpcyBtaXNzaW5nLCB0aGUgd2hvbGUgdHJlZSBpcyBzZWxlY3RlZC5cblx0XHRcdEJ5IGNvbnZlbnRpb24gdGhlIGZpcnN0IHNlZ21lbnQgb2YgdGhlIHBhdGggaXMgYSBjYXRlZ29yeSB0aGF0IGlzIHVzZWQgdG8gZ3JvdXAgZXhjZXB0aW9ucyBpbiB0aGUgVUkuXG5cdFx0Ki9cblx0XHRwYXRoPzogRXhjZXB0aW9uUGF0aFNlZ21lbnRbXTtcblx0XHQvKiogQ29uZGl0aW9uIHdoZW4gYSB0aHJvd24gZXhjZXB0aW9uIHNob3VsZCByZXN1bHQgaW4gYSBicmVhay4gKi9cblx0XHRicmVha01vZGU6IEV4Y2VwdGlvbkJyZWFrTW9kZTtcblx0fVxuXG5cdC8qKiBUaGlzIGVudW1lcmF0aW9uIGRlZmluZXMgYWxsIHBvc3NpYmxlIGNvbmRpdGlvbnMgd2hlbiBhIHRocm93biBleGNlcHRpb24gc2hvdWxkIHJlc3VsdCBpbiBhIGJyZWFrLlxuXHRcdG5ldmVyOiBuZXZlciBicmVha3MsXG5cdFx0YWx3YXlzOiBhbHdheXMgYnJlYWtzLFxuXHRcdHVuaGFuZGxlZDogYnJlYWtzIHdoZW4gZXhjZXB0aW9uIHVuaGFuZGxlZCxcblx0XHR1c2VyVW5oYW5kbGVkOiBicmVha3MgaWYgdGhlIGV4Y2VwdGlvbiBpcyBub3QgaGFuZGxlZCBieSB1c2VyIGNvZGUuXG5cdCovXG5cdGV4cG9ydCB0eXBlIEV4Y2VwdGlvbkJyZWFrTW9kZSA9ICduZXZlcicgfCAnYWx3YXlzJyB8ICd1bmhhbmRsZWQnIHwgJ3VzZXJVbmhhbmRsZWQnO1xuXG5cdC8qKiBBbiBFeGNlcHRpb25QYXRoU2VnbWVudCByZXByZXNlbnRzIGEgc2VnbWVudCBpbiBhIHBhdGggdGhhdCBpcyB1c2VkIHRvIG1hdGNoIGxlYWZzIG9yIG5vZGVzIGluIGEgdHJlZSBvZiBleGNlcHRpb25zLlxuXHRcdElmIGEgc2VnbWVudCBjb25zaXN0cyBvZiBtb3JlIHRoYW4gb25lIG5hbWUsIGl0IG1hdGNoZXMgdGhlIG5hbWVzIHByb3ZpZGVkIGlmICduZWdhdGUnIGlzIGZhbHNlIG9yIG1pc3Npbmcgb3Jcblx0XHRpdCBtYXRjaGVzIGFueXRoaW5nIGV4Y2VwdCB0aGUgbmFtZXMgcHJvdmlkZWQgaWYgJ25lZ2F0ZScgaXMgdHJ1ZS5cblx0Ki9cblx0ZXhwb3J0IGludGVyZmFjZSBFeGNlcHRpb25QYXRoU2VnbWVudCB7XG5cdFx0LyoqIElmIGZhbHNlIG9yIG1pc3NpbmcgdGhpcyBzZWdtZW50IG1hdGNoZXMgdGhlIG5hbWVzIHByb3ZpZGVkLCBvdGhlcndpc2UgaXQgbWF0Y2hlcyBhbnl0aGluZyBleGNlcHQgdGhlIG5hbWVzIHByb3ZpZGVkLiAqL1xuXHRcdG5lZ2F0ZT86IGJvb2xlYW47XG5cdFx0LyoqIERlcGVuZGluZyBvbiB0aGUgdmFsdWUgb2YgJ25lZ2F0ZScgdGhlIG5hbWVzIHRoYXQgc2hvdWxkIG1hdGNoIG9yIG5vdCBtYXRjaC4gKi9cblx0XHRuYW1lczogc3RyaW5nW107XG5cdH1cblxuXHQvKiogRGV0YWlsZWQgaW5mb3JtYXRpb24gYWJvdXQgYW4gZXhjZXB0aW9uIHRoYXQgaGFzIG9jY3VycmVkLiAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEV4Y2VwdGlvbkRldGFpbHMge1xuXHRcdC8qKiBNZXNzYWdlIGNvbnRhaW5lZCBpbiB0aGUgZXhjZXB0aW9uLiAqL1xuXHRcdG1lc3NhZ2U/OiBzdHJpbmc7XG5cdFx0LyoqIFNob3J0IHR5cGUgbmFtZSBvZiB0aGUgZXhjZXB0aW9uIG9iamVjdC4gKi9cblx0XHR0eXBlTmFtZT86IHN0cmluZztcblx0XHQvKiogRnVsbHktcXVhbGlmaWVkIHR5cGUgbmFtZSBvZiB0aGUgZXhjZXB0aW9uIG9iamVjdC4gKi9cblx0XHRmdWxsVHlwZU5hbWU/OiBzdHJpbmc7XG5cdFx0LyoqIE9wdGlvbmFsIGV4cHJlc3Npb24gdGhhdCBjYW4gYmUgZXZhbHVhdGVkIGluIHRoZSBjdXJyZW50IHNjb3BlIHRvIG9idGFpbiB0aGUgZXhjZXB0aW9uIG9iamVjdC4gKi9cblx0XHRldmFsdWF0ZU5hbWU/OiBzdHJpbmc7XG5cdFx0LyoqIFN0YWNrIHRyYWNlIGF0IHRoZSB0aW1lIHRoZSBleGNlcHRpb24gd2FzIHRocm93bi4gKi9cblx0XHRzdGFja1RyYWNlPzogc3RyaW5nO1xuXHRcdC8qKiBEZXRhaWxzIG9mIHRoZSBleGNlcHRpb24gY29udGFpbmVkIGJ5IHRoaXMgZXhjZXB0aW9uLCBpZiBhbnkuICovXG5cdFx0aW5uZXJFeGNlcHRpb24/OiBFeGNlcHRpb25EZXRhaWxzW107XG5cdH1cblxuXHQvKiogUmVwcmVzZW50cyBhIHNpbmdsZSBkaXNhc3NlbWJsZWQgaW5zdHJ1Y3Rpb24uICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgRGlzYXNzZW1ibGVkSW5zdHJ1Y3Rpb24ge1xuXHRcdC8qKiBUaGUgYWRkcmVzcyBvZiB0aGUgaW5zdHJ1Y3Rpb24uIFRyZWF0ZWQgYXMgYSBoZXggdmFsdWUgaWYgcHJlZml4ZWQgd2l0aCAnMHgnLCBvciBhcyBhIGRlY2ltYWwgdmFsdWUgb3RoZXJ3aXNlLiAqL1xuXHRcdGFkZHJlc3M6IHN0cmluZztcblx0XHQvKiogT3B0aW9uYWwgcmF3IGJ5dGVzIHJlcHJlc2VudGluZyB0aGUgaW5zdHJ1Y3Rpb24gYW5kIGl0cyBvcGVyYW5kcywgaW4gYW4gaW1wbGVtZW50YXRpb24tZGVmaW5lZCBmb3JtYXQuICovXG5cdFx0aW5zdHJ1Y3Rpb25CeXRlcz86IHN0cmluZztcblx0XHQvKiogVGV4dCByZXByZXNlbnRpbmcgdGhlIGluc3RydWN0aW9uIGFuZCBpdHMgb3BlcmFuZHMsIGluIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgZm9ybWF0LiAqL1xuXHRcdGluc3RydWN0aW9uOiBzdHJpbmc7XG5cdFx0LyoqIE5hbWUgb2YgdGhlIHN5bWJvbCB0aGF0IGNvcnJlc3BvbmRzIHdpdGggdGhlIGxvY2F0aW9uIG9mIHRoaXMgaW5zdHJ1Y3Rpb24sIGlmIGFueS4gKi9cblx0XHRzeW1ib2w/OiBzdHJpbmc7XG5cdFx0LyoqIFNvdXJjZSBsb2NhdGlvbiB0aGF0IGNvcnJlc3BvbmRzIHRvIHRoaXMgaW5zdHJ1Y3Rpb24sIGlmIGFueS5cblx0XHRcdFNob3VsZCBhbHdheXMgYmUgc2V0IChpZiBhdmFpbGFibGUpIG9uIHRoZSBmaXJzdCBpbnN0cnVjdGlvbiByZXR1cm5lZCxcblx0XHRcdGJ1dCBjYW4gYmUgb21pdHRlZCBhZnRlcndhcmRzIGlmIHRoaXMgaW5zdHJ1Y3Rpb24gbWFwcyB0byB0aGUgc2FtZSBzb3VyY2UgZmlsZSBhcyB0aGUgcHJldmlvdXMgaW5zdHJ1Y3Rpb24uXG5cdFx0Ki9cblx0XHRsb2NhdGlvbj86IFNvdXJjZTtcblx0XHQvKiogVGhlIGxpbmUgd2l0aGluIHRoZSBzb3VyY2UgbG9jYXRpb24gdGhhdCBjb3JyZXNwb25kcyB0byB0aGlzIGluc3RydWN0aW9uLCBpZiBhbnkuICovXG5cdFx0bGluZT86IG51bWJlcjtcblx0XHQvKiogVGhlIGNvbHVtbiB3aXRoaW4gdGhlIGxpbmUgdGhhdCBjb3JyZXNwb25kcyB0byB0aGlzIGluc3RydWN0aW9uLCBpZiBhbnkuICovXG5cdFx0Y29sdW1uPzogbnVtYmVyO1xuXHRcdC8qKiBUaGUgZW5kIGxpbmUgb2YgdGhlIHJhbmdlIHRoYXQgY29ycmVzcG9uZHMgdG8gdGhpcyBpbnN0cnVjdGlvbiwgaWYgYW55LiAqL1xuXHRcdGVuZExpbmU/OiBudW1iZXI7XG5cdFx0LyoqIFRoZSBlbmQgY29sdW1uIG9mIHRoZSByYW5nZSB0aGF0IGNvcnJlc3BvbmRzIHRvIHRoaXMgaW5zdHJ1Y3Rpb24sIGlmIGFueS4gKi9cblx0XHRlbmRDb2x1bW4/OiBudW1iZXI7XG5cdH1cblxuXHQvKiogTG9naWNhbCBhcmVhcyB0aGF0IGNhbiBiZSBpbnZhbGlkYXRlZCBieSB0aGUgJ2ludmFsaWRhdGVkJyBldmVudC5cblx0XHRWYWx1ZXM6IFxuXHRcdCdhbGwnOiBBbGwgcHJldmlvdXNseSBmZXRjaGVkIGRhdGEgaGFzIGJlY29tZSBpbnZhbGlkIGFuZCBuZWVkcyB0byBiZSByZWZldGNoZWQuXG5cdFx0J3N0YWNrcyc6IFByZXZpb3VzbHkgZmV0Y2hlZCBzdGFjayByZWxhdGVkIGRhdGEgaGFzIGJlY29tZSBpbnZhbGlkIGFuZCBuZWVkcyB0byBiZSByZWZldGNoZWQuXG5cdFx0J3RocmVhZHMnOiBQcmV2aW91c2x5IGZldGNoZWQgdGhyZWFkIHJlbGF0ZWQgZGF0YSBoYXMgYmVjb21lIGludmFsaWQgYW5kIG5lZWRzIHRvIGJlIHJlZmV0Y2hlZC5cblx0XHQndmFyaWFibGVzJzogUHJldmlvdXNseSBmZXRjaGVkIHZhcmlhYmxlIGRhdGEgaGFzIGJlY29tZSBpbnZhbGlkIGFuZCBuZWVkcyB0byBiZSByZWZldGNoZWQuXG5cdFx0ZXRjLlxuXHQqL1xuXHRleHBvcnQgdHlwZSBJbnZhbGlkYXRlZEFyZWFzID0gJ2FsbCcgfCAnc3RhY2tzJyB8ICd0aHJlYWRzJyB8ICd2YXJpYWJsZXMnIHwgc3RyaW5nO1xufVxuXG4iXX0=